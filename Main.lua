-- This file was generated using Luraph Obfuscator v13.5.4

return(function(Bx,bx,Hx,fx,Gx,Ox,Jx,kx,Vx,Sx,wx,Kx,Lx,nx,ox,tx,jx,qx,px,yx,ix,Ux,Px,cx,Ex,Tx,rx,mx,Zx,Nx,Rx,zx,lx,xx,Ax,Dx,Ix,gx,Xx,...)local F,Y,S,h=nil,nil,nil,(nil);local e=(Ux);local W,C,ux=pcall,tostring,0X0001;do while ux<0X4 do do if ux<=0X1 then if ux==0 then do h=nx;end;ux=0X4;else F=string.sub;do ux=2;end;end;else if ux==2 then Y=string.char;ux=0X003;else S=Sx;do ux=0X0;end;end;end;end;end;end;local k=setmetatable;local w,r=nil,nil;for hr=0x0,1 do if hr==0 then w=0X00002^yx;else r=Lx;end;end;ux=0x1;local Cx,a,p,X,U=nil,nil,nil,nil,(nil);while ux~=5 do if ux<=1 then do if ux~=0X0 then Cx=0X1;do ux=0X00000;end;else do a=kx;end;ux=3;end;end;else if ux<=0X002 then U=Xx.rep;do ux=5;end;elseif ux==0X3 then p=px;ux=0x4;else X=gx;ux=2;end;end;end;local t,f,G=unpack or table.unpack,nil,(nil);for y3=0,0X2 do if y3<=0 then f=0X80000000;else if y3==1 then else do G=Gx;end;end;end;end;local B=getfenv;ux=0X00008;local D,x,o,I,O,E,K=nil,nil,nil,nil,nil,nil,nil;repeat if ux<=3 then do if not(ux<=1)then if ux==0X2 then do oend;ux=5;else do O=function()local ff=(nil);for f8=0x00,2 do if f8<=0 then ff=a(o,x,x);else do if f8~=1 then do return ff;end;else do x=x+1;end;end;end;end;end;end;end;ux=0X0;end;else do if ux==0 then E=tx;ux=4;else x=0X0001;do ux=0X2;end;end;end;end;end;else if ux<=5 then do if ux==4 then K=function()local qR,xR,pR,OR,iR=1,nil,nil,nil,nil;while(true)do if qR<=0X0 then do return iR*Bx+OR*65536+pR*Dx+xR;end;else if qR~=0x1 then x=x+Ex;qR=0X0;else xR,pR,OR,iR=a(o,x,x+3);do qR=0X0002;end;end;end;end;end;ux=9;else ux=0X00007;end;end;else if not(ux<=6)then if ux~=0X0007 then do D=(B and B()or rx);end;do ux=6;end;else o=S(F(o,0X5),"..",function(yU)if a(yU,2)==72 then local Q1=0;while(true)do if Q1==0X0 then I=h(F(yU,0X1,0X1));Q1=0x001;else return"";end;end;else local xH=nil;for tJ=0,0X1 do if tJ==0X0 then xH=Y(h(yU,16));else if I then local BP=(U(xH,I));I=nil;do return BP;end;else return xH;end;end;end;end;end);ux=3;end;else do ux=0X1;end;end;end;end;until ux>=9;local P={xx,ox,6};ux=0X003;local A,m,d,z=nil,nil,nil,nil;do repeat if ux<=1 then if ux~=0X0000 then d=Ix;ux=0;else do z={[0]=1};end;ux=0X4;end;else do if ux~=2 then A=4294967296;ux=0x2;else m=A-xx;do ux=1;end;end;end;end;until ux>=4;end;local c=(bit or Ox);do local t0,D0=0,(nil);while t0<0x2 do if t0==0 then D0=Kx;do t0=0X0001;end;else for mu=0X001,0X01F do do(z)[mu]=D0;end;D0=D0*2;end;t0=2;end;end;end;local Z=(f-1);local V=(function()local aq,pq=K(),K();for Rz=0,1 do if Rz==0X0 then if not(pq>=f)then else pq=pq-A;end;else return pq*A+aq;end;end;end);local q,g=function(mv,Qv,Xv)local kv,nv=1,nil;while kv<=1 do if kv~=0 then do nv=(mv/z[Qv])%z[Xv];end;kv=0;else nv=nv-nv%0x00001;kv=2;end;end;return nv;end,(rawset);ux=1;local y,N,j=nil,nil,nil;while ux<3 do if not(ux<=0)then if ux~=0x1 then j=function()local Xv=(K());local Ev,sv,wv,iv,Iv,Mv=0X1,nil,nil,nil,nil,(nil);repeat if Ev<=0X003 then if Ev<=0X1 then if Ev==0X0 then iv=q(sv,0x000014,11);Ev=6;else sv=K();Ev=3;end;else if Ev~=2 then if Xv==0X0 and sv==0X00 then return 0x00000;end;Ev=0X5;else if iv==0 then if Mv~=0 then iv=0X01;Iv=0;else return wv*0;end;elseif iv~=0X7fF then else if Mv==0 then return wv*(0x0/Vx);else return wv*(1/0x0);end;end;do Ev=0X4;end;end;end;elseif not(Ev<=5)then if Ev==6 then Iv=1;do Ev=0x7;end;else Mv=q(sv,0X0,20)*A+Xv;Ev=0x2;end;else do if Ev==0X00004 then return wv*(2^(iv-0X3FF))*(Mv/w+Iv);else wv=(-xx)^q(sv,31,1);do Ev=0X00000;end;end;end;end;until false;end;ux=0X3;else do y=string.match;end;do ux=0x0;end;end;else N={[0X0]={[0]=0,0X1,2,0X03,4,5,fx,ox,8,0x9,10,0Xb,12,Ax,0XE,0X000F},{[0]=1,0X0,3,0X2,0x00005,4,7,0X6,9,8,11,0X000a,Ax,0X0c,15,14},{[0]=0X002,3,0,0X00001,0X6,0X7,0X00004,5,10,0XB,8,9,0X0000E,0XF,0XC,0Xd},{[0]=3,0X02,1,0,0X0007,6,wx,4,0Xb,10,0X9,0X8,15,0X000e,0Xd,12},{[0]=0X4,wx,0X0006,7,0X0,0X1,2,3,0Xc,13,14,0X000f,0x00008,0X0009,0xA,mx},{[0X0]=5,0X4,0X00007,0X6,0X001,0X0,3,2,0Xd,12,15,0xE,0X0009,0X0008,11,10},{[0]=6,0X7,0x0004,5,0X00002,0X3,0,xx,14,0xF,0xC,Ax,10,0XB,Zx,9},{[0X0]=0x00007,0X06,0X5,0X4,zx,2,1,0X0,0X0f,0X0e,13,12,11,0X000A,0X00009,0X008},{[0X0]=8,9,0Xa,11,0X000c,Ax,14,0X00F,0,1,0x002,0X3,4,5,6,0x07},{[0]=9,0X8,0xB,0XA,13,0xc,0X00f,0X0000E,1,0,3,2,wx,4,0X7,0X6},{[0X00]=10,0X0b,0X8,9,14,0X0000F,0xC,0xD,Kx,0X03,0X0,1,0X6,ox,4,0X5},{[0X0]=0XB,10,0X9,8,0X00f,0XE,13,12,0X003,2,1,0X0,0X07,0X6,0X5,4},{[0]=0XC,0X000D,14,0xF,0X00008,qx,0XA,11,4,wx,0x006,7,0X00,0x1,2,3},{[0]=Ax,12,0Xf,0Xe,0x9,Zx,11,0Xa,0x5,0X004,0X7,0X06,0X1,0,0X3,2},{[0X00000]=0X000e,0Xf,12,13,10,11,8,9,6,7,4,wx,2,3,0X0,0x001},{[0]=0xF,0xE,0x0d,12,0Xb,10,9,0X8,0X7,0X6,0X5,4,0X0003,0X00002,1,0x0}};ux=0X2;end;end;local i=(c and c[jx]or function(y5,W5)y5=y5%A;local B5=0X1;W5=W5%A;local i5=(0);do for bo=0,0X00001 do do if bo~=0x0 then return i5+y5*B5+W5*B5;else while y5>Vx and W5>0 do local St,Yt=W5%16,3;local tt=(y5%16);repeat do if Yt<=0X1 then if Yt~=0 then y5=(y5-tt)/0X10;Yt=0;else do W5=(W5-St)/0X10;end;Yt=2;end;elseif Yt~=0X2 then i5=i5+N[tt][St]*B5;Yt=1;else B5=B5*16;break;end;end;until(false);end;end;end;end;end;end);local J=c and c[Nx]or function(sx,Qx)local Hd=2;repeat if not(Hd<=0)then if Hd~=0X001 then sx=sx%A;Hd=1;else Qx=Qx%A;Hd=0;end;else return((sx+Qx)-i(sx,Qx))/0x2;end;until(false);end;local v=cx;local T=(c and c.bor or function(rO,nO)local RO=(1);repeat if RO==0 then nO=nO%A;RO=0X2;else rO=rO%A;RO=0;end;until RO>=0X0002;do return m-J(m-rO,m-nO);end;end);local l=(c and c.bnot or function(Cb)return m-(Cb%A);end);local M=type;ux=5;local H,R,b,u=nil,nil,nil,nil;do repeat do if ux<=0X002 then if not(ux<=0X0)then if ux~=1 then R=R or function(LS,ZS)local YS=(nil);for Yf=0,3 do if Yf<=1 then do if Yf~=0 then if ZS<0 then return H(LS,-ZS);end;else if not(ZS>=0X20)then else return 0;end;end;end;else if Yf~=2 then do return YS-YS%1;end;else YS=(LS%A/z[ZS]);end;end;end;end;ux=0;else u=function()local c1,i1=0X0,(0X0);do while true do local q4=a(o,x,x);do x=x+0X1;end;c1=T(c1,H(J(q4,127),i1));if J(q4,128)~=0X00000 then else return c1;end;i1=i1+0X07;end;end;end;ux=0X006;end;else do b={[0x0009]=0X000,[0X0]=0X09,[0X4]=7,[0X06]=0X002,[0X3]=0X00,[0X4]=0,[0X00001]=0X5,[3]=0X002,[ox]=3};end;do ux=0X1;end;end;else if not(ux<=3)then if ux~=0x4 then H=c and c[ix];ux=3;else do H=H or function(iO,IO)local PO=1;do while(true)do if not(PO<=0X0000)then do if PO==0X0001 then if IO>=32 then return 0;end;PO=0;else return(iO*z[IO])%A;end;end;else do if IO<0x000 then return R(iO,-IO);end;end;PO=0X2;end;end;end;end;end;do ux=0X2;end;end;else R=c and c[Jx];do ux=4;end;end;end;end;until ux>5;end;local Q=(O());local dx=O();do ux=1;end;local ex,Mx=nil,nil;do while ux~=2 do if ux~=0 then ex=function(GK)local EK,nK,XK,yK=0x0000,nil,nil,nil;do repeat if EK<=0 then nK={a(o,x,x+3)};EK=2;else if EK~=0x1 then XK=i(nK[xx],dx);EK=1;else do yK=i(nK[0x2],dx);end;EK=3;end;end;until EK>=0x3;end;local CK=i(nK[0X3],dx);local PK=i(nK[4],dx);do dx=(0X91*dx+GK)%256;end;do x=x+4;end;return PK*Bx+CK*65536+yK*0X100+XK;end;ux=0X0;else do Mx={};end;ux=0x00002;end;end;end;ux=2;local L,hx,Wx,vx,s,Fx,ax,Yx=nil,nil,nil,nil,nil,nil,nil,nil;while 0.9979499257184329 do if not(ux<=5)then if not(ux<=0X8)then if not(ux<=0X9)then if ux~=10 then do Wx=function(...)return e(lx,...),{...};end;end;ux=0X3;else Yx=ax();ux=0x7;end;else function Fx(Lf,pf,wf)local af=(Lf[0x00006]);local Af,kf=Lf[0X0001],Lf[4];local Hf=Lf[2];local Xf=Lf[8];local lf=(Lf[7]);local Wf,Tf=Lf[0X5],Lf[9];local tf=k({},{__mode='v'});local nf=(nil);nf=function(...)local CP=(1);local pP=((B and B()or _ENV));local mP=({});local kP,eP=Wx(...);kP=kP-0X1;local oP=(pP==D and pf or pP);local jP=0X0;for r4=0X000,kP do do if not(Wf>r4)then break;else do(mP)[r4]=eP[r4+0X1];end;end;end;end;(vx)[0x4]=Lf;(vx)[0X1]=mP;do if not kf then eP=nil;elseif not(lf)then else mP[Wf]={n=kP>=Wf and kP-Wf+0X01 or 0,t(eP,Wf+0X1,kP+0X0001)};end;end;if oP==pP then else if E then E(nf,oP);else _ENV=oP;end;end;local UP,PP,cP,OP=W(function()while true do local FH=(Hf[CP]);local CH=(FH[0X4]);do CP=CP+1;end;if not(CH<43)then do if not(CH<0x00041)then if CH>=76 then if CH>=0X51 then if not(CH>=0X000054)then if CH<0X00052 then mP[FH[7]][FH[2]]=mP[FH[0x00001]];else if CH~=83 then(mP)[FH[7]]=FH[2];else if not(mP[FH[0x006]]<=mP[FH[1]])then else do CP=FH[0x7];end;end;end;end;else do if CH<85 then mP[FH[0X7]]=mP[FH[0x6]][FH[0X05]];else if CH==86 then repeat local qw,Pw=tf,(mP);if not(#qw>0X00)then else local qp={};for Lp,pp in X,qw do for rY,dY in X,pp do do if not(dY[1]==Pw and dY[0X2]>=0)then else local ZO=dY[2];if not(not qp[ZO])then else do(qp)[ZO]={Pw[ZO]};end;end;(dY)[0x1]=qp[ZO];(dY)[0x2]=1;end;end;end;end;end;until true;return true,FH[0X7],0x0;else mP[FH[0X0007]]=mP[FH[6]]>=mP[FH[1]];end;end;end;end;else if not(CH<78)then if CH<0x4F then(mP)[FH[0X7]]=H(mP[FH[0x6]],mP[FH[1]]);else if CH==0X50 then if FH[1]==90 then CP=CP-0X0001;Hf[CP]={[0X06]=(FH[6]-42),[0X7]=(FH[7]-42),[0X4]=0X001};elseif FH[1]==0XBd then CP=CP-0X001;do(Hf)[CP]={[0X0007]=(FH[0X7]-181),[0X6]=(FH[6]-181),[4]=0X0003c};end;else do mP[FH[7]]=nil;end;end;else local MI=FH[0x7];(mP[MI])(mP[MI+0X00001],mP[MI+2]);jP=MI-0x01;end;end;else do if CH~=0X4D then local CZ=FH[7];local zZ=FH[0X06];jP=CZ+zZ-1;do repeat local S5,E5=tf,mP;if not(#S5>0)then else local R6=({});for L9,j9 in X,S5 do for Tp,qp in X,j9 do if not(qp[1]==E5 and qp[2]>=0)then else local Jv=(qp[0X2]);if not(not R6[Jv])then else R6[Jv]={E5[Jv]};end;qp[1]=R6[Jv];qp[2]=1;end;end;end;end;until true;end;return true,CZ,zZ;else local F5=FH[0X0007];local z5,L5,Y5=mP[F5]();if not(z5)then else do mP[F5+0X00001]=L5;end;(mP)[F5+2]=Y5;CP=FH[0X6];end;end;end;end;end;else if not(CH<70)then do if not(CH<73)then if CH>=0X4a then if CH~=75 then local Q8=mP[FH[0X0006]]/mP[FH[0X00001]];mP[FH[0X7]]=Q8-Q8%0x0001;else local mL=FH[7];local wL=(G(function(...)(r)();do for Mq,zq,Wq,Cq,Sq,Bq,Zq,jq,Uq,lq in...do r(true,{Mq,zq,Wq,Cq,Sq,Bq,Zq,jq,Uq,lq});end;end;end));(wL)(mP[mL],mP[mL+0x1],mP[mL+2]);jP=mL;(mP)[mL]=wL;CP=FH[6];end;else local QK=FH[7];local MK=(G(function(...)r();for tT in...do r(true,tT);end;end));(MK)(mP[QK],mP[QK+0X001],mP[QK+0x2]);jP=QK;mP[QK]=MK;CP=FH[0x6];end;else if CH>=0X47 then if CH==72 then do mP[FH[0X7]]=mP[FH[0X6]]%FH[0X5];end;else mP[FH[0x7]][FH[0X0002]]=FH[0x5];end;else do mP[FH[7]]=l(mP[FH[6]]);end;end;end;end;else if CH>=67 then if not(CH>=0X44)then local b2=(FH[0X00006]);local u2=(mP[b2]);for Qx=b2+1,FH[1]do do u2=u2..mP[Qx];end;end;mP[FH[7]]=u2;else do if CH~=0X45 then(vx)[FH[6]]=mP[FH[7]];else local MO=mP[FH[0X6]];local DO=(FH[0X7]);mP[DO+0x0001]=MO;do mP[DO]=MO[FH[0x5]];end;end;end;end;else if CH==66 then(mP)[FH[0x0007]]=mP[FH[0x006]]*mP[FH[0X1]];else local Uk,uk=FH[0X00007],((FH[0X00001]-1)*50);local rk=mP[Uk];do for E0=0X1,FH[0X0006]do(rk)[uk+E0]=mP[Uk+E0];end;end;end;end;end;end;else do if CH<0x036 then if CH>=0x30 then if not(CH>=51)then do if not(CH<49)then do if CH==50 then CP=FH[6];else(mP)[FH[0X7]]=not mP[FH[6]];end;end;else mP[FH[0X7]]=mP[FH[0X006]]^mP[FH[1]];end;end;else do if not(CH<0X34)then do if CH~=0X35 then(mP)[FH[7]]=true;else for Ns=FH[0X7],FH[0X6]do mP[Ns]=nil;end;end;end;else local bR=(FH[7]);local RR,jR=mP[bR]();do if not(RR)then else do mP[bR+1]=jR;end;CP=FH[0X6];end;end;end;end;end;else if CH>=45 then if not(CH>=46)then local DY,FY=FH[0X7],(FH[0X01]-1)*0X32;local jY=mP[DY];for m1=1,jP-DY do jY[FY+m1]=mP[DY+m1];end;else if CH~=0x002f then if FH[0X1]==0x63 then CP=CP-1;(Hf)[CP]={[0X004]=0X1,[7]=(FH[7]-222),[0X006]=(FH[0X0006]-0Xde)};else if not(not mP[FH[7]])then else do CP=FH[6];end;end;end;else local yY=FH[7];mP[yY](mP[yY+0x1]);jP=yY-1;end;end;else do if CH~=0x0002c then do if FH[0X001]==123 then CP=CP-1;(Hf)[CP]={[0X7]=(FH[0X7]-179),[4]=0X000d,[6]=(FH[6]-179)};else if mP[FH[0X7]]then CP=FH[0X6];end;end;end;else do(mP)[FH[0x7]]=mP[FH[6]]-mP[FH[1]];end;end;end;end;end;else if CH>=59 then do if not(CH>=0X3E)then if CH>=0x003C then if CH~=0x3d then do repeat local j2,k2=tf,(mP);if#j2>0x0 then local JS={};for Gk,ck in X,j2 do for Z8,T8 in X,ck do if T8[0X1]==k2 and T8[2]>=0X00 then local pW=T8[2];if not JS[pW]then do(JS)[pW]={k2[pW]};end;end;(T8)[0X1]=JS[pW];T8[0X2]=1;end;end;end;end;until true;end;return;else local u1=(FH[0x7]);(mP)[u1]=mP[u1](t(mP,u1+1,jP));jP=u1;end;else do if mP[FH[6]]~=mP[FH[1]]then do CP=FH[7];end;end;end;end;else do if not(CH<63)then if CH~=64 then local HS=wf[FH[0X06]];(HS[1])[HS[0X00002]]=mP[FH[7]];else local l0=FH[0X7];for j7=l0,l0+(FH[6]-0X1)do(mP)[j7]=eP[Wf+(j7-l0)+0X01];end;end;else(mP)[FH[7]]=oP[FH[0X02]];end;end;end;end;else if not(CH>=56)then do if CH==55 then local ef=(FH[7]);local df=(G(function(...)r();do for kt,Rt in...do r(true,kt,Rt);end;end;end));(df)(mP[ef],mP[ef+0X01],mP[ef+2]);jP=ef;(mP)[ef]=df;CP=FH[6];else do if not(mP[FH[0x006]]<=FH[5])then do CP=FH[0X0007];end;end;end;end;end;else if not(CH<0X39)then if CH~=58 then if FH[1]==0XcA then CP=CP-1;(Hf)[CP]={[7]=(FH[7]-107),[0X6]=(FH[0X006]-107),[0X4]=0Xe};elseif FH[0X0001]~=80 then repeat local kV,QV=tf,(mP);if#kV>0X0000 then local AR={};do for Ib,zb in X,kV do do for sA,SA in X,zb do if not(SA[1]==QV and SA[2]>=0)then else local n1=(SA[2]);if not AR[n1]then(AR)[n1]={QV[n1]};end;(SA)[0x1]=AR[n1];do SA[0X2]=1;end;end;end;end;end;end;end;until true;local TV=FH[0x7];return false,TV,TV;else do CP=CP-0X00001;end;(Hf)[CP]={[0X07]=(FH[7]-0X7b),[4]=0X00023,[6]=(FH[6]-123)};end;else do if FH[0X1]==200 then CP=CP-0x1;do(Hf)[CP]={[0X0004]=13,[0X6]=(FH[6]-0x5D),[7]=(FH[7]-0X5D)};end;elseif FH[1]==0X00095 then CP=CP-1;Hf[CP]={[0X00007]=(FH[0X7]-0X00062),[0X6]=(FH[6]-98),[0X4]=80};else mP[FH[7]]=eP[Wf+0X0001];end;end;end;else do if mP[FH[0x06]]~=FH[0X5]then CP=FH[7];end;end;end;end;end;end;end;end;end;else if CH>=21 then if not(CH>=0X020)then if not(CH<26)then if not(CH<0X1d)then if not(CH>=30)then local Vv=FH[7];jP=Vv+FH[6]-1;(mP)[Vv]=mP[Vv](t(mP,Vv+1,jP));jP=Vv;else if CH~=31 then repeat local MW,nW=tf,mP;do if not(#MW>0)then else local dD={};for H3,v3 in X,MW do for Qf,Sf in X,v3 do if not(Sf[1]==nW and Sf[0X2]>=0)then else local Zu=(Sf[0X00002]);if not(not dD[Zu])then else(dD)[Zu]={nW[Zu]};end;do(Sf)[0x1]=dD[Zu];end;(Sf)[0X2]=1;end;end;end;end;end;until true;do return true,FH[7],1;end;else do mP[FH[7]]={};end;end;end;else if CH<0X00001B then do(mP)[FH[7]]=mP[FH[0X6]]%mP[FH[0x1]];end;else if CH~=28 then local Ib=FH[0X007];(mP[Ib])(t(mP,Ib+0x001,jP));jP=Ib-0x1;else do(oP)[FH[2]]=mP[FH[7]];end;end;end;end;else if CH>=0X17 then if not(CH<24)then do if CH~=25 then local Jz=(FH[7]);do(mP)[Jz]=mP[Jz](mP[Jz+0x1]);end;jP=Jz;else(mP)[FH[0x7]]=mP[FH[0X06]]<mP[FH[1]];end;end;else local Ge=(FH[7]);jP=Ge+FH[6]-0X001;(mP[Ge])(t(mP,Ge+0x0001,jP));jP=Ge-0X1;end;else if CH==22 then(mP)[FH[7]]=mP[FH[6]]<=mP[FH[0x1]];else mP[FH[0X7]]=mP[FH[0X0006]]==mP[FH[1]];end;end;end;else if not(CH<0X25)then if CH>=0x028 then if not(CH>=0x0029)then do(mP)[FH[0X007]]=mP[FH[6]]>mP[FH[0x00001]];end;else do if CH==42 then mP[FH[0X7]]=mP[FH[0X6]]~=FH[5];else(mP)[FH[7]]=false;end;end;end;else if not(CH<0X026)then if CH==39 then jP=FH[7];(mP[jP])();jP=jP-0X1;else if not(not(mP[FH[6]]<mP[FH[1]]))then else do CP=FH[7];end;end;end;else local hJ=FH[0x07];(mP)[hJ]=mP[hJ](mP[hJ+1],mP[hJ+2]);jP=hJ;end;end;else if not(CH<0X22)then if not(CH>=35)then repeat local Oj,Dj=tf,(mP);if not(#Oj>0)then else local fP={};for CD,lD in X,Oj do for Tl,El in X,lD do do if not(El[0X1]==Dj and El[0X2]>=0X0)then else local Bn=(El[2]);if not fP[Bn]then(fP)[Bn]={Dj[Bn]};end;(El)[1]=fP[Bn];El[0x02]=0X0001;end;end;end;end;end;until true;local BT=FH[0X00007];return false,BT,BT+FH[6]-2;else if CH~=0x0024 then if FH[1]~=0X9 then mP[FH[0X7]]=-mP[FH[0x006]];else do CP=CP-1;end;(Hf)[CP]={[7]=(FH[0X7]-0x00023),[0X4]=13,[6]=(FH[6]-35)};end;else if mP[FH[6]]<mP[FH[0x1]]then CP=FH[7];end;end;end;else if CH~=0X21 then mP[FH[7]]=mP[FH[6]]+mP[FH[1]];else(mP[FH[0x7]])[mP[FH[6]]]=FH[0X00005];end;end;end;end;else if CH<0Xa then if CH<5 then do if CH>=0X2 then if CH>=3 then if CH==0x4 then if FH[1]~=0Xe then mP[FH[0X007]]=mP[FH[0X6]];else CP=CP-1;(Hf)[CP]={[0x00006]=(FH[0X6]-0X00019),[0x7]=(FH[7]-25),[0X004]=49};end;else(mP)[FH[0X7]]=mP[FH[0x06]]~=mP[FH[0X1]];end;else do if mP[FH[6]]~=FH[5]then else CP=FH[0x7];end;end;end;else do if CH==1 then local ZE,NE=FH[0x7],kP-Wf;if not(NE<0X00000)then else do NE=-1;end;end;for sZ=ZE,ZE+NE do(mP)[sZ]=eP[Wf+(sZ-ZE)+0X01];end;jP=ZE+NE;else local st,Lt=FH[7],FH[0X6];if Lt~=0 then jP=st+Lt-1;end;local kt,Zt=nil,(nil);local ht=FH[1];do if Lt==0X0001 then do kt,Zt=Wx(mP[st]());end;else kt,Zt=Wx(mP[st](t(mP,st+1,jP)));end;end;do if ht==0X0001 then jP=st-1;else if ht==0 then kt=kt+st-0x1;jP=kt;else kt=st+ht-0X0002;do jP=kt+1;end;end;local hW=(0x0);for oC=st,kt do hW=hW+1;(mP)[oC]=Zt[hW];end;end;end;end;end;end;end;else if not(CH<7)then if not(CH<0X8)then if CH~=0X9 then do mP[FH[7]]=FH[0X2];end;else if mP[FH[0X6]]==mP[FH[0x1]]then CP=FH[0X07];end;end;else local O7=(wf[FH[6]]);(mP)[FH[7]]=O7[1][O7[0x2]];end;else if CH==0x6 then mP[FH[0X00007]][mP[FH[0X6]]]=mP[FH[1]];else(mP)[FH[0x7]]=mP[FH[6]]/mP[FH[1]];end;end;end;else if not(CH>=15)then do if not(CH<0Xc)then do if CH<13 then local JC=(af[FH[6]]);local QC,VC=JC[0X3],nil;local fC=#QC;do if not(fC>0X0)then else do VC={};end;for Up=1,fC do local Mp=(QC[Up]);do if Mp[1]==0 then VC[Up-0x0001]={mP,Mp[0X00002]};else VC[Up-1]=wf[Mp[2]];end;end;end;L(tf,VC);end;end;mP[FH[0X007]]=Fx(JC,oP,VC);else if CH==0xE then if FH[0X1]==231 then CP=CP-0X00001;(Hf)[CP]={[6]=(FH[6]-0X09b),[0x4]=4,[7]=(FH[7]-0X9B)};elseif FH[0X1]==146 then CP=CP-1;Hf[CP]={[4]=13,[0X06]=(FH[0x06]-0X00061),[7]=(FH[7]-0x61)};else do(mP)[FH[7]]=#mP[FH[6]];end;end;else if FH[1]==0x0000EC then CP=CP-0x0001;(Hf)[CP]={[6]=(FH[6]-160),[7]=(FH[7]-160),[0X0004]=0X39};else repeat local Le,He=tf,mP;if not(#Le>0X0)then else local TB=({});for QJ,cJ in X,Le do do for Rg,Dg in X,cJ do do if not(Dg[1]==He and Dg[2]>=0X0)then else local OZ=(Dg[0x002]);do if not(not TB[OZ])then else TB[OZ]={He[OZ]};end;end;Dg[0X1]=TB[OZ];Dg[0X00002]=0x001;end;end;end;end;end;end;until true;return false,FH[0X7],jP;end;end;end;end;else do if CH~=0Xb then(mP)[FH[0X7]]=i(mP[FH[0X00006]],mP[FH[1]]);else do(mP)[FH[0X7]]={t({},0x001,FH[0X06])};end;end;end;end;end;else if CH<0X00012 then if CH>=0x0010 then if CH~=17 then(mP)[FH[0X7]]=vx[FH[6]];else repeat local W8,I8,z8=tf,mP,FH[7];if#W8>0 then local Oz=({});for OM,IM in X,W8 do do for KP,GP in X,IM do if GP[1]==I8 and GP[2]>=z8 then local O7=GP[2];do if not(not Oz[O7])then else Oz[O7]={I8[O7]};end;end;(GP)[0X00001]=Oz[O7];GP[0X00002]=1;end;end;end;end;end;until true;end;else local B9=(FH[0x7]);local r9=mP[B9+2];local l9,g9=mP[B9],(mP[B9+1]);do mP[B9]=G(function()for fn=l9,g9,r9 do(r)(true,fn);end;end);end;CP=FH[0X00006];end;else if CH<0X000013 then(mP)[FH[7]]=mP[FH[6]][mP[FH[1]]];else do if CH~=20 then local SU=FH[0X6];mP[FH[0X7]]=mP[SU]..mP[SU+1];else local od=FH[7];local Ud,Dd=mP[od]();if not(Ud)then else CP=FH[0X0006];mP[od+0X3]=Dd;end;end;end;end;end;end;end;end;end;end;end);if UP then do if PP then if OP~=0X00001 then return mP[cP](t(mP,cP+0x001,jP));else return mP[cP]();end;elseif cP then return t(mP,cP,OP);end;end;else if M(PP)=="s\116r\105\110\103"then do if not(y(PP,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(y(PP,"\094.-\058\037\100\043\058 "))then(v)(PP,0X0);else(v)("Lur\097\112\104\032S\099\114i\112\116\058"..(Af[CP-1]or'\040i\110ter\110al\041')..':\032'..C(PP),0X0);end;else v(PP,0X0);end;end;end;do if not(E)then else(E)(nf,pf);end;end;return nf;end;ux=0;end;elseif ux<=6 then s=function()local Rw=nil;for Na=0X0,0X02 do do if not(Na<=0)then if Na~=0X001 then return Rw;else if not(Rw>Z)then else return Rw-A;end;end;else do Rw=u();end;end;end;end;end;ux=1;else if ux~=0X7 then Mx=Hx;ux=0x5;else(vx)[0X3]=Mx;ux=8;end;end;else if ux<=2 then do if not(ux<=0X0)then do if ux~=0x001 then L=Tx;do ux=0X04;end;else ux=9;end;end;else function ax()local ip,rp,ep,Kp,Ep,fp=0X00000,nil,nil,nil,nil,(nil);while ip<0X00006 do if ip<=0x002 then if not(ip<=0)then if ip==1 then ep={};ip=4;else rp={};ip=1;end;else ip=0X2;end;else do if ip<=3 then Ep=1;do ip=5;end;else if ip==0X0004 then Kp={{},{},nil,Hx,Hx,{},nil,nil,Hx};do ip=0X03;end;else do fp=O();end;ip=6;end;end;end;end;end;ip=0;local dp,yp,Zp,jp=nil,nil,nil,nil;do while(true)do if not(ip<=5)then if not(ip<=0x8)then if ip<=0X00009 then(Kp)[10]=K();ip=5;else if ip==10 then Kp[7]=q(fp,2,0X001)~=0X0;do ip=4;end;else do(Kp)[0X000012]=K();end;do ip=0X0006;end;end;end;else if ip<=0X6 then Kp[0X11]=K();break;else if ip~=7 then for As=1,dp do local es,Zs,Ts,rs=0x4,nil,nil,(nil);repeat do if not(es<=2)then do if not(es<=4)then if es~=5 then Ep=Ep+1;do es=7;end;else if Ts==Rx then Zs=Px;elseif Ts==52 then Zs=j();elseif Ts==24 then Zs=F(hx(yp),O());elseif Ts==0X0008f then Zs=K();elseif Ts==0X3 then Zs=F(hx(yp),0x3);elseif Ts==233 then Zs=bx;elseif Ts==0X00De then do Zs=K();end;elseif Ts==30 then Zs=F(hx(yp),j()+K());elseif Ts==134 then Zs=V();end;do es=0x0;end;end;else if es~=3 then Zs=nil;es=0X002;else rp[As-1]=Ep;es=0x0005;end;end;end;else do if not(es<=0)then if es==0X0001 then ep[Ep]=rs;do es=6;end;else Ts=O();do es=3;end;end;else do rs={Zs,{}};end;es=0X00001;end;end;end;end;until es==7;if jp then Mx[Cx]=rs;Cx=Cx+1;end;end;ip=0X9;else do Kp[12]=O();end;ip=0Xb;end;end;end;else do if not(ip<=0X2)then if not(ip<=0x3)then if ip~=0X4 then(Kp)[8]=u();do ip=7;end;else dp=K()-0XD2FE;ip=3;end;else yp=O();ip=1;end;else do if ip<=0 then Kp[4]=q(fp,1,1)~=0;ip=0x0a;else do if ip~=1 then jp=O()~=Vx;ip=0x0008;else Zp={};ip=2;end;end;end;end;end;end;end;end;end;local Np=(Kp[0x00006]);ip=3;local Up=nil;repeat do if ip<=0X002 then if not(ip<=0X0)then if ip~=1 then for kk=0X01,u()do(Zp)[kk]={O(),u()};end;do break;end;else(Kp)[17]=O();do ip=0X0005;end;end;else for iP=0,Up-0X1 do(Np)[iP]=ax();end;ip=0X4;end;else if not(ip<=0X003)then if ip~=0x4 then(Kp)[0x0003]=Zp;ip=0X2;else Kp[mx]=K();ip=1;end;else Up=K()-0Xce55;ip=0;end;end;end;until(false);local Fp=nil;for ED=0X00000,0X2 do if ED<=0 then Kp[0X0000B]=K();else do if ED==0X1 then Fp=K();else for aa=1,Fp do local Da,za,ba=nil,nil,nil;for nC=0,3 do if nC<=0x00001 then if nC~=0 then za=K();else Da=K();end;else if nC~=0X2 then for Vb=Da,za do Kp[0X0001][Vb]=ba;end;else ba=K();end;end;end;end;end;end;end;end;local Ap=(Kp[2]);ip=0x1;local Tp=nil;while ip~=2 do if ip==0 then for vf=1,Tp do(Ap)[vf]={[4]=u(),[ox]=s(),[0x1]=s(),[wx]=O(),[3]=O(),[0X002]=O(),[6]=s()};end;ip=0X002;else Tp=K()-19839;do ip=0;end;end;end;ip=1;while ip<2 do if ip==0 then Kp[9]=u();ip=2;else for GD=1,Tp do local cD=(Kp[Kx][GD]);do for il,Al in ipairs(P)do local Vl,El=nil,nil;do for E6=0X0,2 do if not(E6<=0)then if E6==0X1 then El=cD[Vl];else if El==0X00a then local ZB,LB=nil,(nil);local VB=2;do while VB<=0X2 do if not(VB<=0X0)then do if VB==1 then if LB then local T2=nil;do for HE=0,1 do do if HE==0 then do cD[Vl]=LB[1];end;else T2=LB[0x2];end;end;end;end;do T2[#T2+1]={cD,Vl};end;end;VB=3;else do ZB=rp[cD[Al]];end;VB=0;end;end;else do LB=ep[ZB];end;do VB=1;end;end;end;end;elseif El==0x1 then do(cD)[Al]=GD+cD[Al]+0X1;end;end;end;else Vl=b[Al];end;end;end;end;end;end;ip=0;end;end;ip=1;while(true)do if ip==0X0 then return Kp;else do Kp[0X5]=u();end;ip=0X0;end;end;end;ux=0Xa;end;end;elseif not(ux<=3)then if ux==0x4 then hx=function(TG)local RG,vG,IG=0X4,nil,nil;do repeat if not(RG<=1)then if RG<=0X2 then do return IG;end;else if RG==3 then IG="";do RG=0X00000;end;else vG=K();RG=3;end;end;else if RG==0 then do for VV=1,vG,7997 do local OV=nil;local HV=VV+0X1f3D-0X1;for eF=0,0X3 do do if not(eF<=0X0001)then if eF~=2 then IG=IG..Y(t(OV));else for p8=1,#OV do do for cP=0,0X1 do if cP==0 then OV[p8]=i(OV[p8],Q);else Q=(TG*Q+23)%256;end;end;end;end;end;else do if eF==0x000 then if HV>vG then do HV=vG;end;end;else OV={a(o,x+VV-1,x+HV-1)};end;end;end;end;end;end;end;RG=0X1;else x=x+vG;RG=2;end;end;until(false);end;end;do ux=11;end;else do return Fx(Yx,D,Hx)(...);end;end;else vx={};ux=0x00006;end;end;end;end)(0X001000000,false,nil,6,coroutine.wrap,bit32,"\114\115\104\105\102t",string.byte,0X00000,string.gsub,5,2,coroutine.yield,tonumber,7,setfenv,'\098x\111\114',0X9,rawget,0X034,"\108s\104\105ft",select,true,error,4,table.insert,_ENV,11,8,"b\097\110\100",0x32,3,"#",0x1,0Xd,256,assert,next,string,...);
