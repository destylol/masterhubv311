-- This file was generated using Luraph Obfuscator v13.5.6
local hook
hook = hookmetamethod(game, "__namecall", function(self, ...)
    args = {...}

    if getnamecallmethod() == "FireServer" and #args == 2 and type(args[1]) == "boolean" then
        return task.wait(9e9)
    end

    return hook(self, ...)
end)
return(function(KO,CO,DO,SO,UO,uO,MO,TO,eO,VO,HO,cO,wO,XO,ZO,qO,iO,nO,oO,LO,JO,QO,dO,PO,rO,tO,YO,xO,yO,AO,aO,BO,IO,mO,WO,NO,RO,bO,z,...)local l=DO;local D,I,B=nil,nil,(nil);local h,g,v,y,u,i,jO=IO,KO,BO.char,YO,getfenv,0X0001,(2);local G,p=yO,pcall;while jO~=0X3 do if not(jO<=0)then do if jO~=1 then D=BO.rep;jO=0X0000;else B=oO;jO=3;end;end;else do I=bO;end;jO=1;end;end;local S,b={6,0X4,0X07},rawset;local L=(coroutine.wrap);local K=TO;local w,T={[0X0000]=1},LO or PO;local f=(string.byte);do jO=0;end;local H,J=nil,nil;repeat if jO==0 then do H={[0X0]={[0]=0,1,WO,3,0X4,uO,0X00006,7,8,JO,10,0x0000B,0Xc,13,14,15},{[0X0]=1,0,0x3,2,0x5,4,7,0X6,0x09,8,0xb,0X0a,13,0Xc,0xf,14},{[0X0000]=WO,3,0,0X1,6,0X7,0X4,0X5,0X0A,11,0X00008,0X0009,0Xe,15,12,13},{[0X000]=3,2,0X00001,0X00000,0x00007,0X6,0X005,0x0004,11,0XA,9,8,iO,14,0xd,0Xc},{[0]=ZO,5,0X006,0x07,0x000,1,2,0X3,0Xc,0XD,0Xe,15,0X8,9,10,0XB},{[0]=0X5,ZO,7,6,1,0,3,0X0002,mO,12,15,14,9,0X00008,0Xb,10},{[0]=6,7,0x4,0X5,2,0x3,0X0,0X001,14,15,0x000c,13,nO,0Xb,8,9},{[0X00000]=7,rO,5,4,0x3,2,0X01,0X00000,15,0XE,13,12,11,10,0x9,0x00008},{[0x0]=0x8,9,10,0XB,0Xc,13,14,0XF,0,1,0X2,0X3,0x00004,5,6,7},{[0]=0X9,0X00008,aO,0Xa,0X00d,12,15,0Xe,1,dO,3,2,0X5,0X4,0x07,0x6},{[0]=0X000A,aO,8,JO,0X00E,iO,0Xc,0XD,0X2,0x003,0X000,1,0X6,7,4,5},{[0X0]=11,0XA,JO,0X0008,0X0F,0X0E,13,12,0X003,0X0002,qO,0x00,0X7,6,0X5,4},{[dO]=0Xc,0XD,14,0XF,8,0X9,10,11,4,0X5,0X6,7,0X0000,1,2,0X3},{[0]=mO,0xc,15,14,0X9,8,11,nO,0x0005,0X4,7,0X00006,1,0X0,0X003,0x002},{[0X0]=14,0X0000F,0XC,0X0D,10,0Xb,8,0X00009,0x6,7,4,uO,2,0X0003,0X0,0X001},{[0]=0Xf,0XE,mO,12,11,nO,9,8,0X7,rO,0x5,0X4,0X3,0X2,1,0X0000}};end;do jO=1;end;else J=(u and u()or _ENV);break;end;until(false);local k,Z=tonumber,(nil);local P=(AO.yield);for el=0,1 do if el==0X00000 then else Z=eO;end;end;do jO=0X00;end;local m,r=nil,nil;repeat if jO<=0 then jO=0X1;else if jO==1 then Z=y(g(Z,0x005),"..",function(XA)if f(XA,WO)==0x000048 then do m=k(g(XA,1,0X1));end;do return'';end;else local Ui,Si=0X0,(nil);repeat if Ui==0 then Si=v(k(XA,VO));Ui=0X1;else if m then local bQ=(D(Si,m));m=wO;do return bQ;end;else do return Si;end;end;do Ui=2;end;end;until Ui>1;end;end);jO=0x2;else do r=function()local Re=(nil);local Ae=0X1;repeat if Ae~=0X00000 then Re=f(Z,i,i);Ae=0x0;else i=i+0X01;Ae=2;end;until Ae>0X00001;return Re;end;end;do jO=3;end;end;end;until jO>=3;local d,A=nil,nil;for bD=0,1 do if bD==0X00000 then do d=0X80000000;end;else A=0X2^52;end;end;local q=(4294967296);local a=(function()local FV,EV,BV,HV=f(Z,i,i+0x3);for Yx=0X0,0x1 do if Yx==0X0 then i=i+0X00004;else return HV*0X1000000+BV*65536+EV*0X100+FV;end;end;end);local V=d-1;do jO=0;end;local e=(nil);do repeat do if jO==0X0 then do e=q-1;end;jO=1;else do local H9=0X2;for Gw=0X1,0X1f do do w[Gw]=H9;end;do H9=H9*0X2;end;end;end;do jO=0x2;end;end;end;until jO>=0x02;end;local s=RO;jO=3;local x,R,N,U=nil,nil,nil,(nil);while jO~=4 do do if jO<=1 then if jO==0X0 then do R=function(lv,cv,dv)local Uv=(lv/w[cv])%w[dv];do Uv=Uv-Uv%1;end;do return Uv;end;end;end;jO=1;else N=function()local ZZ,NZ,vZ,bZ,CZ,GZ=nil,nil,nil,nil,nil,nil;local hZ=6;repeat do if not(hZ<=0X003)then do if hZ<=5 then do if hZ==0x4 then return bZ*(WO^(CZ-1023))*(GZ/A+vZ);else do NZ=a();end;do hZ=0X8;end;end;end;else if not(hZ<=0X006)then if hZ~=7 then if ZZ==0X0 and NZ==0 then return 0X0000;end;hZ=0x00002;else bZ=(-1)^R(NZ,0X00001f,0x1);hZ=0X3;end;else ZZ=a();hZ=0x5;end;end;end;else if not(hZ<=0X01)then if hZ~=0X2 then do CZ=R(NZ,0X00014,11);end;hZ=0x1;else vZ=1;hZ=7;end;else do if hZ==0 then if CZ==dO then do if GZ==dO then return bZ*0;else for q8=0X00000,1 do do if q8~=0x0 then vZ=0X0;else CZ=1;end;end;end;end;end;else if CZ==2047 then if GZ~=0x0 then return bZ*(0x001/0X0);else do return bZ*(0X00000/0X00000);end;end;end;end;hZ=0x4;else GZ=R(NZ,0X0,0X14)*q+ZZ;hZ=0X0;end;end;end;end;end;until false;end;jO=2;end;else do if jO==0X02 then do U=(xO or NO);end;jO=0X4;else x=function()local Hg,ug=nil,nil;local yg=(2);repeat if not(yg<=0X0)then if yg~=0X0001 then Hg,ug=a(),a();yg=0X0;else do return ug*q+Hg;end;end;else if ug>=d then ug=ug-q;end;do yg=1;end;end;until false;end;jO=0X0;end;end;end;end;end;local C=(U and U.bxor or function(V2,w2)local X2=0x0;local J2=nil;do repeat if not(X2<=0)then do if X2==1 then J2=1;X2=0X3;else do w2=w2%q;end;do X2=1;end;end;end;else do V2=V2%q;end;do X2=0x00002;end;end;until X2>2;end;X2=0X001;local p2=nil;while 0.7602192146709876 do if X2~=0x0 then p2=0X0;X2=0X0;else while V2>0X00000 and w2>0 do local RJ,uJ,bJ=0x000,nil,nil;repeat if not(RJ<=1)then do if RJ==2 then V2=(V2-uJ)/16;break;else bJ=w2%16;RJ=0X001;end;end;elseif RJ==0 then uJ=V2%0X10;do RJ=0X3;end;else do p2=p2+H[uJ][bJ]*J2;end;do RJ=0X02;end;end;until false;RJ=1;while RJ~=0X2 do if RJ~=0X0000 then do w2=(w2-bJ)/16;end;RJ=0;else do J2=J2*16;end;RJ=0X2;end;end;end;break;end;end;return p2+V2*J2+w2*J2;end);local t=(U and U.band or function(xK,QK)do xK=xK%q;end;QK=QK%q;return((xK+QK)-C(xK,QK))/2;end);local M=(U and U.bor or function(jC,PC)local xC=(0);do repeat if not(xC<=0)then do if xC~=0X01 then PC=PC%q;xC=1;else return e-t(e-jC,e-PC);end;end;else do jC=jC%q;end;xC=0X002;end;until(false);end;end);local c=(U and U.rshift);local EO={};local X,Q=U and U.bnot or function(tu)do return e-(tu%q);end;end,(U and U[HO]);jO=2;local j,sO=nil,nil;do repeat if jO<=0X0001 then if jO==0 then j={[6]=2,[1]=UO,[0X7]=3,[3]=JO,[0x4]=1,[2]=0X1,[0X5]=7,[0X9]=0X4,[0X00003]=8,[0x2]=0X0002,[0x005]=rO};do jO=3;end;else do c=c or function(nM,kM)local rM,UM=2,(nil);do while(true)do do if not(rM<=0X0)then if rM~=0x1 then if not(kM>=32)then else return 0X0;end;do rM=0X01;end;else if kM<0 then return Q(nM,-kM);end;rM=0;end;else UM=(nM%q/w[kM]);break;end;end;end;end;return UM-UM%0X1;end;end;jO=0X00;end;else if jO~=0X02 then sO={};jO=0x00004;else Q=Q or function(MV,QV)if not(QV>=0X20)then else return 0X0000;end;if not(QV<0)then else return c(MV,-QV);end;return(MV*w[QV])%q;end;do jO=0X1;end;end;end;until jO>0x3;end;jO=0X1;local F,W,O=nil,nil,(nil);while jO~=3 do if not(jO<=0)then if jO==1 then F=function()local DZ,UZ=0,0;repeat local ZF=f(Z,i,i);do i=i+1;end;UZ=M(UZ,Q(t(ZF,0X7F),DZ));do if t(ZF,128)==0 then return UZ;end;end;DZ=DZ+0x00007;until false;end;jO=0;else O=function()local rn,Mn=0X0,nil;repeat if rn~=0 then do if Mn>V then do return Mn-q;end;end;end;rn=2;else Mn=F();do rn=1;end;end;until rn==0X2;return Mn;end;jO=3;end;else W=CO;do jO=2;end;end;end;local o=tO;local zO=(r());local GO=(r());local lO=(function(o7)local a7,U7,A7,G7,f7=nil,nil,nil,nil,nil;for nI=0,7 do if nI<=3 then if nI<=0X00001 then if nI==0 then a7={f(Z,i,i+3)};else U7=C(a7[0X001],GO);end;elseif nI==2 then do A7=C(a7[0X0002],GO);end;else G7=C(a7[UO],GO);end;else do if not(nI<=5)then do if nI~=6 then do return f7*0x1000000+G7*65536+A7*0X0000100+U7;end;else i=i+0X4;end;end;else if nI~=0x4 then GO=(133*GO+o7)%0x100;else f7=C(a7[4],GO);end;end;end;end;end;end);local E=(error);do jO=0X0005;end;local pO,hO,kO,gO,fO=nil,nil,nil,nil,nil;repeat do if not(jO<=2)then if not(jO<=3)then if jO~=0X4 then do pO=function(...)return l("#",...),{...};end;end;jO=0X002;else function fO()local zN=1;local ON={};local fN,ZN=nil,nil;while zN<0X2 do do if zN==0X000 then ZN={wO,nil,nil,wO,wO,wO,{},{},{}};zN=0X002;else fN={};do zN=0x0;end;end;end;end;local KN=(nil);for DX=0X0,1 do if DX~=0X0 then ZN[0X04]=F();else KN=1;end;end;zN=1;local DN=(nil);while zN<=0X1 do if zN==0 then ZN[0X1]=R(DN,1,0X1)~=0;zN=0x00002;else do DN=r();end;zN=0;end;end;ZN[0X3]=R(DN,2,1)~=dO;zN=0x0006;local gN,LN,kN,iN,BN=nil,nil,nil,nil,nil;while zN<0X00009 do if not(zN<=3)then do if zN<=0x0005 then if zN~=0X00004 then do kN=r()~=0X000;end;zN=0x08;else ZN[15]=a();zN=0X0;end;else if not(zN<=6)then if zN==0X007 then for aM=0X1,BN do local WM,lM,TM,SM=0,nil,nil,(nil);do while WM~=0X4 do if not(WM<=1)then if WM==2 then SM=a();WM=3;else for Eo=lM,TM do ZN[0X8][Eo]=SM;end;WM=0X004;end;else do if WM~=0x000 then TM=a();do WM=2;end;else lM=a();do WM=1;end;end;end;end;end;end;end;zN=4;else iN={};zN=2;end;else gN=a()-19955;zN=3;end;end;end;else if not(zN<=0x1)then if zN==0X002 then for xC=0X1,gN do local iC=0X5;local fC,pC,SC=nil,nil,(nil);while iC<0x8 do do if not(iC<=0X03)then do if not(iC<=5)then if iC==6 then SC={pC,{}};do iC=0X3;end;else KN=KN+0x1;do iC=0X4;end;end;else do if iC~=4 then do fC=r();end;do iC=0X1;end;else if not(kN)then else local xF=1;do repeat do if xF==0X000 then hO=hO+0X001;do break;end;else do(sO)[hO]=SC;end;xF=0X00;end;end;until(false);end;end;iC=8;end;end;end;end;else if not(iC<=1)then if iC~=2 then(ON)[KN]=SC;iC=0x7;else if fC==99 then pC=N();elseif fC==0X61 then do pC=g(kO(LN),r());end;elseif fC==0X000044 then pC=g(kO(LN),nO);elseif fC==0X0066 then do pC=g(kO(LN),0X05);end;elseif fC==0X0007B then pC=a();elseif fC==0X49 then pC=true;elseif fC==MO then do pC=x();end;elseif fC==XO then pC=N()+a();elseif fC==0X40 then pC=g(kO(LN),nO);elseif fC==180 then pC=g(kO(LN),nO);elseif fC==20 then pC=QO;elseif fC==0X3c then pC=g(kO(LN),r());elseif fC~=0X000015 then else pC=g(kO(LN),nO);end;do iC=6;end;end;else if iC==0X0 then(fN)[xC-1]=KN;do iC=0X0002;end;else pC=nil;iC=0X00000;end;end;end;end;end;end;do zN=1;end;else LN=r();do zN=5;end;end;elseif zN==0X000 then(ZN)[18]=a();do zN=0X00009;end;else do BN=a();end;zN=0x7;end;end;end;do zN=1;end;local HN=(nil);do while zN~=4 do if not(zN<=0x00001)then do if zN~=2 then(ZN)[0xb]=r();zN=0;else HN=a()-cO;zN=0X4;end;end;else if zN==0 then do(ZN)[0x5]=F();end;zN=2;else(ZN)[13]=a();zN=0X00003;end;end;end;end;local rN=ZN[0X9];do for hk=0X0000,HN-0X1 do do rN[hk]=fO();end;end;end;ZN[0X000012]=r();(ZN)[WO]=iN;zN=0X0;while true do if zN==0 then for wF=1,F()do iN[wF]={r(),F()};end;zN=1;else(ZN)[aO]=a();break;end;end;local sN=ZN[0X7];local UN=(a()-0X4b88);for vg=1,UN do(sN)[vg]={[0X07]=O(),[6]=O(),[3]=r(),[5]=F(),[WO]=r(),[0X1]=r(),[0X4]=O()};end;for gy=1,UN do local Py=(ZN[0X7][gy]);for OQ,ZQ in SO(S)do local dQ=(j[ZQ]);local CQ=Py[dQ];do if CQ==0X8 then local Lv,xv=nil,(nil);local iv=(0X0);while iv<=0x002 do if not(iv<=0X0)then if iv==0X1 then xv=ON[Lv];iv=0X0002;else if xv then local cd,gd=2,nil;while 0.8817627023868131 do if cd<=0X000 then do gd=xv[0x2];end;cd=1;else if cd==0X00001 then(gd)[#gd+qO]={Py,dQ};do break;end;else(Py)[dQ]=xv[1];cd=0x00;end;end;end;end;iv=0X00003;end;else Lv=fN[Py[ZQ]];iv=0X1;end;end;else if CQ==7 then Py[ZQ]=gy+Py[ZQ]+0X1;end;end;end;end;end;for fx=0,2 do if fx<=0 then(ZN)[0X6]=F();else do if fx~=1 then return ZN;else ZN[0Xd]=r();end;end;end;end;end;jO=0x6;end;else jO=1;end;else do if not(jO<=0)then do if jO==1 then function gO(jm,Jm,Xm)local Bm=(Jm[0x5]);local bm,am=Jm[0X3],(Jm[0X04]);local pm=Jm[0X9];local Om=(Jm[0X6]);local zm=Jm[0X8];local rm=Jm[0X1];local Lm=Jm[0X7];local Km=(B({},{__mode="\118"}));local hm=nil;if am<0X00001a then if am<0X000d then do if not(am>=6)then if not(am>=0X3)then if am>=1 then if am==2 then hm=function(...)local vd=1;local Fd,Qd={},0x0;local pd=(u and u()or _ENV);local Md,rd=pO(...);local dd={[0X002]=Jm,[1]=Fd};Md=Md-1;for pr=0x00000,Md do if not(Om>pr)then do break;end;else(Fd)[pr]=rd[pr+1];end;end;local Td=((pd==J and Xm or pd));if not rm then do rd=nil;end;elseif not(bm)then else do Fd[Om]={n=Md>=Om and Md-Om+0X001 or 0X0,T(rd,Om+1,Md+1)};end;end;do if Td==pd then else do if not(W)then _ENV=Td;else W(hm,Td);end;end;end;end;do while true do local d4=(Lm[vd]);local X4=d4[0x5];vd=vd+0X001;return(function(i,A,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["AutoFarm_Mobs"]and not A[0][1][A[0][2]]():FindFirstChild("HumanoidRootPart")then TweenFa=Tween(A[0][1][A[0][2]]():GetModelCFrame()*CFrame.new(FarmModes));elseif getgenv().Main["AutoFarm_Mobs"]and A[0][1][A[0][2]]():FindFirstChild("HumanoidRootPart")then if getgenv().Main["Farm_Mode"]~="Behind"then TweenFa=Tween(CFrame.new(A[0][1][A[0][2]]():FindFirstChild("HumanoidRootPart").Position+FarmModes)*AngelsCFrame);else TweenFa=Tween(A[0][1][A[0][2]]():GetModelCFrame()*FarmModes);end;end;end);end;end);end)(Fd,jm,...);end;end;end;else hm=function(...)local FH=({});local uH=(1);local QH=((u and u()or _ENV));local tH,HH=0X0,{[1]=FH,[0X002]=Jm};local BH,dH=pO(...);BH=BH-0X1;for gZ=0x0,BH do do if Om>gZ then FH[gZ]=dH[gZ+0X0001];else break;end;end;end;local yH=(QH==J and Xm or QH);if not rm then dH=nil;elseif bm then(FH)[Om]={n=BH>=Om and BH-Om+0x1 or 0X0,T(dH,Om+0X001,BH+1)};end;if yH~=QH then do if not(W)then _ENV=yH;else W(hm,yH);end;end;end;while true do local FO=Lm[uH];do uH=uH+0X1;end;local OO=FO[0X5];return(function(w,g,...)g[0][1][g[0][2]].Stepped:Connect(function()if getgenv().Main["AutoFarm_Mobs"]or Clip or getgenv().Main["AutoFarm_AllBoss"]or getgenv().Main["AutoMastery"]or getgenv().Main["TP_to_Villages"]or getgenv().Main["TP_to_Trainers"]or getgenv().Main["MuzanTP"]or getgenv().Main["MuzanFlower"]then setfflag("HumanoidParallelRemoveNoPhysics","False");setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2","False");g[1][1][g[1][2]].Character.Humanoid:ChangeState(11);end;if getgenv().Main["WalkSpeed_Enabled"]then g[1][1][g[1][2]].Character:WaitForChild("Humanoid").WalkSpeed=getgenv().Main["WalkSpeed_Value"];end;if getgenv().Main["JumpPower_Enabled"]then g[1][1][g[1][2]].Character:WaitForChild("Humanoid").JumpPower=getgenv().Main["JumpPower_Value"];end;end);end)(FH,jm,...);end;end;end;else hm=function(...)local S9=({});local V9=0X1;local a9={[1]=S9,[0X002]=Jm};local B9=((u and u()or _ENV));local T9,j9=pO(...);do T9=T9-1;end;local D9=((B9==J and Xm or B9));for xB=0,T9 do do if not(Om>xB)then break;else S9[xB]=j9[xB+1];end;end;end;if not rm then do j9=nil;end;elseif bm then S9[Om]={n=T9>=Om and T9-Om+0X01 or 0X0,T(j9,Om+1,T9+1)};end;do if D9~=B9 then do if not(W)then do _ENV=D9;end;else W(hm,D9);end;end;end;end;local q9=0X00;while true do local nu=Lm[V9];local yu=nu[0X5];V9=V9+1;return(function(E,b,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["TP_to_Villages"]then TweenFa=Tween(b[0][1][b[0][2]][getgenv().Main["Selected_Villages"]]);elseif getgenv().Main["TP_to_Trainers"]then TweenFa=Tween(b[1][1][b[1][2]][getgenv().Main["Selected_Trainers"]]);elseif getgenv().Main["MuzanTP"]then if not b[2][1][b[2][2]].Muzan.SpawnPos~=nil then TweenFa=Tween(CFrame.new(b[2][1][b[2][2]].Muzan.SpawnPos.Value));else print("Muzan Not Spawn");end;elseif getgenv().Main["MuzanFlower"]then if not b[2][1][b[2][2]]["Demon_Flowers_Spawn"]~=nil or b[2][1][b[2][2]]["Demon_Flowers_Spawn"]["Demon_Flower"]~=nil then TweenFa=Tween(game:GetService("Workspace")["Demon_Flowers_Spawn"]["Demon_Flower"]:GetModelCFrame());else print("Flower Not Spawn");end;end;end);end;end);end)(S9,jm,...);end;end;end;else do if not(am>=4)then hm=function(...)local BD=({});local kD=0X00001;local SD=(u and u()or _ENV);local RD,tD=pO(...);local oD,XD,ID={[0X002]=Jm,[1]=BD},0,((SD==J and Xm or SD));RD=RD-1;for Ht=0,RD do do if Om>Ht then BD[Ht]=tD[Ht+0X1];else do break;end;end;end;end;if not rm then tD=nil;elseif not(bm)then else(BD)[Om]={n=RD>=Om and RD-Om+1 or 0X0,T(tD,Om+0X1,RD+0X1)};end;do if ID==SD then else do if not(W)then _ENV=ID;else(W)(hm,ID);end;end;end;end;local OD,JD,fD,eD=p(function()while true do local zs=(Lm[kD]);local ss=(zs[0X5]);kD=kD+0X1;if not(ss<8)then if ss<0Xc then if ss>=10 then if ss~=0X0000B then kD=zs[0X7];else BD[zs[4]]=BD[zs[7]]%BD[zs[6]];end;else if ss==0X9 then(BD)[zs[0x4]]=M(BD[zs[0X7]],BD[zs[0X006]]);else local J3,q3=zs[4],BD[zs[7]];do BD[J3+1]=q3;end;(BD)[J3]=q3[zs[0X2]];end;end;else do if not(ss<14)then if not(ss<15)then if ss~=16 then(BD)[zs[0x4]]=BD[zs[0x007]]>BD[zs[6]];else local jk=BD[zs[0X7]]/BD[zs[0X0006]];BD[zs[0X4]]=jk-jk%0x01;end;else local JK=(zs[0X4]);local yK,vK=BD[JK]();do if not(yK)then else do for za=1,zs[0X6]do(BD)[JK+za]=vK[za];end;end;kD=zs[0X07];end;end;end;else if ss~=13 then do BD[zs[4]]=zs[3];end;else if BD[zs[7]]~=BD[zs[0X00006]]then else kD=zs[4];end;end;end;end;end;else if not(ss>=0X4)then if not(ss>=2)then if ss==1 then local d7=zs[4];local t7=(BD[d7]);local H7=((zs[6]-0X0001)*50);do for PB=0X00001,zs[7]do(t7)[H7+PB]=BD[d7+PB];end;end;else BD[zs[4]]=ID[zs[0X3]];end;else if ss==0x3 then(BD)[zs[4]]={T({},1,zs[7])};else for Fy=zs[0X4],zs[0X7]do(BD)[Fy]=nil;end;end;end;else if not(ss<6)then if ss==0X7 then(BD)[1]=ID[zs[3]];kD=kD+0X1;XD=0X1;(BD)[XD]=BD[XD]();do kD=kD+1;end;kD=kD+0X1;do zs=Lm[kD];end;do kD=kD+0x1;end;do BD[1]=BD[1][zs[0x0002]];end;kD=kD+1;BD[0X2]=BD[0x0];zs=Lm[kD];kD=kD+1;(BD[1])[zs[0X3]]=BD[2];do zs=Lm[kD];end;do kD=kD+1;end;do(BD)[1]=ID[zs[0X003]];end;kD=kD+0X1;kD=kD+1;kD=kD+1;XD=1;BD[XD]();XD=XD-0X1;kD=kD+0X1;kD=kD+1;kD=kD+0X0001;repeat local Ti,fi=Km,(BD);if#Ti>0X0 then local pK=({});for te,Pe in o,Ti do for TJ,yJ in o,Pe do if not(yJ[1]==fi and yJ[2]>=0)then else local Ba=yJ[2];do if not pK[Ba]then(pK)[Ba]={fi[Ba]};end;end;yJ[0X1]=pK[Ba];do(yJ)[0x2]=0X001;end;end;end;end;end;until true;return;else BD[zs[4]][BD[zs[0X07]]]=BD[zs[0x6]];end;else if ss==0x005 then else local RC=(pm[zs[0X7]]);local fC=(nil);local GC=(RC[2]);local KC=(#GC);do if KC>0X0 then fC={};for OO=1,KC do local FO=GC[OO];if FO[1]~=0X0 then fC[OO-1]=jm[FO[0X2]];else fC[OO-1]={BD,FO[0X002]};end;end;(K)(Km,fC);end;end;do BD[zs[0x4]]=gO(fC,RC,ID);end;end;end;end;end;end;end);do if OD then if JD then if eD==0X1 then return BD[fD]();else return BD[fD](T(BD,fD+1,XD));end;elseif fD then return T(BD,fD,eD);end;else if s(JD)~="string"then E(JD,0X0);else if not(I(JD,"a\116tempt \116\111\032yi\101ld \097cr\111\115\115\032\109e\116a\109et\104\111d\047C\037\045\099a\108\108 \098\111u\110\100a\114\121"))then else return coroutine.yield();end;if I(JD,'^\046\045:\037\100\043\058\032')then(E)("Luraph Script:"..(zm[kD-1]or'(i\110t\101rn\097l)')..": "..h(JD),0X0);else(E)(JD,0);end;end;end;end;end;else if am~=0X0005 then hm=function(...)local Wm,Hm={},0X0000;local Gm=(1);local um=(u and u()or _ENV);local Em,Cm={[0X002]=Jm,[1]=Wm},((um==J and Xm or um));local Pm,Um=pO(...);Pm=Pm-1;do for wD=0x000,Pm do if Om>wD then(Wm)[wD]=Um[wD+1];else break;end;end;end;do if not rm then Um=nil;elseif bm then Wm[Om]={n=Pm>=Om and Pm-Om+0x0001 or 0x000,T(Um,Om+0X1,Pm+1)};end;end;if Cm==um then else if not(W)then do _ENV=Cm;end;else W(hm,Cm);end;end;local Mm,wm,Nm,om=p(function()while true do local aB=Lm[Gm];local NB=aB[5];Gm=Gm+0X1;if not(NB>=0X007)then do if not(NB<0X0003)then if NB<0X5 then if NB~=4 then do Wm[aB[4]]=c(Wm[aB[7]],Wm[aB[6]]);end;else Wm[aB[4]]=aB[3];end;else if NB==6 then Wm[aB[0X04]]={T({},1,aB[7])};else do(Wm)[aB[0X4]]=Wm[aB[7]]%Wm[aB[0x6]];end;end;end;else do if not(NB<0X1)then do if NB~=2 then Wm[aB[0X00004]]=Wm[aB[7]]*Wm[aB[6]];else Wm[aB[4]]=#Wm[aB[0X7]];end;end;else local wx=(pm[aB[7]]);local cx,Ux=wx[2],nil;local gx=(#cx);if not(gx>0)then else Ux={};for rZ=0X00001,gx do local FZ=cx[rZ];if FZ[1]~=0 then Ux[rZ-1]=jm[FZ[0x2]];else(Ux)[rZ-1]={Wm,FZ[0x2]};end;end;K(Km,Ux);end;Wm[aB[0x004]]=gO(Ux,wx,Cm);end;end;end;end;else do if NB<11 then do if NB>=0X00009 then if NB==10 then if not Wm[aB[0X4]]then Gm=aB[7];end;else end;else do if NB==8 then Wm[1]=Cm[aB[3]];Gm=Gm+0X001;do Hm=1;end;do(Wm)[Hm]=Wm[Hm]();end;aB=Lm[Gm];Gm=Gm+0x1;do Wm[1]=Wm[0X1][aB[0X2]];end;do Gm=Gm+1;end;do Wm[0x2]=Wm[0X0];end;aB=Lm[Gm];Gm=Gm+0X1;(Wm[1])[aB[3]]=Wm[2];aB=Lm[Gm];Gm=Gm+1;(Wm)[0x0001]=Cm[aB[0X3]];Gm=Gm+0X1;Hm=0X001;Wm[Hm]();Hm=Hm-0x1;Gm=Gm+0X01;repeat local Wx,Fx=Km,Wm;if not(#Wx>0)then else local tp={};for cR,GR in o,Wx do for k_,M_ in o,GR do if not(M_[1]==Fx and M_[2]>=0)then else local Ob=(M_[2]);do if not tp[Ob]then do(tp)[Ob]={Fx[Ob]};end;end;end;(M_)[1]=tp[Ob];do(M_)[2]=1;end;end;end;end;end;until true;do return;end;else do Wm[aB[0X4]]=C(Wm[aB[7]],Wm[aB[0x00006]]);end;end;end;end;end;else if NB<0XD then do if NB==0XC then Wm[aB[0X4]]=Cm[aB[3]];else do(Wm)[aB[0X4]]=Wm[aB[7]][Wm[aB[0X00006]]];end;end;end;else do if NB==14 then Gm=aB[7];else local ts=Wm[aB[0X7]]/Wm[aB[0X6]];Wm[aB[4]]=ts-ts%1;end;end;end;end;end;end;end;end);if not(Mm)then if s(wm)~="string"then(E)(wm,0);else if I(wm,'\097t\116e\109\112\116\032to\032\121ield a\099\114\111s\115 met\097\109\101thod\047\067%\045\099a\108l\032\098o\117\110dary')then do return coroutine.yield();end;end;if not(I(wm,"^.-:%d+: "))then E(wm,0);else E("L\117ra\112h \083c\114\105p\116\058"..(zm[Gm-0X1]or'\040\105n\116e\114\110a\108)')..": "..h(wm),0);end;end;else if wm then do if om==1 then do return Wm[Nm]();end;else return Wm[Nm](T(Wm,Nm+0X0001,Hm));end;end;elseif Nm then return T(Wm,Nm,om);end;end;end;else hm=function(...)local h_,L_=1,{};local D_=(u and u()or _ENV);local P_,s_=pO(...);local m_=0X0;local I_={[0X002]=Jm,[1]=L_};local f_=(D_==J and Xm or D_);P_=P_-1;for BC=0X0,P_ do if not(Om>BC)then break;else do(L_)[BC]=s_[BC+1];end;end;end;if not rm then s_=nil;elseif bm then L_[Om]={n=P_>=Om and P_-Om+0X1 or 0,T(s_,Om+0x1,P_+1)};end;do if f_~=D_ then if W then W(hm,f_);else _ENV=f_;end;end;end;local R_,p_,K_,j_=p(function()while true do local La=Lm[h_];local va=La[0X0005];h_=h_+1;if va<0x8 then do if not(va>=0X4)then if not(va<2)then do if va~=0x3 then(L_)[La[4]]=La[0x3];else do L_[La[4]]=not L_[La[0X7]];end;end;end;else if va~=0X1 then do if not(L_[La[0X7]]<L_[La[0x006]])then else h_=La[0X4];end;end;else(L_)[La[0X00004]]=L_[La[0X0007]]<L_[La[6]];end;end;else if va>=0X00006 then do if va==7 then for Ir=La[0x4],La[0X0007]do do L_[Ir]=nil;end;end;else do h_=La[0X7];end;end;end;else do if va~=0X0005 then do if not(not L_[La[4]])then else do h_=La[0x7];end;end;end;else(L_)[1]=f_[La[3]];h_=h_+0X01;h_=h_+1;do h_=h_+0X1;end;m_=1;local o_=(0x1);(L_)[m_]=L_[m_]();La=Lm[h_];do h_=h_+0X1;end;L_[0X1]=L_[0x01][La[2]];h_=h_+1;h_=h_+0X1;h_=h_+1;(L_)[2]=L_[0];La=Lm[h_];do h_=h_+0x1;end;(L_[0X1])[La[3]]=L_[2];do La=Lm[h_];end;h_=h_+0x1;L_[1]=f_[La[0X3]];La=Lm[h_];do h_=h_+0x1;end;L_[0X2]=f_[La[0x3]];h_=h_+0X00001;m_=0X2;(L_)[m_]=L_[m_]();La=Lm[h_];h_=h_+0X1;L_[0X2]=L_[2][La[0x2]];h_=h_+1;h_=h_+1;La=Lm[h_];h_=h_+0x1;(L_)[0X0002]=L_[0X2][La[0X2]];do h_=h_+1;end;(L_[o_])(L_[o_+1]);m_=o_-0X1;h_=h_+0x1;h_=h_+1;La=Lm[h_];h_=h_+0X1;do(L_)[1]=f_[La[3]];end;h_=h_+0X1;h_=h_+1;do h_=h_+1;end;m_=0x1;(L_[m_])();m_=m_-0X1;h_=h_+1;repeat local o8,C8=Km,(L_);if not(#o8>0X00000)then else local Ol={};for Fd,Vd in o,o8 do for rC,HC in o,Vd do do if HC[1]==C8 and HC[0x2]>=0X00 then local EP=HC[0X2];do if not Ol[EP]then do Ol[EP]={C8[EP]};end;end;end;(HC)[0X00001]=Ol[EP];do HC[2]=0x1;end;end;end;end;end;end;until true;return;end;end;end;end;end;else do if not(va<0xc)then if va>=14 then if va==15 then L_[La[0x004]]=true;else end;else do if va~=0x00D then do L_[La[0X4]]={T({},0X1,La[7])};end;else(L_)[La[4]]=L_[La[7]]*L_[La[0x6]];end;end;end;else if va>=0XA then do if va~=11 then do L_[La[4]]=L_[La[0x0007]]/L_[La[0X00006]];end;else local BM=pm[La[0X07]];local NM,LM=BM[2],(nil);local KM=#NM;if KM>0 then LM={};for ji=0X01,KM do local ci=NM[ji];do if ci[1]~=0 then do(LM)[ji-1]=jm[ci[0x2]];end;else do(LM)[ji-1]={L_,ci[2]};end;end;end;end;K(Km,LM);end;L_[La[0X00004]]=gO(LM,BM,f_);end;end;else if va==0X09 then(L_)[La[0X4]]=f_[La[0x0003]];else if not(L_[La[0X7]]<L_[La[6]])then do h_=La[4];end;end;end;end;end;end;end;end;end);if not(R_)then if s(p_)~="string"then(E)(p_,0);else if not(I(p_,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if I(p_,"\094.\045\058%d+:\032")then E('\076u\114aph\032\083\099rip\116\058'..(zm[h_-1]or"(in\116e\114\110al\041")..': '..h(p_),0);else E(p_,0);end;end;else if p_ then if j_==1 then return L_[K_]();else return L_[K_](T(L_,K_+0x1,m_));end;elseif not(K_)then else return T(L_,K_,j_);end;end;end;end;end;end;end;else if am<9 then if am<0X00007 then hm=function(...)local RZ=(0X01);local CZ=({});local hZ=(u and u()or _ENV);local sZ=({[1]=CZ,[0X002]=Jm});local FZ,MZ=(hZ==J and Xm or hZ),(0);local tZ,cZ=pO(...);tZ=tZ-1;do for AD=0,tZ do if not(Om>AD)then break;else CZ[AD]=cZ[AD+0X01];end;end;end;if not rm then cZ=nil;elseif not(bm)then else do(CZ)[Om]={n=tZ>=Om and tZ-Om+1 or 0X0,T(cZ,Om+1,tZ+1)};end;end;if FZ~=hZ then if not(W)then _ENV=FZ;else W(hm,FZ);end;end;local ZZ,xZ,GZ,qZ=p(function()do while true do local z1=(Lm[RZ]);local o1=(z1[5]);RZ=RZ+1;if o1>=8 then if not(o1>=12)then if not(o1>=0Xa)then if o1~=9 then local n2=pm[z1[7]];local G2=(n2[0x0002]);local w2=(nil);local K2=(#G2);do if K2>0X0 then w2={};for qn=1,K2 do local Dn=G2[qn];if Dn[0x001]==0x000 then(w2)[qn-1]={CZ,Dn[0x0002]};else w2[qn-0x001]=jm[Dn[2]];end;end;K(Km,w2);end;end;do(CZ)[z1[4]]=gO(w2,n2,FZ);end;else local hh=z1[4];local Zh=CZ[hh];local gh,zh=CZ[hh+1],(CZ[hh+2]);(CZ)[hh]=L(function()for kR=Zh,gh,zh do P(true,kR);end;end);RZ=z1[0X7];end;else if o1==11 then CZ[z1[4]]=z1[0X3];else CZ[z1[0X004]]=CZ[z1[7]]<CZ[z1[0X006]];end;end;else if not(o1<14)then if not(o1<15)then do if o1~=0x10 then do CZ[z1[4]]={T({},0X001,z1[7])};end;else for bh=z1[4],z1[0X0007]do CZ[bh]=nil;end;end;end;else(CZ)[z1[0X004]]=CZ[z1[0X7]]+CZ[z1[0X6]];end;else do if o1~=13 then local x9=jm[0X0];CZ[0X0]=x9[0X00001][x9[0X00002]];local J9=(CZ[0]);RZ=RZ+1;RZ=RZ+0X1;z1=Lm[RZ];RZ=RZ+1;local c9=0x0;do CZ[c9+0x1]=J9;end;CZ[c9]=J9[z1[2]];RZ=RZ+0X1;CZ[2]={};z1=Lm[RZ];do RZ=RZ+1;end;(CZ)[0X0003]=z1[0X00003];do z1=Lm[RZ];end;RZ=RZ+1;do(CZ)[4]=FZ[z1[3]];end;RZ=RZ+0X1;RZ=RZ+1;z1=Lm[RZ];RZ=RZ+0X1;c9=0X4;do J9=CZ[0x00004];end;CZ[c9+0X01]=J9;(CZ)[c9]=J9[z1[0X2]];z1=Lm[RZ];RZ=RZ+1;do(CZ)[0X6]=z1[0X3];end;RZ=RZ+1;c9=4;CZ[c9]=CZ[c9](CZ[c9+0x1],CZ[c9+2]);MZ=c9;z1=Lm[RZ];do RZ=RZ+0X1;end;do CZ[4]=CZ[4][z1[2]];end;do RZ=RZ+0X1;end;x9=jm[0X1];(CZ)[5]=x9[0X1][x9[2]];z1=Lm[RZ];RZ=RZ+0x1;(CZ)[5]=CZ[0X00005][z1[2]];RZ=RZ+1;CZ[0X004]=CZ[4][CZ[5]];z1=Lm[RZ];RZ=RZ+0X1;do(CZ)[0X4]=CZ[0X4][z1[0x2]];end;RZ=RZ+1;RZ=RZ+1;z1=Lm[RZ];RZ=RZ+0x001;CZ[4]=CZ[0X4][z1[2]];z1=Lm[RZ];RZ=RZ+0X1;CZ[0X4]=CZ[0X4][z1[0X002]];RZ=RZ+0X1;RZ=RZ+1;z1=Lm[RZ];RZ=RZ+0x1;do(CZ)[0x0005]=z1[3];end;z1=Lm[RZ];RZ=RZ+1;do CZ[0X6]=FZ[z1[0X3]];end;z1=Lm[RZ];RZ=RZ+0X00001;c9=0x006;J9=CZ[0x6];CZ[c9+1]=J9;CZ[c9]=J9[z1[2]];z1=Lm[RZ];do RZ=RZ+1;end;CZ[0x8]=z1[3];do RZ=RZ+0X1;end;do c9=6;end;do CZ[c9]=CZ[c9](CZ[c9+0x01],CZ[c9+2]);end;MZ=c9;local i9=(0X00003);do z1=Lm[RZ];end;RZ=RZ+0X1;(CZ)[0x00006]=CZ[0X6][z1[0X00002]];do RZ=RZ+0X1;end;RZ=RZ+1;RZ=RZ+0x1;x9=jm[0X001];(CZ)[7]=x9[1][x9[0X2]];RZ=RZ+1;do RZ=RZ+1;end;z1=Lm[RZ];do RZ=RZ+1;end;(CZ)[0x7]=CZ[7][z1[0X2]];do RZ=RZ+1;end;RZ=RZ+0X1;RZ=RZ+0X1;(CZ)[0X6]=CZ[0X0006][CZ[0X7]];do z1=Lm[RZ];end;RZ=RZ+1;CZ[0X6]=CZ[0x06][z1[2]];RZ=RZ+0x01;RZ=RZ+1;z1=Lm[RZ];RZ=RZ+0X1;CZ[0X6]=CZ[6][z1[2]];z1=Lm[RZ];do RZ=RZ+1;end;(CZ)[6]=CZ[0X6][z1[2]];RZ=RZ+1;local V9=(CZ[i9]);do for ZG=i9+1,6 do do V9=V9..CZ[ZG];end;end;end;(CZ)[3]=V9;z1=Lm[RZ];RZ=RZ+1;CZ[2][z1[0X00003]]=CZ[3];RZ=RZ+0x1;c9=0X00;(CZ[c9])(CZ[c9+0x01],CZ[c9+2]);MZ=c9-1;RZ=RZ+0X0001;RZ=RZ+0X1;RZ=RZ+1;do repeat local AB,wB=Km,(CZ);if#AB>0 then local Pp={};do for FM,TM in o,AB do do for wC,rC in o,TM do do if not(rC[1]==wB and rC[2]>=0X0)then else local lL=(rC[0X02]);do if not(not Pp[lL])then else Pp[lL]={wB[lL]};end;end;rC[0x001]=Pp[lL];(rC)[2]=1;end;end;end;end;end;end;end;until true;end;return;else CZ[z1[0X4]]=-CZ[z1[7]];end;end;end;end;else if not(o1>=4)then do if o1<0x2 then do if o1~=1 then if not(CZ[z1[7]]<CZ[z1[0X06]])then else do RZ=z1[4];end;end;else end;end;else if o1==0X03 then CZ[z1[4]]=FZ[z1[3]];else RZ=z1[0X007];end;end;end;else if not(o1<0X00006)then if o1~=0X007 then repeat local sV,YV,lV=Km,CZ,z1[0x4];if not(#sV>0X00000)then else local ZU={};do for rJ,tJ in o,sV do for Kw,jw in o,tJ do do if jw[1]==YV and jw[0X02]>=lV then local GB=jw[2];if not(not ZU[GB])then else(ZU)[GB]={YV[GB]};end;jw[1]=ZU[GB];do(jw)[2]=0X1;end;end;end;end;end;end;end;until true;else local mN=(CZ[z1[0x007]]/CZ[z1[6]]);CZ[z1[4]]=mN-mN%0x01;end;else if o1~=5 then CZ[z1[0x4]]=CZ[z1[0x7]][CZ[z1[0X6]]];else do CZ[z1[0X004]]=CZ[z1[0X7]]<=CZ[z1[0X6]];end;end;end;end;end;end;end;end);if ZZ then do if xZ then if qZ~=0X1 then return CZ[GZ](T(CZ,GZ+1,MZ));else return CZ[GZ]();end;elseif GZ then return T(CZ,GZ,qZ);end;end;else if s(xZ)=="string"then if not(I(xZ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if I(xZ,"\094.\045\058%\100\043\058\032")then E('\076u\114a\112\104\032\083cri\112t:'..(zm[RZ-0x1]or"(in\116\101rna\108\041")..": "..h(xZ),0);else(E)(xZ,0X0);end;else(E)(xZ,0);end;end;end;else if am==8 then hm=function(...)local kb=0x1;local ab=({});local Ib=(0x0);local Ob=((u and u()or _ENV));local Fb=({[0X002]=Jm,[1]=ab});local Bb,Sb=pO(...);do Bb=Bb-1;end;do for Xi=0,Bb do if Om>Xi then ab[Xi]=Sb[Xi+0X001];else break;end;end;end;local Db=(Ob==J and Xm or Ob);do if not rm then Sb=nil;elseif not(bm)then else ab[Om]={n=Bb>=Om and Bb-Om+1 or 0,T(Sb,Om+1,Bb+1)};end;end;if Db==Ob then else if W then(W)(hm,Db);else _ENV=Db;end;end;local sb,wb,ob,fb=p(function()while true do local K4=(Lm[kb]);local s4=(K4[0X5]);kb=kb+0X1;if s4<6 then if s4<0X003 then if not(s4>=0X1)then ab[K4[4]]=ab[K4[0X07]][ab[K4[0x0006]]];else if s4==2 then local vg=(pm[K4[0X007]]);local gg,lg=vg[0X002],nil;local Sg=#gg;if Sg>0X00000 then lg={};do for s5=1,Sg do local W5=gg[s5];do if W5[0X1]~=0 then do(lg)[s5-1]=jm[W5[2]];end;else(lg)[s5-1]={ab,W5[0X2]};end;end;end;end;K(Km,lg);end;(ab)[K4[0X4]]=gO(lg,vg,Db);else(ab)[K4[0X4]]={T({},0X1,K4[7])};end;end;else if s4<4 then ab[K4[0x4]]=K4[0X00003];else if s4==0X5 then ab[1]=Db[K4[3]];kb=kb+1;do Ib=0X01;end;ab[Ib]=ab[Ib]();K4=Lm[kb];kb=kb+1;ab[0X1]=ab[1][K4[0X2]];kb=kb+0X1;kb=kb+1;kb=kb+1;ab[2]=ab[0x0];do K4=Lm[kb];end;kb=kb+0X1;do ab[0X01][K4[3]]=ab[0x00002];end;K4=Lm[kb];do kb=kb+1;end;(ab)[0X1]=Db[K4[3]];kb=kb+1;do kb=kb+1;end;do kb=kb+1;end;Ib=0x01;ab[Ib]();Ib=Ib-1;kb=kb+0X0001;repeat local dv,ev=Km,(ab);if not(#dv>0X0)then else local D1={};do for sd,dd in o,dv do for Wj,Oj in o,dd do if Oj[1]==ev and Oj[0X02]>=0 then local yN=Oj[2];if not(not D1[yN])then else D1[yN]={ev[yN]};end;do(Oj)[0X1]=D1[yN];end;(Oj)[2]=1;end;end;end;end;end;until true;do return;end;else ab[K4[0X4]]=X(ab[K4[7]]);end;end;end;else do if not(s4>=9)then if s4<0X7 then ab[K4[0X4]]=ab[K4[0x07]]*ab[K4[0X6]];else if s4==8 then ab[K4[0X04]]=Db[K4[3]];else end;end;else if not(s4<0x00a)then do if s4~=11 then local K_,C_=K4[4],ab[K4[7]];(ab)[K_+0X1]=C_;ab[K_]=C_[K4[0X2]];else do ab[K4[0x00004]]=K4[0X0003];end;end;end;else kb=K4[7];end;end;end;end;end;end);do if not(sb)then do if s(wb)=="string"then if I(wb,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(I(wb,"^.-:%d+: "))then E(wb,0);else E("Luraph Script:"..(zm[kb-1]or"\040\105nte\114nal\041")..":\032"..h(wb),0);end;else(E)(wb,0X0);end;end;else if wb then if fb~=1 then return ab[ob](T(ab,ob+0X1,Ib));else return ab[ob]();end;elseif ob then return T(ab,ob,fb);end;end;end;end;else hm=function(...)local Rd=0x001;local Ud={};local ud=(u and u()or _ENV);local vd,rd={[1]=Ud,[0X002]=Jm},0x00000;local Gd,Bd=pO(...);local cd=(ud==J and Xm or ud);do Gd=Gd-0X0001;end;for Ao=0x00000,Gd do if not(Om>Ao)then do break;end;else do Ud[Ao]=Bd[Ao+0X1];end;end;end;if not rm then Bd=nil;elseif not(bm)then else do(Ud)[Om]={n=Gd>=Om and Gd-Om+1 or 0,T(Bd,Om+1,Gd+1)};end;end;do if cd~=ud then if W then W(hm,cd);else _ENV=cd;end;end;end;local gd,Cd,ad,Md=p(function()while true do local CP=(Lm[Rd]);local wP=CP[5];do Rd=Rd+0X01;end;if wP<0x7 then if not(wP<0X3)then do if wP>=5 then if wP~=0X6 then(Ud)[1]=cd[CP[3]];Rd=Rd+1;rd=0X00001;(Ud)[rd]=Ud[rd]();do Rd=Rd+0X1;end;Rd=Rd+0x1;CP=Lm[Rd];do Rd=Rd+0X1;end;(Ud)[1]=Ud[1][CP[2]];Rd=Rd+1;Ud[0x2]=Ud[0];CP=Lm[Rd];Rd=Rd+0X1;Ud[0x1][CP[0X003]]=Ud[0x2];CP=Lm[Rd];do Rd=Rd+0X00001;end;(Ud)[0X1]=cd[CP[0X3]];Rd=Rd+1;Rd=Rd+1;Rd=Rd+1;rd=1;(Ud[rd])();rd=rd-1;do Rd=Rd+0X1;end;do Rd=Rd+0X01;end;do Rd=Rd+0X0001;end;repeat local yH,gH=Km,(Ud);if#yH>0 then local jx=({});for t0,m0 in o,yH do do for uv,Hv in o,m0 do do if not(Hv[0X001]==gH and Hv[0X002]>=0)then else local ak=(Hv[0X2]);if not jx[ak]then do jx[ak]={gH[ak]};end;end;Hv[1]=jx[ak];(Hv)[0x002]=1;end;end;end;end;end;end;until true;do return;end;else do Rd=CP[0X7];end;end;else if wP==0X00004 then(Ud)[CP[4]]=cd[CP[0X03]];else(Ud)[CP[4]]=Ud[CP[7]]/Ud[CP[0X00006]];end;end;end;else if not(wP<0x0001)then if wP~=0x2 then(Ud)[CP[0X04]]=Q(Ud[CP[0x7]],Ud[CP[0X6]]);else Ud[CP[4]]=Ud[CP[0X7]]<=Ud[CP[0x6]];end;else Ud[CP[0X4]]={T({},1,CP[0X7])};end;end;else if not(wP>=10)then if wP<8 then else if wP==0X9 then do for Rx=CP[0X00004],CP[7]do do Ud[Rx]=nil;end;end;end;else Ud[CP[4]]=CP[3];end;end;else if wP<0XC then if wP~=0X00B then if Ud[CP[7]]==Ud[CP[6]]then else Rd=CP[4];end;else if not(Ud[CP[7]]<Ud[CP[6]])then else Rd=CP[4];end;end;else do if wP==0Xd then local B_,H_=pm[CP[7]],nil;local W_=(B_[0x2]);local u_=(#W_);if u_>0X0 then H_={};for WT=0X1,u_ do local NT=(W_[WT]);if NT[1]~=0X00 then do H_[WT-0X1]=jm[NT[2]];end;else H_[WT-1]={Ud,NT[0X002]};end;end;K(Km,H_);end;do Ud[CP[0X4]]=gO(H_,B_,cd);end;else do if Ud[CP[7]]~=Ud[CP[6]]then else Rd=CP[0x4];end;end;end;end;end;end;end;end;end);if gd then do if Cd then do if Md==0X01 then return Ud[ad]();else return Ud[ad](T(Ud,ad+1,rd));end;end;elseif ad then do return T(Ud,ad,Md);end;end;end;else if s(Cd)=="string"then if not(I(Cd,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(I(Cd,'\094.-\058%\100+\058\032'))then(E)(Cd,0);else(E)("Luraph Script:"..(zm[Rd-1]or"(i\110\116\101\114\110al)")..'\058 '..h(Cd),0x0);end;else(E)(Cd,0X0);end;end;end;end;end;else if am<0X00b then do if am==10 then hm=function(...)local Nd,nd=1,({});local Zd=((u and u()or _ENV));local pd={[1]=nd,[0X002]=Jm};local rd,Md=pO(...);local vd=(Zd==J and Xm or Zd);rd=rd-1;for O2=0,rd do if not(Om>O2)then break;else do(nd)[O2]=Md[O2+0X1];end;end;end;if not rm then Md=nil;elseif bm then(nd)[Om]={n=rd>=Om and rd-Om+1 or 0,T(Md,Om+0X001,rd+1)};end;local Ud=0X0;if vd~=Zd then if not(W)then _ENV=vd;else W(hm,vd);end;end;local qd,cd,Pd,Rd=p(function()while true do local mG=Lm[Nd];local XG=mG[5];Nd=Nd+0x1;do if not(XG>=6)then if not(XG<3)then if XG<0x4 then nd[mG[0X4]][nd[mG[7]]]=nd[mG[6]];else if XG~=0x0005 then local iB=(pm[mG[0X00007]]);local tB=iB[0x002];local vB,LB=#tB,nil;do if not(vB>0X0)then else LB={};for pa=0X00001,vB do local Ha=tB[pa];if Ha[1]~=0 then(LB)[pa-1]=jm[Ha[0X0002]];else LB[pa-1]={nd,Ha[2]};end;end;K(Km,LB);end;end;do nd[mG[0X4]]=gO(LB,iB,vd);end;else end;end;else do if not(XG>=0x1)then local i7=mG[4];local B7,G7=nd[i7]();if B7 then Nd=mG[7];nd[i7+0X03]=G7;end;else if XG==2 then local BB=mG[0X7];local uB=(nd[BB]);for mx=BB+1,mG[6]do uB=uB..nd[mx];end;nd[mG[4]]=uB;else do(nd)[mG[4]]=mG[3];end;end;end;end;end;else if not(XG>=0X09)then if not(XG<7)then if XG~=8 then nd[mG[4]]=nd[mG[0X0007]]<=nd[mG[0X6]];else Nd=mG[7];end;else nd[0X1]=vd[mG[0x3]];do Nd=Nd+1;end;Nd=Nd+0x1;Nd=Nd+1;Ud=1;nd[Ud]=nd[Ud]();Nd=Nd+1;Nd=Nd+1;mG=Lm[Nd];Nd=Nd+0X1;(nd)[1]=nd[0X1][mG[0X002]];Nd=Nd+0x1;Nd=Nd+0X001;Nd=Nd+1;nd[0X2]=nd[0];mG=Lm[Nd];Nd=Nd+0X1;nd[0X001][mG[0x3]]=nd[2];mG=Lm[Nd];Nd=Nd+0X1;(nd)[1]=vd[mG[3]];do Nd=Nd+1;end;Nd=Nd+1;do Nd=Nd+1;end;Ud=1;nd[Ud]();Ud=Ud-0X1;Nd=Nd+0X1;Nd=Nd+0x00001;Nd=Nd+0X01;do repeat local Kn,Jn=Km,nd;if not(#Kn>0x0)then else local e0={};do for b4,s4 in o,Kn do do for Hi,Ti in o,s4 do do if not(Ti[1]==Jn and Ti[2]>=0)then else local wA=Ti[0X2];if not e0[wA]then do e0[wA]={Jn[wA]};end;end;do(Ti)[0x01]=e0[wA];end;do(Ti)[0X2]=1;end;end;end;end;end;end;end;end;until true;end;return;end;else if not(XG>=10)then nd[mG[0X04]]=vd[mG[0X003]];else do if XG==0XB then(nd)[mG[0X004]]={T({},0X01,mG[0X7])};else do for Uw=mG[4],mG[7]do(nd)[Uw]=nil;end;end;end;end;end;end;end;end;end;end);if not(qd)then if s(cd)~='st\114in\103'then(E)(cd,0);else do if I(cd,"\097\116temp\116 t\111 yi\101l\100 ac\114\111\115\115\032m\101tamethod/\067\037-ca\108\108 bo\117nd\097\114y")then return coroutine.yield();end;end;do if not(I(cd,"^.-:%d+: "))then E(cd,0);else(E)("Luraph Script:"..(zm[Nd-1]or"(internal)")..": "..h(cd),0);end;end;end;else if cd then if Rd~=1 then return nd[Pd](T(nd,Pd+1,Ud));else return nd[Pd]();end;elseif not(Pd)then else return T(nd,Pd,Rd);end;end;end;else do hm=function(...)local mj=(0X001);local dj=({});local Fj=((u and u()or _ENV));local Lj,Yj={[0X002]=Jm,[1]=dj},0;local Jj,qj=pO(...);local Cj=(Fj==J and Xm or Fj);Jj=Jj-1;for hJ=0X0,Jj do do if Om>hJ then dj[hJ]=qj[hJ+0X1];else do break;end;end;end;end;if not rm then qj=nil;elseif bm then(dj)[Om]={n=Jj>=Om and Jj-Om+1 or 0x0,T(qj,Om+1,Jj+0X1)};end;if Cj~=Fj then do if not(W)then _ENV=Cj;else W(hm,Cj);end;end;end;local gj,cj,Zj,jj=p(function()while true do local dY=(Lm[mj]);local VY=dY[0x5];mj=mj+1;if not(VY<6)then if VY<0X009 then do if VY>=0X0007 then if VY==0X00008 then dj[dY[0X4]][dj[dY[7]]]=dj[dY[0x6]];else local hW=(pm[dY[0X007]]);local TW,vW=hW[0X2],(nil);local KW=#TW;if KW>0X000 then vW={};for KN=0x1,KW do local tN=TW[KN];if tN[1]~=0 then vW[KN-0X1]=jm[tN[2]];else do vW[KN-1]={dj,tN[0x02]};end;end;end;K(Km,vW);end;dj[dY[0X4]]=gO(vW,hW,Cj);end;else if dj[dY[0X04]]then mj=dY[0X07];end;end;end;else if VY<11 then if VY~=10 then(dj)[dY[0X004]]=dY[3];else local di=dY[0X4];local Yi,ui=dj[di]();if Yi then mj=dY[0X7];dj[di+0X3]=ui;end;end;else do if VY~=0Xc then(dj)[dY[0x4]]=Q(dj[dY[0X007]],dj[dY[0x6]]);else dj[dY[0X4]]=Cj[dY[3]];end;end;end;end;else do if not(VY<3)then if VY<0x4 then do dj[1]=Cj[dY[0X3]];end;mj=mj+0X00001;Yj=1;(dj)[Yj]=dj[Yj]();do dY=Lm[mj];end;mj=mj+0x1;do(dj)[0x0001]=dj[0X1][dY[0X002]];end;mj=mj+1;mj=mj+1;mj=mj+0X00001;(dj)[2]=dj[0];do dY=Lm[mj];end;do mj=mj+0X001;end;(dj[0X01])[dY[3]]=dj[2];dY=Lm[mj];mj=mj+1;dj[0X1]=Cj[dY[3]];mj=mj+0X01;do mj=mj+0X1;end;mj=mj+0X1;do Yj=1;end;dj[Yj]();do Yj=Yj-0X1;end;mj=mj+1;mj=mj+0X1;dY=Lm[mj];mj=mj+0X1;dj[0X1]=Cj[dY[0X3]];mj=mj+1;mj=mj+0X1;dY=Lm[mj];mj=mj+1;do(dj)[2]=Cj[dY[0x00003]];end;mj=mj+0X001;do mj=mj+1;end;mj=mj+1;Yj=0x002;do dj[Yj]=dj[Yj]();end;mj=mj+1;mj=mj+0X1;do dY=Lm[mj];end;mj=mj+0X1;local G7=(1);(dj)[2]=dj[0X2][dY[2]];dY=Lm[mj];mj=mj+0X1;dj[0x2]=dj[0X00002][dY[0X0002]];mj=mj+0X1;mj=mj+1;mj=mj+0x1;dj[G7](dj[G7+0X1]);Yj=G7-1;mj=mj+1;mj=mj+0X1;mj=mj+1;repeat local WA,uA=Km,dj;if#WA>0 then local aV=({});for tz,sz in o,WA do do for us,qs in o,sz do if not(qs[0X00001]==uA and qs[0X2]>=0)then else local Ag=qs[0X00002];if not(not aV[Ag])then else aV[Ag]={uA[Ag]};end;(qs)[0X00001]=aV[Ag];qs[0X2]=1;end;end;end;end;end;until true;return;else do if VY~=0X005 then do mj=dY[0X0007];end;else end;end;end;else if VY>=1 then do if VY~=2 then dj[dY[4]]=dj[dY[0X7]][dj[dY[0X6]]];else for OO=dY[4],dY[0X07]do do(dj)[OO]=nil;end;end;end;end;else dj[dY[0x4]]={T({},0X001,dY[7])};end;end;end;end;end;end);if not(gj)then do if s(cj)=='\115\116r\105n\103'then if not(I(cj,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(I(cj,"^.-:%d+: "))then(E)(cj,0X00);else(E)("Luraph Script:"..(zm[mj-1]or"(internal)")..': '..h(cj),0);end;else E(cj,0);end;end;else if cj then if jj==1 then return dj[Zj]();else do return dj[Zj](T(dj,Zj+1,Yj));end;end;elseif not(Zj)then else return T(dj,Zj,jj);end;end;end;end;end;end;else if am==0XC then hm=function(...)local FO,r1=0,{};local f1=({[0X002]=Jm,[1]=r1});local F1=((u and u()or _ENV));local y1=((F1==J and Xm or F1));local OO=(0x01);local S1,P1=pO(...);do S1=S1-1;end;for NV=0,S1 do if not(Om>NV)then break;else do r1[NV]=P1[NV+0X1];end;end;end;if not rm then P1=nil;elseif not(bm)then else r1[Om]={n=S1>=Om and S1-Om+0X1 or 0,T(P1,Om+1,S1+1)};end;if y1==F1 then else if W then W(hm,y1);else do _ENV=y1;end;end;end;local q1,K1,k1,n1=p(function()while true do local Jn=Lm[OO];local Cn=(Jn[5]);OO=OO+0X001;if not(Cn<0X07)then if Cn<0Xa then if not(Cn>=0x8)then if r1[Jn[7]]~=r1[Jn[6]]then else OO=Jn[4];end;else if Cn~=0X9 then do r1[Jn[4]]={T({},0X1,Jn[7])};end;else(r1)[Jn[0X4]]=true;end;end;else do if Cn>=12 then if Cn==0xD then do r1[Jn[0X4]]=r1[Jn[0X00007]]~=r1[Jn[6]];end;else local Gk=(Jn[0X4]);for Qv=Gk,Gk+(Jn[7]-1)do r1[Qv]=P1[Om+(Qv-Gk)+0X1];end;end;else do if Cn~=11 then local Jg,lg=Jn[4],r1[Jn[0X007]];do(r1)[Jg+1]=lg;end;(r1)[Jg]=lg[Jn[0X2]];else do OO=Jn[0X00007];end;end;end;end;end;end;else do if Cn<0X003 then if not(Cn<0X1)then if Cn==0x00002 then(r1)[Jn[4]]=Jn[0X3];else end;else do(y1)[Jn[0x0003]]=r1[Jn[4]];end;end;else if Cn>=0X5 then if Cn~=0X006 then r1[Jn[4]]=r1[Jn[7]];else r1[Jn[4]]=y1[Jn[3]];end;else if Cn~=0x4 then local s3=(nil);local f3=pm[Jn[0X7]];local t3=f3[2];local d3=#t3;if d3>0X0 then s3={};for DD=0x001,d3 do local wD=(t3[DD]);if wD[1]~=0X0 then(s3)[DD-0X00001]=jm[wD[2]];else(s3)[DD-1]={r1,wD[0X2]};end;end;(K)(Km,s3);end;r1[Jn[4]]=gO(s3,f3,y1);else r1[0X1]=y1[Jn[3]];do OO=OO+1;end;FO=0X1;(r1)[FO]=r1[FO]();Jn=Lm[OO];do OO=OO+0X1;end;r1[1]=r1[0X1][Jn[2]];do OO=OO+0X1;end;do r1[0x2]=r1[0X0];end;Jn=Lm[OO];OO=OO+1;(r1[0X1])[Jn[3]]=r1[2];do Jn=Lm[OO];end;OO=OO+1;r1[1]=y1[Jn[0x3]];OO=OO+1;FO=0X1;(r1[FO])();FO=FO-0X1;OO=OO+1;repeat local AP,hP=Km,(r1);if not(#AP>0X0)then else local s5={};for BR,eR in o,AP do for B5,Y5 in o,eR do if not(Y5[1]==hP and Y5[0X2]>=0X0)then else local Qx=Y5[0X2];if not(not s5[Qx])then else s5[Qx]={hP[Qx]};end;Y5[1]=s5[Qx];do Y5[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);if not(q1)then if s(K1)=="string"then if not(I(K1,"\097tt\101m\112t\032\116o\032\121\105\101\108\100 \097\099\114o\115s m\101\116a\109et\104\111\100/C%-c\097\108\108 \098\111un\100\097\114\121"))then else return coroutine.yield();end;do if not(I(K1,'^.-:%\100+:\032'))then(E)(K1,0);else E('Lurap\104\032S\099r\105p\116\058'..(zm[OO-0X1]or"(internal)")..":\032"..h(K1),0X000);end;end;else E(K1,0X0);end;else if K1 then do if n1~=1 then return r1[k1](T(r1,k1+1,FO));else return r1[k1]();end;end;elseif not(k1)then else return T(r1,k1,n1);end;end;end;else hm=function(...)local Ax,vx=1,({});local Bx=((u and u()or _ENV));local kx=({[0X002]=Jm,[1]=vx});local Wx,Qx=pO(...);Wx=Wx-0X1;for eF=0,Wx do if Om>eF then(vx)[eF]=Qx[eF+1];else do break;end;end;end;local Hx=((Bx==J and Xm or Bx));if not rm then Qx=nil;elseif not(bm)then else vx[Om]={n=Wx>=Om and Wx-Om+0x001 or 0,T(Qx,Om+1,Wx+0X1)};end;local xx=0;if Hx~=Bx then do if W then(W)(hm,Hx);else _ENV=Hx;end;end;end;while true do local m9=(Lm[Ax]);Ax=Ax+1;local a9=(m9[0X5]);return(function(I,Y,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["Farm_Mode"]=="Above"then FarmModes=Vector3.new(0,tonumber(getgenv().Main["Distance_Farm"]),0);AngelsCFrame=CFrame.Angles(-90,0,0);elseif getgenv().Main["Farm_Mode"]=="Below"then FarmModes=Vector3.new(0,tonumber(-getgenv().Main["Distance_Farm"]),0);AngelsCFrame=CFrame.Angles(90,0,0);else FarmModes=CFrame.new(0,0,getgenv().Main["Distance_Farm"]);end;end);end;end);end)(vx,jm,...);end;end;end;end;end;end;end;else if am>=0X13 then if am>=22 then if am>=24 then if am~=0x19 then hm=function(...)local Rn,Sn=1,({});local In=(u and u()or _ENV);local un={[1]=Sn,[0X002]=Jm};local Nn=(In==J and Xm or In);local sn,on=pO(...);local Yn=0;sn=sn-0X1;do for gV=0,sn do if not(Om>gV)then break;else do Sn[gV]=on[gV+1];end;end;end;end;do if not rm then do on=nil;end;elseif bm then(Sn)[Om]={n=sn>=Om and sn-Om+0x0001 or 0,T(on,Om+0X001,sn+1)};end;end;if Nn==In then else if W then W(hm,Nn);else _ENV=Nn;end;end;local fn,Un,hn,cn=p(function()do while true do local Kv=(Lm[Rn]);local Vv=(Kv[0X5]);do Rn=Rn+1;end;if Vv<7 then if Vv<0X3 then if Vv>=0x1 then if Vv~=2 then Sn[Kv[0X0004]]=un[Kv[7]];else(Sn)[Kv[0x004]]=nil;end;else end;else if not(Vv>=5)then do if Vv==0X0004 then(Sn)[Kv[4]]=Kv[3];else do(Sn)[Kv[0X4]]={T({},0X1,Kv[7])};end;end;end;else do if Vv==6 then do Sn[Kv[0X0004]]=-Sn[Kv[0x7]];end;else(Sn)[Kv[0X4]]=Nn[Kv[0X3]];end;end;end;end;else if Vv>=10 then if Vv>=12 then if Vv~=0X0d then for EU=Kv[0X4],Kv[7]do do Sn[EU]=nil;end;end;else(Sn)[Kv[0X4]]=not Sn[Kv[0X7]];end;else if Vv==0XB then do Rn=Kv[7];end;else Sn[Kv[4]]=Kv[0X3];end;end;else if not(Vv>=8)then local Jy=pm[Kv[7]];local ky,hy=Jy[2],(nil);local xy=(#ky);if not(xy>0)then else hy={};do for Yw=0x1,xy do local xw=ky[Yw];if xw[0X001]==0X0 then(hy)[Yw-1]={Sn,xw[0x2]};else hy[Yw-1]=jm[xw[0X2]];end;end;end;K(Km,hy);end;Sn[Kv[0X4]]=gO(hy,Jy,Nn);else if Vv~=9 then Sn[Kv[4]]=Sn[Kv[7]]*Sn[Kv[6]];else Sn[1]=Nn[Kv[3]];Rn=Rn+1;Rn=Rn+0X0001;Rn=Rn+1;Yn=0X1;Sn[Yn]=Sn[Yn]();Rn=Rn+1;Rn=Rn+1;Kv=Lm[Rn];Rn=Rn+0X1;Sn[1]=Sn[0X1][Kv[2]];Rn=Rn+0X1;Rn=Rn+0x0001;Rn=Rn+0X1;Sn[0X2]=Sn[0X0];do Kv=Lm[Rn];end;Rn=Rn+0X00001;(Sn[0X00001])[Kv[3]]=Sn[2];Kv=Lm[Rn];Rn=Rn+1;(Sn)[0x1]=Nn[Kv[3]];Rn=Rn+1;Yn=1;(Sn[Yn])();Yn=Yn-1;do Rn=Rn+0X01;end;Rn=Rn+0X0001;Rn=Rn+0x01;repeat local oH,WH=Km,(Sn);if#oH>0 then local Cb=({});for uS,IS in o,oH do for pL,PL in o,IS do if not(PL[1]==WH and PL[0X002]>=0X0000)then else local bs=(PL[2]);if not(not Cb[bs])then else Cb[bs]={WH[bs]};end;(PL)[0X1]=Cb[bs];(PL)[0X002]=1;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);do if fn then if Un then if cn==1 then return Sn[hn]();else return Sn[hn](T(Sn,hn+0X1,Yn));end;elseif hn then return T(Sn,hn,cn);end;else if s(Un)=="string"then if I(Un,"\097tt\101\109\112\116\032t\111\032\121ie\108d a\099\114\111\115\115\032\109e\116ame\116\104o\100\047\067\037\045c\097\108l\032b\111u\110\100\097\114\121")then return coroutine.yield();end;if I(Un,"^.-:%d+: ")then(E)('\076\117\114aph\032Sc\114\105\112t:'..(zm[Rn-0X00001]or'\040\105n\116e\114\110al)')..'\058\032'..h(Un),0x0);else E(Un,0);end;else(E)(Un,0);end;end;end;end;else do hm=function(...)local KI,xI,GI=0X1,{},0;local HI=({[0X002]=Jm,[1]=xI});local TI=(u and u()or _ENV);local wI=((TI==J and Xm or TI));local DI,lI=pO(...);DI=DI-1;for fm=0,DI do if not(Om>fm)then break;else xI[fm]=lI[fm+1];end;end;if not rm then lI=nil;elseif not(bm)then else xI[Om]={n=DI>=Om and DI-Om+1 or 0X0,T(lI,Om+0X1,DI+0x1)};end;if wI==TI then else if not(W)then _ENV=wI;else W(hm,wI);end;end;local SI,mI,fI,OI=p(function()while true do local Dl=Lm[KI];local Yl=(Dl[5]);KI=KI+0X1;if Yl>=6 then if not(Yl>=9)then if Yl<0x7 then do KI=Dl[7];end;else if Yl~=0x8 then xI[Dl[0X04]]={T({},0X1,Dl[7])};else xI[Dl[4]]=xI[Dl[7]]-xI[Dl[0X006]];end;end;else if Yl<11 then if Yl==0x0000a then(xI)[Dl[0X4]]=xI[Dl[7]]^xI[Dl[6]];else(xI)[Dl[0X004]]=wI[Dl[0x3]];end;else if Yl==12 then do(xI)[1]=wI[Dl[3]];end;KI=KI+0X1;KI=KI+0x1;KI=KI+1;GI=0x001;(xI)[GI]=xI[GI]();KI=KI+0x1;KI=KI+0X1;Dl=Lm[KI];KI=KI+1;(xI)[1]=xI[1][Dl[0X2]];KI=KI+1;KI=KI+1;KI=KI+1;(xI)[2]=xI[0];Dl=Lm[KI];KI=KI+0x00001;(xI[1])[Dl[3]]=xI[2];Dl=Lm[KI];KI=KI+1;(xI)[1]=wI[Dl[0X3]];KI=KI+1;KI=KI+0x1;KI=KI+1;GI=1;xI[GI]();GI=GI-0X1;KI=KI+0X1;repeat local xk,Qk=Km,(xI);if not(#xk>0X000)then else local YZ={};for cI,YI in o,xk do for er,Dr in o,YI do if not(Dr[0X01]==Qk and Dr[2]>=0X0)then else local Cp=Dr[0x2];if not YZ[Cp]then(YZ)[Cp]={Qk[Cp]};end;(Dr)[0X0001]=YZ[Cp];Dr[2]=1;end;end;end;end;until true;return;else xI[Dl[4]]=xI[Dl[0X7]]~=xI[Dl[0X006]];end;end;end;else if Yl>=0X0003 then if not(Yl>=0x4)then(HI)[Dl[0X7]]=xI[Dl[0X00004]];else if Yl~=0X005 then else local py,Py=Dl[0X4],Dl[7];do GI=py+Py-0X1;end;repeat local US,vS=Km,(xI);do if not(#US>0)then else local eM={};do for fk,Nk in o,US do for Pu,Su in o,Nk do do if not(Su[0X001]==vS and Su[0x2]>=0X0)then else local vD=(Su[2]);if not eM[vD]then(eM)[vD]={vS[vD]};end;Su[0x1]=eM[vD];Su[2]=0X1;end;end;end;end;end;end;end;until true;return true,py,Py;end;end;else if not(Yl>=1)then for cY=Dl[0x00004],Dl[7]do(xI)[cY]=nil;end;else if Yl~=2 then local Ms=(pm[Dl[0x7]]);local Xs=(Ms[2]);local Qs=(nil);local Ps=(#Xs);do if not(Ps>0)then else do Qs={};end;for SR=1,Ps do local DR=(Xs[SR]);if DR[1]==0X00000 then Qs[SR-0X1]={xI,DR[2]};else do Qs[SR-1]=jm[DR[2]];end;end;end;K(Km,Qs);end;end;do xI[Dl[0X004]]=gO(Qs,Ms,wI);end;else do(xI)[Dl[4]]=Dl[0X3];end;end;end;end;end;end;end);if SI then do if mI then if OI==0X00001 then do return xI[fI]();end;else do return xI[fI](T(xI,fI+0X1,GI));end;end;elseif fI then return T(xI,fI,OI);end;end;else do if s(mI)~="string"then E(mI,0);else if not(I(mI,'a\116\116\101m\112\116 \116o\032yi\101ld\032\097cr\111\115\115 \109\101\116\097met\104\111d\047\067\037-\099al\108 bo\117nd\097\114\121'))then else do return coroutine.yield();end;end;if not(I(mI,'\094.\045\058\037d\043: '))then(E)(mI,0);else E('\076u\114ap\104 S\099\114\105p\116:'..(zm[KI-1]or"(internal)")..": "..h(mI),0X00000);end;end;end;end;end;end;end;else do if am~=0X17 then hm=function(...)local SU,NU,UU=0,{},(0x001);local oU=(u and u()or _ENV);local EU=((oU==J and Xm or oU));local YU,LU=pO(...);local iU={[0X002]=Jm,[1]=NU};YU=YU-1;for oP=0,YU do if Om>oP then NU[oP]=LU[oP+1];else do break;end;end;end;if not rm then LU=nil;elseif bm then do(NU)[Om]={n=YU>=Om and YU-Om+0x1 or 0X0,T(LU,Om+1,YU+1)};end;end;if EU==oU then else if not(W)then _ENV=EU;else(W)(hm,EU);end;end;do while true do local h_=(Lm[UU]);UU=UU+1;local D_=(h_[5]);do return(function(Z,a,...)spawn(function()while task.wait(.5)do pcall(function()if getgenv().Main["Inf_Breath"]then pcall(function()getrenv()._G:AddBreath(9e9);end);end;end);end;end);end)(NU,jm,...);end;end;end;end;else do hm=function(...)local ml={};local bl=0X1;local al=(u and u()or _ENV);local El,xl=pO(...);local ol=({[0X002]=Jm,[1]=ml});do El=El-0X00001;end;for nv=0X00000,El do if not(Om>nv)then break;else do(ml)[nv]=xl[nv+1];end;end;end;local cl=0;local ul=(al==J and Xm or al);if not rm then xl=nil;elseif not(bm)then else do(ml)[Om]={n=El>=Om and El-Om+1 or 0X0,T(xl,Om+0x1,El+0X1)};end;end;if ul~=al then if not(W)then _ENV=ul;else W(hm,ul);end;end;local Zl,fl,rl,Kl=p(function()while true do local oQ=(Lm[bl]);local wQ=oQ[0X5];bl=bl+0x01;if wQ<6 then do if wQ>=0X00003 then if wQ<4 then bl=oQ[7];else do if wQ==0x5 then local Pv=oQ[4];local Cv,fv=ml[Pv]();if not(Cv)then else for Pw=1,oQ[0X06]do(ml)[Pv+Pw]=fv[Pw];end;bl=oQ[7];end;else ml[oQ[4]]=ul[oQ[3]];end;end;end;else if not(wQ<1)then if wQ==2 then for zk=oQ[4],oQ[7]do do ml[zk]=nil;end;end;else(ml)[oQ[4]]=oQ[0x3];end;else local WT,XT=pm[oQ[0X7]],(nil);local rT=WT[2];local PT=(#rT);if not(PT>0X00)then else XT={};do for ey=0X00001,PT do local Cy=rT[ey];do if Cy[1]==0X0 then(XT)[ey-1]={ml,Cy[2]};else XT[ey-0X1]=jm[Cy[2]];end;end;end;end;(K)(Km,XT);end;ml[oQ[4]]=gO(XT,WT,ul);end;end;end;else if not(wQ>=0x9)then do if not(wQ<0x0007)then if wQ==8 then do(ol)[oQ[0x00007]]=ml[oQ[0x4]];end;else(ml)[oQ[0X4]]=ml[oQ[7]]%ml[oQ[0X6]];end;else local aj=(ml[oQ[0X7]]/ml[oQ[6]]);ml[oQ[4]]=aj-aj%1;end;end;else if not(wQ>=11)then do if wQ~=10 then(ml)[0x0001]=ul[oQ[0X3]];bl=bl+1;bl=bl+0X1;bl=bl+0X1;cl=0x0001;ml[cl]=ml[cl]();bl=bl+1;do bl=bl+0X0001;end;oQ=Lm[bl];bl=bl+1;(ml)[0X001]=ml[1][oQ[2]];bl=bl+1;bl=bl+1;bl=bl+1;do(ml)[0X00002]=ml[0];end;oQ=Lm[bl];bl=bl+1;ml[0X01][oQ[3]]=ml[0X002];oQ=Lm[bl];bl=bl+0X1;ml[1]=ul[oQ[3]];oQ=Lm[bl];bl=bl+0x1;(ml)[2]=ul[oQ[0X3]];bl=bl+0X1;cl=2;local vM=(1);do(ml)[cl]=ml[cl]();end;bl=bl+0x1;bl=bl+0X1;do oQ=Lm[bl];end;bl=bl+1;(ml)[2]=ml[2][oQ[2]];bl=bl+1;bl=bl+1;oQ=Lm[bl];bl=bl+1;do(ml)[2]=ml[2][oQ[0X2]];end;bl=bl+1;ml[vM](ml[vM+0x01]);cl=vM-0x00001;oQ=Lm[bl];bl=bl+1;(ml)[1]=ul[oQ[3]];bl=bl+1;bl=bl+0x001;bl=bl+1;cl=1;ml[cl]();cl=cl-0X1;do bl=bl+0X1;end;bl=bl+0x1;bl=bl+0x1;repeat local W9,Z9=Km,ml;if#W9>0 then local Vi=({});for KZ,JZ in o,W9 do do for PV,cV in o,JZ do if cV[1]==Z9 and cV[2]>=0X0 then local CC=(cV[0X2]);if not Vi[CC]then Vi[CC]={Z9[CC]};end;do cV[1]=Vi[CC];end;cV[2]=0X1;end;end;end;end;end;until true;return;else if ml[oQ[0X00007]]==ml[oQ[0x0006]]then do bl=oQ[4];end;end;end;end;else if wQ==12 then(ml)[oQ[0X4]]={T({},0X1,oQ[7])};else end;end;end;end;end;end);do if not(Zl)then if s(fl)~="\115t\114ing"then(E)(fl,0X00);else if I(fl,'\097\116\116\101\109pt\032t\111\032\121i\101l\100 \097c\114\111ss\032\109\101\116am\101th\111\100\047\067\037\045c\097ll \098o\117\110\100\097\114y')then return coroutine.yield();end;do if not(I(fl,"^.-:%d+: "))then(E)(fl,0);else E("\076\117\114a\112\104 \083c\114i\112t:"..(zm[bl-1]or"(internal)")..": "..h(fl),0);end;end;end;else if fl then if Kl==1 then return ml[rl]();else return ml[rl](T(ml,rl+1,cl));end;elseif rl then return T(ml,rl,Kl);end;end;end;end;end;end;end;end;else if am>=0x14 then if am==21 then hm=function(...)local y1,Z1=0X1,({});local B1=0X0;local g1=({[1]=Z1,[0X002]=Jm});local d1=(u and u()or _ENV);local Y1,V1=pO(...);Y1=Y1-1;for fJ=0X0,Y1 do do if not(Om>fJ)then do break;end;else do(Z1)[fJ]=V1[fJ+0x1];end;end;end;end;local o1=(d1==J and Xm or d1);do if not rm then V1=nil;elseif bm then Z1[Om]={n=Y1>=Om and Y1-Om+1 or 0,T(V1,Om+0X1,Y1+0X1)};end;end;if o1==d1 then else if W then(W)(hm,o1);else _ENV=o1;end;end;do while true do local Zx=(Lm[y1]);do y1=y1+0x1;end;local Ax=(Zx[0X005]);do return(function(W,p,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="Normal"then p[0][1][p[0][2]](getgenv().Main["Kill_Aura_Mode"]);elseif getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="Fastest"then p[1][1][p[1][2]](getgenv().Main["Kill_Aura_Mode"]);elseif getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="AutoCombo"then p[2][1][p[2][2]]();wait(.6);elseif getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="Normal"and getgenv().Main["AutoMastery"]then p[0][1][p[0][2]]("fist_combat");elseif getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="Fastest"and getgenv().Main["AutoMastery"]then p[1][1][p[1][2]]("fist_combat");elseif getgenv().Main["Fast_Attack"]and getgenv().Main["Attack_Mode"]=="AutoCombo"and getgenv().Main["AutoMastery"]then p[2][1][p[2][2]]();wait(.6);end;end);end;end);end)(Z1,jm,...);end;end;end;end;else do hm=function(...)local A3=1;local T3={};local R3=(u and u()or _ENV);local n3,w3=pO(...);local m3,I3=(R3==J and Xm or R3),{[1]=T3,[0X002]=Jm};n3=n3-0X1;local c3=(0);for pY=0X0,n3 do do if not(Om>pY)then do break;end;else(T3)[pY]=w3[pY+0x001];end;end;end;if not rm then w3=nil;elseif bm then T3[Om]={n=n3>=Om and n3-Om+0X1 or 0,T(w3,Om+0X0001,n3+0x1)};end;if m3==R3 then else if not(W)then _ENV=m3;else(W)(hm,m3);end;end;while true do local mI=(Lm[A3]);local xI=mI[0X5];do A3=A3+0x1;end;return(function(Q,n,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["SkillZ"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("Z");task.wait();UsingSkill=false;end;if getgenv().Main["SkillX"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("X");task.wait();UsingSkill=false;end;if getgenv().Main["SkillC"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("C");task.wait();UsingSkill=false;end;if getgenv().Main["SkillV"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("V");task.wait();UsingSkill=false;end;if getgenv().Main["SkillB"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("B");task.wait();UsingSkill=false;end;if getgenv().Main["SkillN"]and not UsingSkills then UsingSkill=true;n[0][1][n[0][2]]("N");task.wait();UsingSkill=false;end;for A,T in pairs(n[1][1][n[1][2]].PlayerGui.MainGuis.Items.Scroll:GetChildren())do Insert=true;if T.ClassName=="Frame"and T.Name~="Health Elixir"and T.Name~="Health Regen Elixir"and T.Name~="Stamina Elixir"and T.Name~="Bandage"then for M,W in pairs(n[2][1][n[2][2]])do if W==T.Name then Insert=false;end;end;if Insert==true then table.insert(n[2][1][n[2][2]],T.Name);end;end;end;end);end;end);end)(T3,jm,...);end;end;end;end;else hm=function(...)local A7,B7=1,({});local R7=((u and u()or _ENV));local y7={[1]=B7,[0X002]=Jm};local C7,X7=pO(...);local l7=(R7==J and Xm or R7);C7=C7-1;do for hV=0,C7 do if not(Om>hV)then do break;end;else B7[hV]=X7[hV+1];end;end;end;do if not rm then X7=nil;elseif bm then(B7)[Om]={n=C7>=Om and C7-Om+0x1 or 0,T(X7,Om+1,C7+1)};end;end;do if l7~=R7 then do if W then(W)(hm,l7);else do _ENV=l7;end;end;end;end;end;local p7=0x00;while true do local Qe=Lm[A7];local We=Qe[0x5];do A7=A7+0X1;end;return(function(m,h,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["Combat_Mode"]=="Fist"then getgenv().Main["Kill_Aura_Mode"]="fist_combat";elseif getgenv().Main["Combat_Mode"]=="Sword"then getgenv().Main["Kill_Aura_Mode"]="Sword_Combat_Slash";elseif getgenv().Main["Kill_Aura_Mode"]=="Claw"then getgenv().Main["Kill_Aura_Mode"]="claw_Combat_Slash";end;end);end;end);end)(B7,jm,...);end;end;end;end;else if not(am<0X000010)then if am>=17 then if am~=0X012 then hm=function(...)local gE={};local ZE=1;local IE=(u and u()or _ENV);local DE={[1]=gE,[0X002]=Jm};local OE,nE=0,((IE==J and Xm or IE));local AE,iE=pO(...);AE=AE-1;for VU=0,AE do if not(Om>VU)then do break;end;else gE[VU]=iE[VU+1];end;end;do if not rm then do iE=nil;end;elseif not(bm)then else do(gE)[Om]={n=AE>=Om and AE-Om+1 or 0X0,T(iE,Om+1,AE+0x1)};end;end;end;if nE~=IE then if not(W)then _ENV=nE;else(W)(hm,nE);end;end;local oE,TE,lE,eE=p(function()while true do local B1=Lm[ZE];local o1=B1[0x0005];ZE=ZE+1;if o1<0x6 then if not(o1>=3)then if not(o1>=0X1)then(gE)[B1[0X4]]=B1[0X00003];else if o1==0X2 then(gE)[B1[4]]=gE[B1[7]]<=gE[B1[6]];else local WK=B1[4];local HK,pK=gE[WK]();if HK then ZE=B1[0X0007];do(gE)[WK+3]=pK;end;end;end;end;else if not(o1>=0X4)then(gE)[B1[0X00004]]={T({},1,B1[0X007])};else do if o1==0X5 then else do gE[B1[0X04]]=nE[B1[0x03]];end;end;end;end;end;else if not(o1>=9)then if not(o1<0X7)then if o1~=8 then do gE[B1[0X4]]=gE[B1[7]]>=gE[B1[0X6]];end;else gE[B1[4]]=M(gE[B1[0X7]],gE[B1[6]]);end;else local Nw=(pm[B1[7]]);local gw=(Nw[0X0002]);local uw=(nil);local iw=#gw;do if not(iw>0)then else uw={};for z4=1,iw do local H4=gw[z4];if H4[0X1]==0X0000 then uw[z4-0X1]={gE,H4[2]};else(uw)[z4-0X00001]=jm[H4[0X2]];end;end;(K)(Km,uw);end;end;do gE[B1[4]]=gO(uw,Nw,nE);end;end;else if o1<0X00A then do gE[0x1]=nE[B1[3]];end;ZE=ZE+0x00001;OE=0X1;(gE)[OE]=gE[OE]();ZE=ZE+0X1;ZE=ZE+1;B1=Lm[ZE];ZE=ZE+1;do gE[1]=gE[0X1][B1[0X002]];end;ZE=ZE+0X1;ZE=ZE+0x0001;ZE=ZE+1;(gE)[2]=gE[0];do B1=Lm[ZE];end;ZE=ZE+1;gE[0X1][B1[0X3]]=gE[0X02];B1=Lm[ZE];ZE=ZE+1;(gE)[1]=nE[B1[0x3]];ZE=ZE+1;ZE=ZE+0X1;ZE=ZE+0X1;OE=0X1;(gE[OE])();OE=OE-0X1;ZE=ZE+0x1;ZE=ZE+1;do ZE=ZE+1;end;repeat local iW,yW=Km,(gE);if not(#iW>0)then else local Vf=({});for M8,q8 in o,iW do for F3,n3 in o,q8 do do if n3[1]==yW and n3[0X2]>=0X0 then local cY=n3[0X2];if not Vf[cY]then Vf[cY]={yW[cY]};end;do n3[1]=Vf[cY];end;do n3[2]=1;end;end;end;end;end;end;until true;return;else do if o1~=11 then for mf=B1[0x4],B1[7]do do(gE)[mf]=nil;end;end;else ZE=B1[0X7];end;end;end;end;end;end;end);do if oE then if TE then if eE~=1 then return gE[lE](T(gE,lE+1,OE));else return gE[lE]();end;elseif not(lE)then else return T(gE,lE,eE);end;else do if s(TE)=='stri\110\103'then do if I(TE,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;end;if I(TE,"^.-:%d+: ")then E('\076u\114\097\112h\032Sc\114ip\116:'..(zm[ZE-1]or"\040i\110\116\101\114\110\097\108\041").."\058 "..h(TE),0);else(E)(TE,0);end;else E(TE,0x0);end;end;end;end;end;else hm=function(...)local w1,P1=0x01,{};local J1,S1={[0X002]=Jm,[1]=P1},(0);local V1=((u and u()or _ENV));local x1,T1=pO(...);do x1=x1-0X1;end;local H1=(V1==J and Xm or V1);for C_=0X0,x1 do do if not(Om>C_)then do break;end;else(P1)[C_]=T1[C_+1];end;end;end;if not rm then T1=nil;elseif not(bm)then else(P1)[Om]={n=x1>=Om and x1-Om+0X1 or 0X00000,T(T1,Om+0X00001,x1+0X1)};end;if H1==V1 then else if not(W)then _ENV=H1;else(W)(hm,H1);end;end;do while true do local ZY=(Lm[w1]);local aY=ZY[5];w1=w1+1;return(function(N,p,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["AutoFarm_AllBoss"]and not p[0][1][p[0][2]]():FindFirstChild("HumanoidRootPart")then TweenFa=Tween(p[0][1][p[0][2]]():GetModelCFrame()*CFrame.new(FarmModes));elseif getgenv().Main["AutoFarm_AllBoss"]and p[0][1][p[0][2]]():FindFirstChild("HumanoidRootPart")then if getgenv().Main["Farm_Mode"]~="Behind"then TweenFa=Tween(CFrame.new(p[0][1][p[0][2]]():FindFirstChild("HumanoidRootPart").Position+FarmModes)*AngelsCFrame);else TweenFa=Tween(p[0][1][p[0][2]]():GetModelCFrame()*FarmModes);end;end;end);end;end);end)(P1,jm,...);end;end;end;end;else do hm=function(...)local tG,eG=0X1,({});local FG=(u and u()or _ENV);local UG={[1]=eG,[0X002]=Jm};local YG,cG=pO(...);local JG=((FG==J and Xm or FG));YG=YG-0x1;for Ys=0x00,YG do if not(Om>Ys)then break;else do eG[Ys]=cG[Ys+1];end;end;end;local mG=0;do if not rm then cG=nil;elseif not(bm)then else eG[Om]={n=YG>=Om and YG-Om+0X001 or 0,T(cG,Om+0X1,YG+0X00001)};end;end;if JG==FG then else do if not(W)then _ENV=JG;else(W)(hm,JG);end;end;end;local dG,EG,qG,rG=p(function()while true do local iI=(Lm[tG]);local UI=iI[0X05];do tG=tG+0X1;end;do if not(UI<0x00006)then if not(UI<0X00009)then if not(UI>=10)then(eG[iI[0X4]])[eG[iI[7]]]=eG[iI[0X00006]];else if UI~=0X00B then(eG)[1]=JG[iI[0X3]];tG=tG+0X1;mG=1;eG[mG]=eG[mG]();iI=Lm[tG];do tG=tG+0X001;end;do eG[0X1]=eG[1][iI[0x2]];end;do tG=tG+0x1;end;eG[0X2]=eG[0X000];iI=Lm[tG];do tG=tG+0X1;end;do eG[1][iI[0x3]]=eG[0x2];end;iI=Lm[tG];tG=tG+0x1;eG[0X1]=JG[iI[0X00003]];tG=tG+0x1;mG=1;(eG[mG])();mG=mG-0x001;do tG=tG+1;end;repeat local dm,mm=Km,eG;do if#dm>0 then local OB={};for I1,e1 in o,dm do for Wi,Mi in o,e1 do if not(Mi[0X1]==mm and Mi[0x0002]>=0)then else local M0=(Mi[2]);if not OB[M0]then do OB[M0]={mm[M0]};end;end;Mi[0x1]=OB[M0];do Mi[0X2]=0X1;end;end;end;end;end;end;until true;return;else eG[iI[0X4]]=eG[iI[0X7]]<eG[iI[0X0006]];end;end;else if UI<0X07 then(eG)[iI[4]]=UG[iI[0X0007]];else if UI==8 then eG[iI[4]]=JG[iI[0X03]];else(eG)[iI[0X4]]=c(eG[iI[0X7]],eG[iI[0x6]]);end;end;end;else if not(UI>=3)then if not(UI>=1)then else do if UI==2 then do(eG)[iI[0X4]]=t(eG[iI[0X7]],eG[iI[0X6]]);end;else do(eG)[iI[0X4]]=iI[3];end;end;end;end;else if UI<0X4 then local oV=pm[iI[7]];local nV=(oV[2]);local yV,dV=#nV,nil;if not(yV>0X0)then else dV={};for JB=1,yV do local NB=(nV[JB]);if NB[0x001]==0X0 then do dV[JB-0X00001]={eG,NB[0X2]};end;else dV[JB-0X1]=jm[NB[0X2]];end;end;K(Km,dV);end;eG[iI[4]]=gO(dV,oV,JG);else if UI~=0x00005 then tG=iI[7];else eG[iI[4]]={T({},0X1,iI[0X007])};end;end;end;end;end;end;end);if not(dG)then if s(EG)~='stri\110g'then(E)(EG,0);else do if I(EG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if I(EG,"^.-:%d+: ")then(E)("Luraph Script:"..(zm[tG-0x01]or"(internal)")..": "..h(EG),0);else(E)(EG,0);end;end;else if EG then do if rG==0X1 then do return eG[qG]();end;else return eG[qG](T(eG,qG+0x1,mG));end;end;elseif not(qG)then else return T(eG,qG,rG);end;end;end;end;end;else if am>=0x0000E then do if am~=15 then hm=function(...)local hc,ac=1,({});local nc=0;local Ac={[0X002]=Jm,[1]=ac};local Hc=(u and u()or _ENV);local Dc,Ic=pO(...);Dc=Dc-0X00001;local oc=((Hc==J and Xm or Hc));for WK=0X0000,Dc do if not(Om>WK)then break;else do(ac)[WK]=Ic[WK+0X1];end;end;end;if not rm then Ic=nil;elseif bm then ac[Om]={n=Dc>=Om and Dc-Om+1 or 0,T(Ic,Om+1,Dc+0x001)};end;do if oc==Hc then else if not(W)then do _ENV=oc;end;else W(hm,oc);end;end;end;local tc,Wc,ec,Qc=p(function()while true do local J4=(Lm[hc]);local H4=J4[5];hc=hc+0X01;if H4>=0X7 then if not(H4<0Xb)then if not(H4>=13)then if H4~=0Xc then do(ac)[J4[0x4]]=t(ac[J4[7]],ac[J4[6]]);end;else(ac)[J4[0X004]]=ac[J4[7]]~=ac[J4[0X6]];end;else if H4~=0Xe then(ac)[0x1]=oc[J4[0X00003]];hc=hc+0X001;nc=0x1;do(ac)[nc]=ac[nc]();end;hc=hc+1;hc=hc+1;J4=Lm[hc];hc=hc+1;ac[1]=ac[1][J4[0X0002]];hc=hc+1;hc=hc+0X001;hc=hc+1;do ac[0x00002]=ac[0X00000];end;J4=Lm[hc];do hc=hc+1;end;ac[1][J4[0X3]]=ac[2];J4=Lm[hc];do hc=hc+0X1;end;do(ac)[0X001]=oc[J4[3]];end;do hc=hc+0X01;end;hc=hc+1;hc=hc+1;do nc=1;end;ac[nc]();nc=nc-1;do hc=hc+0x01;end;repeat local Gp,xp=Km,(ac);if#Gp>0X0 then local Aq=({});for PB,DB in o,Gp do for NX,IX in o,DB do if IX[1]==xp and IX[0X02]>=0X0000 then local yI=IX[2];do if not(not Aq[yI])then else Aq[yI]={xp[yI]};end;end;(IX)[0X1]=Aq[yI];(IX)[0X2]=0X0001;end;end;end;end;until true;return;else repeat local xr,Nr=Km,ac;do if#xr>0X00000 then local TU=({});for sq,Mq in o,xr do for jl,tl in o,Mq do if not(tl[0X0001]==Nr and tl[0x2]>=0X00000)then else local sY=tl[0X2];if not(not TU[sY])then else(TU)[sY]={Nr[sY]};end;tl[0X1]=TU[sY];(tl)[2]=1;end;end;end;end;end;until true;local XK=(J4[0X0004]);return false,XK,XK+J4[7]-2;end;end;else if not(H4<0X9)then do if H4~=0x0A then local Pp=J4[4];for iS=Pp,Pp+(J4[7]-1)do ac[iS]=Ic[Om+(iS-Pp)+0X001];end;else end;end;else if H4~=8 then do hc=J4[0x00007];end;else(ac)[J4[4]]=X(ac[J4[7]]);end;end;end;else if H4>=0X3 then do if not(H4<0X5)then do if H4~=6 then do(ac)[J4[4]]=#ac[J4[0X7]];end;else ac[J4[4]]={T({},0X0001,J4[7])};end;end;else if H4~=0x4 then for Hk=J4[4],J4[7]do(ac)[Hk]=nil;end;else(ac)[J4[4]]=oc[J4[3]];end;end;end;else if not(H4<1)then if H4==0X2 then(ac)[J4[0X04]]=ac[J4[7]]-ac[J4[6]];else local Mv=(pm[J4[0x007]]);local Pv,zv=Mv[0X002],nil;local Iv=#Pv;if Iv>0X0 then zv={};for Ju=0X1,Iv do local su=(Pv[Ju]);if su[0x1]==0X0 then zv[Ju-0X001]={ac,su[2]};else(zv)[Ju-1]=jm[su[2]];end;end;K(Km,zv);end;do ac[J4[0X004]]=gO(zv,Mv,oc);end;end;else do ac[J4[4]]=J4[0X3];end;end;end;end;end;end);if not(tc)then if s(Wc)~="\115\116\114in\103"then E(Wc,0X0);else if not(I(Wc,'a\116t\101m\112t \116o\032\121\105\101l\100\032\097\099\114\111ss\032me\116ame\116\104od\047C\037\045call \098o\117\110d\097r\121'))then else return coroutine.yield();end;if I(Wc,"^.\045\058%\100+\058\032")then E("Luraph Script:"..(zm[hc-1]or"(internal)")..": "..h(Wc),0X00);else(E)(Wc,0);end;end;else do if Wc then if Qc~=0x1 then return ac[ec](T(ac,ec+1,nc));else return ac[ec]();end;elseif not(ec)then else do return T(ac,ec,Qc);end;end;end;end;end;else do hm=function(...)local bd=0X00000;local jd,Cd=1,{};local Ud=({[0X002]=Jm,[1]=Cd});local Dd=((u and u()or _ENV));local Jd=((Dd==J and Xm or Dd));local Nd,zd=pO(...);Nd=Nd-0x0001;for Ti=0X0,Nd do if not(Om>Ti)then break;else Cd[Ti]=zd[Ti+0x001];end;end;if not rm then do zd=nil;end;elseif bm then Cd[Om]={n=Nd>=Om and Nd-Om+0X00001 or 0,T(zd,Om+0X1,Nd+1)};end;do if Jd~=Dd then do if not(W)then _ENV=Jd;else W(hm,Jd);end;end;end;end;local md,fd,Rd,Ad=p(function()while true do local pe=(Lm[jd]);local Be=(pe[5]);jd=jd+1;if not(Be<0X8)then if not(Be<0X0000c)then if Be<0X00E then if Be==0Xd then(Cd)[pe[0X4]]=Jd[pe[0X3]];else for G4=pe[0X4],pe[0x0007]do do(Cd)[G4]=nil;end;end;end;else if Be>=0Xf then if Be~=0X10 then do(Cd)[pe[4]]=true;end;else repeat local YB,XB=Km,Cd;if#YB>0X000 then local CJ=({});for xE,ME in o,YB do for vz,bz in o,ME do do if not(bz[1]==XB and bz[0X2]>=0)then else local Te=(bz[0X2]);do if not CJ[Te]then CJ[Te]={XB[Te]};end;end;(bz)[1]=CJ[Te];do(bz)[2]=1;end;end;end;end;end;end;until true;do return;end;end;else do Cd[1]=Jd[pe[0X03]];end;local g4=(Cd[1]);jd=jd+0X1;jd=jd+1;pe=Lm[jd];jd=jd+0X01;local w4=1;Cd[w4+1]=g4;(Cd)[w4]=g4[pe[2]];local n4=(jm[0X00000]);pe=Lm[jd];jd=jd+1;Cd[0X3]=pe[0X3];jd=jd+0X00001;w4=1;Cd[w4]=Cd[w4](Cd[w4+0X1],Cd[w4+2]);bd=w4;jd=jd+0X1;jd=jd+1;pe=Lm[jd];jd=jd+0X1;do Cd[0X1]=Cd[0X001][pe[2]];end;pe=Lm[jd];jd=jd+1;(Cd)[1]=Cd[0X001][pe[0x00002]];jd=jd+0X1;jd=jd+0X1;pe=Lm[jd];jd=jd+0X1;Cd[0X1]=Cd[0X01][pe[2]];jd=jd+0X1;(Cd)[0X002]=n4[0x01][n4[2]];jd=jd+1;jd=jd+0X1;pe=Lm[jd];jd=jd+1;Cd[2]=Cd[0x2][pe[0X0002]];jd=jd+1;jd=jd+0X1;pe=Lm[jd];jd=jd+1;(Cd[1])[pe[0X3]]=Cd[2];pe=Lm[jd];jd=jd+0X01;do jd=pe[7];end;end;end;else if Be<0X0000A then if Be~=9 then Cd[pe[0X00004]]=Cd[pe[0X7]]==Cd[pe[6]];else Cd[pe[0X4]]=pe[0X00003];end;else if Be~=11 then(Cd)[pe[4]]=M(Cd[pe[7]],Cd[pe[6]]);else local Oi=jm[0];(Cd)[0X1]=Oi[0X1][Oi[2]];pe=Lm[jd];jd=jd+0X1;Cd[1]=Cd[1][pe[2]];pe=Lm[jd];jd=jd+1;local Ai=(2);(Cd)[1]=Cd[1][pe[0X2]];jd=jd+1;jd=jd+1;pe=Lm[jd];jd=jd+0X001;do Cd[2]=Jd[pe[3]];end;pe=Lm[jd];jd=jd+0X01;local yi=(Cd[0X2]);(Cd)[Ai+1]=yi;(Cd)[Ai]=yi[pe[0X2]];pe=Lm[jd];jd=jd+0x0001;(Cd)[4]=pe[0X3];jd=jd+0x1;Ai=2;do(Cd)[Ai]=Cd[Ai](Cd[Ai+0X01],Cd[Ai+0x2]);end;bd=Ai;do pe=Lm[jd];end;jd=jd+0X001;(Cd)[0X02]=Cd[0X2][pe[0X0002]];do jd=jd+1;end;jd=jd+0X0001;pe=Lm[jd];do jd=jd+0X01;end;Cd[2]=Cd[0X2][pe[2]];do pe=Lm[jd];end;do jd=jd+1;end;Cd[0X1][pe[0X0003]]=Cd[0X2];pe=Lm[jd];jd=jd+0x1;jd=pe[7];end;end;end;else if not(Be<4)then do if Be>=6 then if Be==7 then repeat local Ms,os=Km,(Cd);if not(#Ms>0)then else local gG=({});for Q1,d1 in o,Ms do for fS,US in o,d1 do if US[1]==os and US[0X2]>=0X000 then local fW=US[2];if not gG[fW]then gG[fW]={os[fW]};end;do US[0X1]=gG[fW];end;do US[0X2]=1;end;end;end;end;end;until true;local Ge=pe[0X04];return false,Ge,Ge+pe[7]-0X2;else Cd[pe[4]]={T({},0X01,pe[7])};end;else do if Be==0X5 then else local Tq=pm[pe[7]];local Xq,Rq=Tq[2],(nil);local iq=#Xq;do if not(iq>0x00)then else Rq={};for JA=0X1,iq do local WA=Xq[JA];if WA[0X001]==0 then(Rq)[JA-1]={Cd,WA[0x2]};else Rq[JA-1]=jm[WA[0X0002]];end;end;(K)(Km,Rq);end;end;(Cd)[pe[0X4]]=gO(Rq,Tq,Jd);end;end;end;end;else do if not(Be>=2)then if Be~=0x1 then(Cd)[0x1]=Jd[pe[0X3]];jd=jd+0X1;jd=jd+1;jd=jd+0X0001;bd=0X1;Cd[bd]=Cd[bd]();pe=Lm[jd];jd=jd+1;Cd[1]=Cd[1][pe[0x2]];jd=jd+0X1;do jd=jd+0x1;end;jd=jd+0X1;do Cd[2]=Cd[0x00];end;pe=Lm[jd];jd=jd+1;Cd[1][pe[3]]=Cd[0X2];pe=Lm[jd];jd=jd+1;do(Cd)[0X001]=Jd[pe[0X3]];end;jd=jd+1;do bd=0X1;end;(Cd[bd])();bd=bd-1;pe=Lm[jd];jd=jd+0x001;if not(Cd[0])then else do jd=pe[0x7];end;end;else jd=pe[0x7];end;else if Be~=3 then(Cd[pe[0X4]])[Cd[pe[0X7]]]=Cd[pe[0x6]];else(Cd)[1]=Jd[pe[3]];jd=jd+1;bd=1;(Cd)[bd]=Cd[bd]();jd=jd+0X1;jd=jd+1;do pe=Lm[jd];end;jd=jd+1;Cd[0X1]=Cd[1][pe[0X2]];jd=jd+0X1;do jd=jd+1;end;pe=Lm[jd];jd=jd+0x0001;do(Cd)[0X001]=Cd[1][pe[2]];end;do jd=jd+0x1;end;jd=jd+0x0001;pe=Lm[jd];jd=jd+1;if not(not Cd[1])then else jd=pe[7];end;end;end;end;end;end;end;end);if md then if fd then if Ad~=0X001 then return Cd[Rd](T(Cd,Rd+1,bd));else do return Cd[Rd]();end;end;elseif not(Rd)then else return T(Cd,Rd,Ad);end;else if s(fd)=="string"then if not(I(fd,'at\116\101\109\112t \116\111 \121\105\101l\100 acros\115\032me\116\097\109et\104\111\100/C%-call\032b\111un\100a\114\121'))then else return coroutine.yield();end;if not(I(fd,"^.-:%d+: "))then E(fd,0);else(E)('\076\117\114\097\112h\032Script\058'..(zm[jd-1]or"\040i\110t\101\114nal\041")..": "..h(fd),0);end;else E(fd,0X0);end;end;end;end;end;end;else hm=function(...)local li,fi=0X00001,({});local yi=(u and u()or _ENV);local Vi,pi=(yi==J and Xm or yi),{[1]=fi,[0X002]=Jm};local hi,ri=pO(...);hi=hi-0X01;for i1=0X0,hi do if not(Om>i1)then break;else fi[i1]=ri[i1+1];end;end;do if not rm then ri=nil;elseif not(bm)then else do(fi)[Om]={n=hi>=Om and hi-Om+0X00001 or 0x0,T(ri,Om+1,hi+1)};end;end;end;local Wi=0;do if Vi~=yi then if W then(W)(hm,Vi);else _ENV=Vi;end;end;end;local ni,bi,ki,oi=p(function()while true do local e4=Lm[li];local b4=e4[5];do li=li+1;end;if b4>=14 then if b4<21 then do if not(b4>=0X11)then if not(b4<0Xf)then if b4==16 then(fi)[e4[0x0004]]=e4[3];else local ml=fi[0x010];local Tl=(0x1D);(fi)[Tl+1]=ml;do fi[Tl]=ml[e4[0X02]];end;do li=li+1;end;(fi)[0X001f]={};e4=Lm[li];li=li+0x1;fi[31][e4[0X3]]=e4[0X2];e4=Lm[li];li=li+0X0001;do fi[0x01f][e4[3]]=e4[2];end;e4=Lm[li];li=li+1;do fi[31][e4[0x3]]=e4[2];end;e4=Lm[li];local il=(nil);li=li+0X1;fi[32]=Vi[e4[0X3]];li=li+1;li=li+1;li=li+0X01;Wi=0X20;fi[Wi]=fi[Wi]();e4=Lm[li];li=li+1;(fi)[32]=fi[32][e4[0x0002]];e4=Lm[li];li=li+0X00001;fi[0X00020]=fi[0X020][e4[0X00002]];e4=Lm[li];li=li+1;(fi[0X1f])[e4[3]]=fi[0X0020];e4=Lm[li];do li=li+0X1;end;local Ol=pm[e4[7]];local nl=Ol[0x2];local Ql=(#nl);if Ql>0X000 then il={};for Cl=1,Ql do local Ul=(nl[Cl]);if Ul[1]~=0 then(il)[Cl-0X1]=jm[Ul[2]];else do(il)[Cl-0X1]={fi,Ul[2]};end;end;end;(K)(Km,il);end;fi[0X0020]=gO(il,Ol,Vi);e4=Lm[li];do li=li+1;end;do fi[0X001F][e4[3]]=fi[0X0020];end;do li=li+1;end;do Tl=29;end;fi[Tl](fi[Tl+0X0001],fi[Tl+0X2]);do Wi=Tl-0X0001;end;li=li+1;li=li+1;e4=Lm[li];do li=li+1;end;do Tl=0x1d;end;ml=fi[0X10];fi[Tl+0x1]=ml;(fi)[Tl]=ml[e4[0X2]];li=li+1;fi[31]={};e4=Lm[li];li=li+1;(fi[0X01f])[e4[3]]=e4[2];do e4=Lm[li];end;li=li+1;do(fi)[32]=Vi[e4[3]];end;li=li+1;do Wi=0X0020;end;fi[Wi]=fi[Wi]();e4=Lm[li];li=li+1;do(fi)[32]=fi[32][e4[2]];end;e4=Lm[li];do li=li+1;end;fi[0X0020]=fi[32][e4[0X2]];li=li+1;li=li+1;do e4=Lm[li];end;do li=li+0X001;end;(fi[31])[e4[0x3]]=fi[32];e4=Lm[li];li=li+0x1;Ol=pm[e4[0X7]];do il=nil;end;nl=Ol[2];Ql=#nl;if not(Ql>0x0)then else il={};for fF=1,Ql do local RF=nl[fF];do if RF[0x1]==0 then do il[fF-0X1]={fi,RF[0X00002]};end;else do(il)[fF-0X1]=jm[RF[2]];end;end;end;end;(K)(Km,il);end;fi[0X20]=gO(il,Ol,Vi);e4=Lm[li];li=li+0X1;fi[0X1F][e4[3]]=fi[0X20];li=li+1;do Tl=0x1D;end;fi[Tl](fi[Tl+0X00001],fi[Tl+2]);do Wi=Tl-0X1;end;do li=li+0X1;end;li=li+0X1;e4=Lm[li];do li=li+1;end;Tl=0X1d;do ml=fi[0X00010];end;(fi)[Tl+0X1]=ml;fi[Tl]=ml[e4[2]];li=li+0X01;(fi)[0X01f]={};e4=Lm[li];li=li+1;fi[31][e4[0X3]]=e4[2];e4=Lm[li];li=li+0X00001;fi[32]=Vi[e4[0X0003]];li=li+1;Wi=32;(fi)[Wi]=fi[Wi]();li=li+1;li=li+0X1;e4=Lm[li];li=li+1;(fi)[0X020]=fi[32][e4[0X2]];e4=Lm[li];li=li+1;fi[0X020]=fi[32][e4[2]];li=li+0x1;li=li+1;e4=Lm[li];li=li+0X1;(fi[0X1F])[e4[0X3]]=fi[0X20];e4=Lm[li];do li=li+1;end;Ol=pm[e4[0X07]];il=nil;nl=Ol[0X2];Ql=#nl;if not(Ql>0x0)then else il={};for cd=0X1,Ql do local yd=(nl[cd]);if yd[0X1]==0X000 then(il)[cd-0X1]={fi,yd[0X2]};else(il)[cd-0X0001]=jm[yd[2]];end;end;K(Km,il);end;fi[32]=gO(il,Ol,Vi);do e4=Lm[li];end;li=li+0X1;fi[31][e4[0X0003]]=fi[32];li=li+1;do Tl=29;end;fi[Tl](fi[Tl+1],fi[Tl+2]);Wi=Tl-1;do li=li+1;end;li=li+1;e4=Lm[li];li=li+1;do Tl=0X00001D;end;ml=fi[17];fi[Tl+1]=ml;(fi)[Tl]=ml[e4[2]];li=li+1;do fi[31]={};end;do e4=Lm[li];end;do li=li+0X1;end;fi[31][e4[0X003]]=e4[0X2];e4=Lm[li];li=li+1;fi[32]=Vi[e4[3]];li=li+1;do Wi=0X00020;end;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+1;(fi)[0X20]=fi[0X020][e4[2]];e4=Lm[li];li=li+0X1;do(fi)[0X020]=fi[0X00020][e4[2]];end;li=li+1;li=li+0x1;e4=Lm[li];li=li+1;(fi[31])[e4[0X3]]=fi[0x20];e4=Lm[li];li=li+0x0001;Ol=pm[e4[0X00007]];il=nil;nl=Ol[2];Ql=#nl;if Ql>0X0 then il={};do for Gz=1,Ql do local ez=(nl[Gz]);if ez[0X1]~=0X0 then do(il)[Gz-1]=jm[ez[0x2]];end;else il[Gz-1]={fi,ez[0x2]};end;end;end;K(Km,il);end;(fi)[0X0020]=gO(il,Ol,Vi);e4=Lm[li];li=li+1;(fi[31])[e4[0X3]]=fi[32];li=li+1;do Tl=0x01d;end;fi[Tl](fi[Tl+1],fi[Tl+2]);Wi=Tl-0X01;e4=Lm[li];li=li+0X1;Tl=0X01D;ml=fi[0X00011];fi[Tl+1]=ml;fi[Tl]=ml[e4[2]];li=li+1;(fi)[31]={};e4=Lm[li];do li=li+0x01;end;fi[31][e4[0x3]]=e4[2];e4=Lm[li];do li=li+0X1;end;do fi[32]=Vi[e4[0X3]];end;li=li+0X1;li=li+0X00001;do li=li+1;end;do Wi=0x20;end;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+0X1;fi[32]=fi[32][e4[2]];do li=li+1;end;do li=li+1;end;e4=Lm[li];li=li+0X01;do(fi)[0x20]=fi[0X000020][e4[2]];end;li=li+0X1;do li=li+1;end;e4=Lm[li];li=li+0X1;(fi[0X1f])[e4[3]]=fi[32];e4=Lm[li];li=li+0X1;do Ol=pm[e4[0x7]];end;il=nil;nl=Ol[0x2];Ql=#nl;if not(Ql>0X0)then else il={};for zu=1,Ql do local Yu=nl[zu];do if Yu[0X01]==0 then(il)[zu-0X1]={fi,Yu[2]};else(il)[zu-1]=jm[Yu[0X2]];end;end;end;K(Km,il);end;fi[32]=gO(il,Ol,Vi);do e4=Lm[li];end;li=li+1;(fi[0x001f])[e4[0x003]]=fi[32];li=li+1;do Tl=0x1d;end;(fi[Tl])(fi[Tl+1],fi[Tl+0X002]);do Wi=Tl-0x00001;end;do li=li+1;end;li=li+1;e4=Lm[li];li=li+0X001;Tl=0X01d;ml=fi[17];fi[Tl+0X1]=ml;fi[Tl]=ml[e4[0x0002]];li=li+1;do(fi)[0X01F]={};end;e4=Lm[li];li=li+1;(fi[0X1f])[e4[0x3]]=e4[0x2];e4=Lm[li];li=li+0x001;(fi)[0x20]=Vi[e4[0X3]];li=li+1;Wi=0X000020;fi[Wi]=fi[Wi]();li=li+1;do li=li+1;end;e4=Lm[li];li=li+0x1;do fi[0X20]=fi[32][e4[0X2]];end;li=li+0X1;do li=li+1;end;do e4=Lm[li];end;li=li+1;(fi)[32]=fi[0X00020][e4[0X0002]];li=li+1;do li=li+0x1;end;e4=Lm[li];li=li+1;do(fi[0X01f])[e4[3]]=fi[0X020];end;do e4=Lm[li];end;li=li+1;Ol=pm[e4[0X7]];do il=nil;end;nl=Ol[2];Ql=#nl;if Ql>0x000 then il={};for l9=0X001,Ql do local x9=nl[l9];if x9[0x1]~=0 then do(il)[l9-0X001]=jm[x9[0X2]];end;else(il)[l9-1]={fi,x9[0x2]};end;end;K(Km,il);end;do fi[0X20]=gO(il,Ol,Vi);end;e4=Lm[li];li=li+1;fi[31][e4[0x3]]=fi[32];li=li+1;Tl=29;(fi[Tl])(fi[Tl+0x001],fi[Tl+0X0002]);do Wi=Tl-0X0001;end;li=li+0x00001;li=li+1;do e4=Lm[li];end;li=li+1;Tl=29;ml=fi[17];fi[Tl+0x1]=ml;do(fi)[Tl]=ml[e4[0X2]];end;do li=li+0X00001;end;(fi)[0X0001F]={};e4=Lm[li];li=li+0x001;fi[31][e4[3]]=e4[0X00002];e4=Lm[li];li=li+0x1;(fi)[0x20]=Vi[e4[0X0003]];do li=li+0x0001;end;li=li+1;li=li+1;Wi=0X20;fi[Wi]=fi[Wi]();do li=li+0X001;end;li=li+1;e4=Lm[li];li=li+1;do fi[32]=fi[0X20][e4[2]];end;do li=li+0X0001;end;li=li+0X0001;e4=Lm[li];li=li+1;fi[0x20]=fi[32][e4[0X2]];do li=li+1;end;li=li+0X1;e4=Lm[li];do li=li+1;end;fi[31][e4[0X003]]=fi[0X000020];e4=Lm[li];do li=li+1;end;do Ol=pm[e4[7]];end;il=nil;nl=Ol[2];Ql=#nl;if Ql>0 then do il={};end;for AH=1,Ql do local gH=(nl[AH]);if gH[1]~=0 then il[AH-1]=jm[gH[2]];else il[AH-0X1]={fi,gH[2]};end;end;(K)(Km,il);end;do(fi)[0X0020]=gO(il,Ol,Vi);end;e4=Lm[li];li=li+1;do(fi[31])[e4[0X3]]=fi[32];end;do li=li+1;end;do Tl=29;end;(fi[Tl])(fi[Tl+1],fi[Tl+0X002]);do Wi=Tl-1;end;e4=Lm[li];li=li+1;Tl=29;ml=fi[0X011];do fi[Tl+1]=ml;end;(fi)[Tl]=ml[e4[0X0002]];li=li+1;(fi)[31]={};do e4=Lm[li];end;li=li+0X1;(fi[0x1f])[e4[0X3]]=e4[2];e4=Lm[li];li=li+0X001;fi[0X20]=Vi[e4[0X3]];do li=li+0X1;end;do Wi=32;end;(fi)[Wi]=fi[Wi]();do li=li+1;end;li=li+1;e4=Lm[li];li=li+1;(fi)[0X00020]=fi[0X20][e4[2]];do li=li+0X1;end;li=li+1;e4=Lm[li];li=li+0X1;fi[32]=fi[32][e4[2]];e4=Lm[li];li=li+0X1;fi[31][e4[3]]=fi[0X20];e4=Lm[li];li=li+0X1;Ol=pm[e4[7]];il=nil;nl=Ol[2];do Ql=#nl;end;if Ql>0X0000 then il={};for hG=0X1,Ql do local xG=(nl[hG]);if xG[0X001]~=0 then(il)[hG-0X1]=jm[xG[2]];else il[hG-1]={fi,xG[2]};end;end;(K)(Km,il);end;do fi[32]=gO(il,Ol,Vi);end;e4=Lm[li];li=li+1;fi[31][e4[3]]=fi[0x20];li=li+0X1;Tl=29;(fi[Tl])(fi[Tl+1],fi[Tl+2]);Wi=Tl-0X00001;e4=Lm[li];li=li+1;do Tl=29;end;ml=fi[17];fi[Tl+1]=ml;fi[Tl]=ml[e4[2]];do li=li+1;end;do(fi)[0X01F]={};end;e4=Lm[li];li=li+1;do(fi[31])[e4[3]]=e4[0x2];end;do e4=Lm[li];end;li=li+1;fi[0x20]=Vi[e4[3]];li=li+0X1;li=li+1;li=li+1;Wi=32;(fi)[Wi]=fi[Wi]();e4=Lm[li];do li=li+0X0001;end;fi[0X20]=fi[32][e4[0X2]];e4=Lm[li];li=li+1;(fi)[0X0020]=fi[0X20][e4[2]];do li=li+0X00001;end;li=li+1;do e4=Lm[li];end;li=li+1;(fi[31])[e4[0X3]]=fi[0X20];e4=Lm[li];li=li+0x1;do Ol=pm[e4[0X07]];end;il=nil;do nl=Ol[2];end;Ql=#nl;if Ql>0x0000 then il={};for vz=0X1,Ql do local nz=(nl[vz]);if nz[0X0001]==0x0 then il[vz-1]={fi,nz[2]};else il[vz-1]=jm[nz[0X02]];end;end;K(Km,il);end;fi[0X20]=gO(il,Ol,Vi);e4=Lm[li];li=li+0X1;fi[0X01F][e4[0X3]]=fi[0X20];li=li+0x001;do Tl=29;end;fi[Tl](fi[Tl+1],fi[Tl+0X002]);do Wi=Tl-1;end;li=li+0X1;do li=li+1;end;li=li+1;do repeat local u2,A2=Km,(fi);if#u2>0X0 then local S1=({});for Hd,Ld in o,u2 do for ZF,AF in o,Ld do if AF[1]==A2 and AF[0X2]>=0X0 then local yw=(AF[0X2]);if not(not S1[yw])then else(S1)[yw]={A2[yw]};end;do AF[0x00001]=S1[yw];end;do AF[2]=1;end;end;end;end;end;until true;end;return;end;else local po=(0X1a);local ko=(fi[0X0019]);fi[po+1]=ko;fi[po]=ko[e4[0X2]];e4=Lm[li];do li=li+1;end;fi[28]=Vi[e4[3]];li=li+1;Wi=28;fi[Wi]=fi[Wi]();do e4=Lm[li];end;li=li+0x1;do fi[28]=fi[28][e4[0X002]];end;do li=li+0x00001;end;li=li+1;e4=Lm[li];do li=li+1;end;(fi)[28]=fi[28][e4[2]];li=li+1;do li=li+0x01;end;do li=li+1;end;do po=26;end;(fi[po])(fi[po+1],fi[po+2]);Wi=po-1;li=li+0x00001;li=li+0X1;do e4=Lm[li];end;do li=li+1;end;li=e4[0X7];end;else if b4<19 then if b4~=0X12 then fi[0]=Vi[e4[0x3]];li=li+1;li=li+0X1;e4=Lm[li];li=li+1;(fi)[1]=Vi[e4[3]];local ZB=4;li=li+1;li=li+0X01;local TB=1;e4=Lm[li];do li=li+0X1;end;local YB=(fi[0x1]);fi[TB+0x1]=YB;(fi)[TB]=YB[e4[0X2]];e4=Lm[li];li=li+1;fi[3]=e4[3];li=li+1;(fi)[0X4]=true;li=li+0X1;TB=0x1;local oB=0;do if ZB==0X00 then else Wi=TB+ZB-0x1;end;end;local BB,bB=nil,nil;do if ZB==1 then BB,bB=pO(fi[TB]());else BB,bB=pO(fi[TB](T(fi,TB+1,Wi)));end;end;if oB==0x00001 then Wi=TB-0x01;else do if oB==0 then BB=BB+TB-1;Wi=BB;else BB=TB+oB-2;Wi=BB+1;end;end;local l5=(0x00000);for YL=TB,BB do l5=l5+1;do fi[YL]=bB[l5];end;end;end;li=li+0x0001;li=li+1;do li=li+1;end;TB=0;(fi)[TB]=fi[TB](T(fi,TB+0X1,Wi));Wi=TB;li=li+1;Wi=0;do fi[Wi]=fi[Wi]();end;li=li+1;li=li+1;e4=Lm[li];li=li+0X00001;do TB=0X01;end;YB=fi[0X00000];fi[TB+1]=YB;(fi)[TB]=YB[e4[0x2]];li=li+1;fi[0X3]={};e4=Lm[li];li=li+1;(fi[3])[e4[3]]=e4[2];li=li+1;TB=0X1;fi[TB]=fi[TB](fi[TB+0X1],fi[TB+2]);Wi=TB;e4=Lm[li];li=li+1;TB=2;YB=fi[1];do(fi)[TB+0X1]=YB;end;(fi)[TB]=YB[e4[2]];e4=Lm[li];do li=li+1;end;fi[4]=e4[0X3];li=li+0X001;TB=0X2;fi[TB]=fi[TB](fi[TB+1],fi[TB+2]);do Wi=TB;end;li=li+0X1;li=li+0x00001;e4=Lm[li];do li=li+1;end;TB=0X3;YB=fi[0X002];fi[TB+0x1]=YB;do fi[TB]=YB[e4[2]];end;e4=Lm[li];li=li+0X01;(fi)[5]=e4[0X3];li=li+1;do TB=0X3;end;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+0X2]);Wi=TB;do li=li+1;end;li=li+1;e4=Lm[li];li=li+0x1;do TB=4;end;YB=fi[3];(fi)[TB+0x1]=YB;do fi[TB]=YB[e4[0x2]];end;li=li+1;(fi)[0X06]={};e4=Lm[li];li=li+0x01;do fi[6][e4[0X3]]=e4[2];end;li=li+0X1;TB=4;fi[TB](fi[TB+0X00001],fi[TB+0X2]);Wi=TB-0x1;do e4=Lm[li];end;li=li+1;do TB=4;end;YB=fi[3];do fi[TB+1]=YB;end;(fi)[TB]=YB[e4[2]];li=li+0X1;do(fi)[0X0006]={};end;e4=Lm[li];do li=li+0x1;end;(fi[6])[e4[3]]=e4[0X2];li=li+0X001;do TB=4;end;(fi[TB])(fi[TB+1],fi[TB+2]);do Wi=TB-0x1;end;li=li+0X001;do li=li+0x1;end;e4=Lm[li];do li=li+0x001;end;TB=4;YB=fi[1];(fi)[TB+1]=YB;fi[TB]=YB[e4[2]];do e4=Lm[li];end;do li=li+1;end;fi[0X6]=e4[3];li=li+0X01;TB=0X4;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+2]);do Wi=TB;end;li=li+1;do li=li+0X1;end;e4=Lm[li];do li=li+0X00001;end;do TB=0x5;end;YB=fi[0X00004];fi[TB+0X00001]=YB;do(fi)[TB]=YB[e4[2]];end;e4=Lm[li];do li=li+0x1;end;(fi)[0X7]=e4[0X00003];li=li+0X001;TB=0X5;do(fi)[TB]=fi[TB](fi[TB+1],fi[TB+0X2]);end;do Wi=TB;end;li=li+1;li=li+1;e4=Lm[li];li=li+1;TB=6;YB=fi[0X00004];local VB=(nil);fi[TB+1]=YB;do(fi)[TB]=YB[e4[0X2]];end;do e4=Lm[li];end;li=li+1;(fi)[8]=e4[0X03];li=li+0X1;TB=0x00006;do(fi)[TB]=fi[TB](fi[TB+0x0001],fi[TB+0X2]);end;do Wi=TB;end;e4=Lm[li];do li=li+0x0001;end;TB=0x0007;YB=fi[4];(fi)[TB+0X001]=YB;fi[TB]=YB[e4[0X2]];e4=Lm[li];do li=li+0X001;end;fi[9]=e4[0X003];li=li+0X0001;TB=7;fi[TB]=fi[TB](fi[TB+0x1],fi[TB+0X2]);Wi=TB;li=li+1;do li=li+1;end;do e4=Lm[li];end;do li=li+0X1;end;TB=0x0008;do YB=fi[1];end;(fi)[TB+1]=YB;fi[TB]=YB[e4[2]];do e4=Lm[li];end;do li=li+0X1;end;fi[10]=e4[3];li=li+0X1;TB=0X008;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+2]);Wi=TB;li=li+1;do li=li+0X1;end;e4=Lm[li];do li=li+0X0001;end;TB=9;do YB=fi[8];end;fi[TB+1]=YB;fi[TB]=YB[e4[2]];e4=Lm[li];li=li+1;do fi[0x0000b]=e4[0X3];end;do li=li+0X01;end;TB=0x0009;(fi)[TB]=fi[TB](fi[TB+0X1],fi[TB+0X2]);Wi=TB;e4=Lm[li];li=li+0X001;TB=10;YB=fi[8];fi[TB+0X1]=YB;do(fi)[TB]=YB[e4[0X00002]];end;e4=Lm[li];do li=li+0X01;end;(fi)[0X0000C]=e4[0X3];li=li+0X00001;do TB=0xA;end;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+2]);Wi=TB;li=li+1;li=li+0X1;e4=Lm[li];li=li+1;TB=11;do YB=fi[0x01];end;fi[TB+0X1]=YB;fi[TB]=YB[e4[2]];do e4=Lm[li];end;local fB=(jm[0X0]);do li=li+0X1;end;do(fi)[13]=e4[3];end;li=li+1;do TB=0X000B;end;fi[TB]=fi[TB](fi[TB+1],fi[TB+2]);do Wi=TB;end;e4=Lm[li];do li=li+0X1;end;TB=12;YB=fi[11];(fi)[TB+1]=YB;(fi)[TB]=YB[e4[0X2]];do e4=Lm[li];end;li=li+0X01;(fi)[0xe]=e4[0X3];li=li+1;TB=12;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+0x2]);Wi=TB;e4=Lm[li];li=li+0x1;TB=0x0000D;YB=fi[0Xb];(fi)[TB+0X1]=YB;fi[TB]=YB[e4[2]];e4=Lm[li];li=li+0X1;fi[0X0000f]=e4[3];li=li+0X1;TB=0X00d;fi[TB]=fi[TB](fi[TB+0X01],fi[TB+0X2]);do Wi=TB;end;li=li+1;li=li+0X001;e4=Lm[li];li=li+1;do TB=0Xe;end;YB=fi[11];(fi)[TB+0X00001]=YB;do(fi)[TB]=YB[e4[2]];end;e4=Lm[li];li=li+0x1;(fi)[16]=e4[0X3];li=li+0X1;TB=14;fi[TB]=fi[TB](fi[TB+1],fi[TB+0X2]);Wi=TB;li=li+1;li=li+1;e4=Lm[li];li=li+1;do TB=0xF;end;YB=fi[1];(fi)[TB+0X1]=YB;fi[TB]=YB[e4[0X0002]];e4=Lm[li];li=li+1;(fi)[17]=e4[3];do li=li+0X01;end;TB=15;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+0X2]);Wi=TB;e4=Lm[li];do li=li+0x1;end;do TB=0x10;end;YB=fi[0X000F];fi[TB+0X1]=YB;fi[TB]=YB[e4[2]];do e4=Lm[li];end;li=li+1;do(fi)[0X12]=e4[0X03];end;li=li+1;TB=16;fi[TB]=fi[TB](fi[TB+1],fi[TB+2]);do Wi=TB;end;e4=Lm[li];li=li+0X01;do TB=0X11;end;do YB=fi[0Xf];end;fi[TB+0X1]=YB;fi[TB]=YB[e4[0X2]];e4=Lm[li];do li=li+0x01;end;fi[19]=e4[3];do li=li+0X1;end;TB=17;(fi)[TB]=fi[TB](fi[TB+1],fi[TB+0X02]);do Wi=TB;end;e4=Lm[li];li=li+0x00001;do TB=0X12;end;YB=fi[0X5];fi[TB+0X1]=YB;do(fi)[TB]=YB[e4[2]];end;li=li+1;(fi)[0X00014]={};e4=Lm[li];do li=li+1;end;fi[20][e4[0X0003]]=e4[0X2];li=li+0X1;do fi[21]=fB[1][fB[2]];end;li=li+1;li=li+0x1;e4=Lm[li];li=li+0x1;fi[20][e4[3]]=fi[21];e4=Lm[li];do li=li+0X00001;end;local qB=pm[e4[0x00007]];local cB=qB[2];local sB=(#cB);if sB>0X0000 then VB={};for zS=1,sB do local KS=cB[zS];if KS[0X1]~=0 then(VB)[zS-0X0001]=jm[KS[2]];else VB[zS-1]={fi,KS[2]};end;end;K(Km,VB);end;fi[21]=gO(VB,qB,Vi);do e4=Lm[li];end;li=li+1;fi[20][e4[0X003]]=fi[0X015];do li=li+1;end;do TB=18;end;fi[TB]=fi[TB](fi[TB+1],fi[TB+2]);Wi=TB;li=li+1;do li=li+0X1;end;do e4=Lm[li];end;li=li+0X001;do(fi)[0X000013]=Vi[e4[0X3]];end;do li=li+1;end;li=li+1;li=li+1;Wi=0X13;(fi)[Wi]=fi[Wi]();do li=li+1;end;li=li+1;e4=Lm[li];do li=li+0X1;end;(fi)[0X13]=fi[19][e4[0X0002]];e4=Lm[li];li=li+0X1;fi[0x13]=fi[19][e4[2]];do li=li+0x1;end;li=li+1;do e4=Lm[li];end;li=li+1;do if fi[0X013]==e4[0x2]then li=e4[0x4];end;end;else local Ph=(e4[4]);local jh,Rh=fi[Ph]();if jh then li=e4[7];do(fi)[Ph+0X3]=Rh;end;end;end;else if b4~=20 then local NF,kF=0X19,(fi[12]);(fi)[NF+0X1]=kF;do fi[NF]=kF[e4[2]];end;li=li+0X01;(fi)[27]={};e4=Lm[li];li=li+0X1;(fi[0X1B])[e4[3]]=e4[0X2];e4=Lm[li];li=li+0X1;(fi)[28]=Vi[e4[0X3]];li=li+1;do Wi=28;end;do fi[Wi]=fi[Wi]();end;e4=Lm[li];li=li+0X1;(fi)[0x1c]=fi[0X0001C][e4[0X00002]];e4=Lm[li];li=li+0X1;(fi)[28]=fi[0X1c][e4[0x00002]];li=li+1;do li=li+1;end;e4=Lm[li];li=li+1;(fi[27])[e4[0X3]]=fi[28];e4=Lm[li];local tF=pm[e4[0x7]];local jF=tF[2];li=li+1;local pF,AF=nil,(#jF);if not(AF>0X0)then else pF={};for GG=1,AF do local OG=jF[GG];do if OG[1]~=0 then do pF[GG-0X01]=jm[OG[0X002]];end;else pF[GG-1]={fi,OG[0X002]};end;end;end;K(Km,pF);end;do(fi)[28]=gO(pF,tF,Vi);end;e4=Lm[li];li=li+0X1;fi[0x1b][e4[0X3]]=fi[28];li=li+0x1;do NF=25;end;(fi[NF])(fi[NF+0X1],fi[NF+0X02]);Wi=NF-0X1;do e4=Lm[li];end;do li=li+1;end;do NF=0X000019;end;kF=fi[13];fi[NF+1]=kF;(fi)[NF]=kF[e4[2]];do li=li+0X00001;end;(fi)[27]={};e4=Lm[li];li=li+0X1;do(fi[27])[e4[0x3]]=e4[2];end;li=li+0X1;fi[28]={T({},0X1,0Xc)};e4=Lm[li];li=li+1;fi[29]=e4[3];e4=Lm[li];do li=li+1;end;(fi)[0X1E]=e4[0X00003];e4=Lm[li];li=li+1;local HF=(1-1)*50;(fi)[0X1f]=e4[0x3];e4=Lm[li];li=li+1;do fi[32]=e4[0x3];end;e4=Lm[li];li=li+1;fi[0X000021]=e4[0X3];e4=Lm[li];li=li+1;(fi)[0X000022]=e4[3];e4=Lm[li];li=li+1;(fi)[35]=e4[3];e4=Lm[li];do li=li+1;end;(fi)[0x000024]=e4[0x3];e4=Lm[li];li=li+1;fi[0X0025]=e4[0X3];e4=Lm[li];li=li+0x1;(fi)[0X026]=e4[3];do e4=Lm[li];end;li=li+0X1;(fi)[0x0027]=e4[0X3];e4=Lm[li];li=li+0X1;(fi)[40]=e4[0x3];li=li+1;NF=0X1c;local mF=(fi[NF]);do for hZ=1,0X0c do(mF)[HF+hZ]=fi[NF+hZ];end;end;do e4=Lm[li];end;do li=li+1;end;fi[0X1b][e4[3]]=fi[28];e4=Lm[li];do li=li+0X1;end;tF=pm[e4[7]];do pF=nil;end;jF=tF[0X2];AF=#jF;if AF>0X00000 then pF={};for ND=0x01,AF do local wD=jF[ND];if wD[0X001]==0X0 then pF[ND-0x1]={fi,wD[0X002]};else pF[ND-1]=jm[wD[0X0002]];end;end;K(Km,pF);end;do(fi)[0X00001C]=gO(pF,tF,Vi);end;e4=Lm[li];li=li+1;(fi[27])[e4[0X03]]=fi[28];li=li+0X1;NF=0X19;(fi)[NF]=fi[NF](fi[NF+0X1],fi[NF+2]);do Wi=NF;end;e4=Lm[li];li=li+1;do fi[0X1a]=Vi[e4[0x3]];end;do li=li+1;end;Wi=0X01A;fi[Wi]=fi[Wi]();e4=Lm[li];do li=li+1;end;do(fi)[0X01a]=fi[26][e4[0X0002]];end;li=li+1;li=li+1;do e4=Lm[li];end;li=li+1;fi[26]=fi[26][e4[2]];li=li+1;li=li+1;e4=Lm[li];li=li+1;if fi[0x01a]~=e4[0X02]then else li=e4[0X00004];end;else li=e4[7];end;end;end;end;else if b4>=25 then if b4<27 then do if b4~=0X0001A then local MX=(fi[e4[7]]/fi[e4[0X006]]);do fi[e4[4]]=MX-MX%1;end;else local dm=fi[0X1A];local Zm=27;(fi)[Zm+0X00001]=dm;(fi)[Zm]=dm[e4[2]];e4=Lm[li];li=li+1;fi[29]=Vi[e4[3]];li=li+1;Wi=0X1d;(fi)[Wi]=fi[Wi]();do li=li+1;end;li=li+0X1;e4=Lm[li];li=li+1;(fi)[29]=fi[29][e4[0X2]];e4=Lm[li];li=li+0X1;(fi)[29]=fi[29][e4[2]];li=li+0x1;Zm=27;(fi[Zm])(fi[Zm+1],fi[Zm+2]);Wi=Zm-0X1;e4=Lm[li];li=li+1;li=e4[7];end;end;else do if b4==28 then(fi)[e4[4]]=pi[e4[0X7]];else end;end;end;else do if b4<23 then if b4==22 then local V0,N0=20,(fi[0X6]);fi[V0+1]=N0;(fi)[V0]=N0[e4[0X2]];li=li+0X1;(fi)[0x000016]={};e4=Lm[li];li=li+0x0001;(fi[0X0016])[e4[3]]=e4[0X2];e4=Lm[li];li=li+1;do(fi)[0X0017]=Vi[e4[0X0003]];end;do li=li+0X01;end;li=li+1;li=li+0X1;Wi=23;fi[Wi]=fi[Wi]();li=li+1;local S0=(0x1-1)*0X32;do li=li+1;end;e4=Lm[li];do li=li+0x1;end;local t0=(nil);fi[23]=fi[23][e4[2]];li=li+0X1;li=li+0x1;do e4=Lm[li];end;do li=li+1;end;(fi)[23]=fi[23][e4[0x02]];e4=Lm[li];li=li+1;do fi[22][e4[0x3]]=fi[23];end;e4=Lm[li];do li=li+1;end;local v0=(pm[e4[7]]);local Y0=(v0[2]);local L0=(#Y0);if L0>0 then t0={};for ZV=1,L0 do local bV=(Y0[ZV]);if bV[0X001]~=0 then do t0[ZV-1]=jm[bV[0X2]];end;else(t0)[ZV-1]={fi,bV[2]};end;end;(K)(Km,t0);end;(fi)[0x17]=gO(t0,v0,Vi);e4=Lm[li];li=li+1;(fi[0x16])[e4[0X3]]=fi[0x000017];do li=li+1;end;V0=0X14;fi[V0](fi[V0+0x1],fi[V0+2]);Wi=V0-0X1;do li=li+0X001;end;do li=li+1;end;e4=Lm[li];li=li+1;V0=0x14;N0=fi[7];local m0=(jm[0X01]);(fi)[V0+0x1]=N0;(fi)[V0]=N0[e4[2]];do li=li+0x1;end;(fi)[0X16]={};e4=Lm[li];li=li+0X0001;(fi)[0x17]=e4[3];e4=Lm[li];li=li+1;fi[0X18]=Vi[e4[3]];e4=Lm[li];do li=li+1;end;do V0=0x18;end;N0=fi[0X18];do(fi)[V0+0x1]=N0;end;(fi)[V0]=N0[e4[0x2]];do e4=Lm[li];end;li=li+0X1;(fi)[0X1A]=e4[0X3];do li=li+0X01;end;V0=24;fi[V0]=fi[V0](fi[V0+0X01],fi[V0+2]);Wi=V0;do e4=Lm[li];end;li=li+0X01;(fi)[24]=fi[24][e4[2]];li=li+1;fi[25]=m0[1][m0[2]];li=li+1;do li=li+0x1;end;e4=Lm[li];do li=li+0x0001;end;do(fi)[25]=fi[25][e4[0X2]];end;li=li+1;do fi[24]=fi[0X18][fi[0x000019]];end;local y0=(23);do e4=Lm[li];end;do li=li+1;end;(fi)[24]=fi[24][e4[2]];do li=li+0X0001;end;do li=li+0X1;end;do e4=Lm[li];end;li=li+0X1;do fi[0x18]=fi[0X18][e4[2]];end;li=li+0X01;li=li+1;do e4=Lm[li];end;li=li+1;(fi)[24]=fi[0X18][e4[0x2]];li=li+0x1;li=li+1;e4=Lm[li];li=li+1;do fi[25]=e4[0X03];end;e4=Lm[li];li=li+1;fi[26]=Vi[e4[3]];li=li+1;li=li+0x1;e4=Lm[li];do li=li+1;end;V0=0X00001a;N0=fi[0X1a];do fi[V0+1]=N0;end;(fi)[V0]=N0[e4[0x2]];e4=Lm[li];li=li+0X1;do fi[0X001C]=e4[3];end;li=li+1;V0=0X1A;fi[V0]=fi[V0](fi[V0+1],fi[V0+0X02]);Wi=V0;e4=Lm[li];do li=li+0x0001;end;do(fi)[26]=fi[0X1A][e4[2]];end;li=li+0x1;do li=li+1;end;li=li+1;m0=jm[0X001];fi[27]=m0[1][m0[0X002]];e4=Lm[li];li=li+0X01;(fi)[0X1B]=fi[0X001b][e4[0X00002]];do li=li+1;end;do fi[0X1A]=fi[26][fi[0x1B]];end;e4=Lm[li];do li=li+0X00001;end;(fi)[0X1a]=fi[26][e4[2]];li=li+1;li=li+1;e4=Lm[li];do li=li+0X0001;end;do fi[26]=fi[26][e4[0X02]];end;e4=Lm[li];li=li+1;fi[0X1a]=fi[0X1a][e4[2]];do li=li+0X1;end;li=li+1;do li=li+0X1;end;local G0=fi[y0];do for Db=y0+1,0x0001a do G0=G0..fi[Db];end;end;fi[0X17]=G0;e4=Lm[li];do li=li+0X1;end;fi[22][e4[3]]=fi[23];li=li+1;V0=20;fi[V0]=fi[V0](fi[V0+0X1],fi[V0+0x0002]);Wi=V0;li=li+1;li=li+0X1;e4=Lm[li];li=li+0X01;v0=pm[e4[7]];t0=nil;Y0=v0[0X2];L0=#Y0;if not(L0>0)then else do t0={};end;for u9=0x1,L0 do local j9=(Y0[u9]);if j9[0X1]~=0X00 then do(t0)[u9-0x1]=jm[j9[2]];end;else t0[u9-0X1]={fi,j9[2]};end;end;(K)(Km,t0);end;(fi)[0X15]=gO(t0,v0,Vi);e4=Lm[li];li=li+1;fi[0X0016]=Vi[e4[0x003]];li=li+0X1;li=li+0X0001;e4=Lm[li];li=li+0x1;V0=0x016;N0=fi[22];do(fi)[V0+1]=N0;end;fi[V0]=N0[e4[0X0002]];do e4=Lm[li];end;li=li+1;(fi)[0X018]=e4[3];do li=li+1;end;do V0=22;end;do(fi)[V0]=fi[V0](fi[V0+0X1],fi[V0+2]);end;Wi=V0;e4=Lm[li];li=li+1;(fi)[22]=fi[22][e4[0X00002]];li=li+1;li=li+1;li=li+1;m0=jm[0x0001];fi[23]=m0[1][m0[0X2]];li=li+0X1;li=li+1;e4=Lm[li];li=li+0x001;(fi)[0X17]=fi[23][e4[2]];do li=li+1;end;li=li+0X01;li=li+1;do(fi)[22]=fi[22][fi[23]];end;li=li+1;do li=li+1;end;e4=Lm[li];li=li+0x1;fi[0x16]=fi[0x00016][e4[0X2]];li=li+0X1;li=li+0x1;e4=Lm[li];li=li+0X1;fi[0X16]=fi[22][e4[2]];do li=li+0X1;end;li=li+1;do e4=Lm[li];end;li=li+0x1;(fi)[0X00016]=fi[0x016][e4[0X0002]];do e4=Lm[li];end;li=li+1;do V0=0X16;end;N0=fi[22];do fi[V0+0x1]=N0;end;do(fi)[V0]=N0[e4[0X02]];end;do li=li+1;end;(fi)[0X18]=fi[0X15];li=li+1;V0=0X0016;(fi[V0])(fi[V0+0X0001],fi[V0+2]);do Wi=V0-0X001;end;li=li+1;li=li+1;do e4=Lm[li];end;li=li+1;V0=0X16;N0=fi[0X0007];(fi)[V0+0X1]=N0;fi[V0]=N0[e4[2]];li=li+1;do fi[0X18]={};end;e4=Lm[li];li=li+1;(fi)[25]=e4[0X3];do e4=Lm[li];end;li=li+1;(fi)[0X01a]=Vi[e4[3]];li=li+0X1;li=li+0X1;e4=Lm[li];li=li+1;V0=0X001A;do N0=fi[26];end;(fi)[V0+0X1]=N0;fi[V0]=N0[e4[0X00002]];e4=Lm[li];do li=li+0X0001;end;(fi)[28]=e4[3];li=li+0X01;do V0=26;end;fi[V0]=fi[V0](fi[V0+0X00001],fi[V0+2]);do Wi=V0;end;li=li+1;li=li+1;e4=Lm[li];li=li+0x1;(fi)[26]=fi[0X1A][e4[2]];li=li+0X0001;m0=jm[1];(fi)[0X1B]=m0[1][m0[0x2]];li=li+1;li=li+1;do e4=Lm[li];end;li=li+1;fi[0x1b]=fi[27][e4[0x02]];li=li+1;li=li+1;li=li+0X1;fi[0X00001A]=fi[26][fi[0X1b]];e4=Lm[li];li=li+1;do(fi)[26]=fi[26][e4[0X2]];end;li=li+0X001;li=li+0X1;e4=Lm[li];li=li+0X01;do(fi)[26]=fi[26][e4[2]];end;do li=li+0X001;end;li=li+0x00001;do e4=Lm[li];end;do li=li+1;end;fi[0X1A]=fi[26][e4[0x2]];do li=li+0x01;end;do li=li+0X1;end;e4=Lm[li];li=li+0X1;do fi[0X1b]=e4[3];end;e4=Lm[li];li=li+0X01;fi[28]=Vi[e4[3]];li=li+0X01;li=li+1;e4=Lm[li];li=li+1;V0=0x001C;N0=fi[28];(fi)[V0+1]=N0;fi[V0]=N0[e4[0x00002]];e4=Lm[li];li=li+1;(fi)[30]=e4[3];li=li+0x00001;do V0=0X0001c;end;(fi)[V0]=fi[V0](fi[V0+1],fi[V0+0x2]);Wi=V0;do li=li+1;end;li=li+0X1;e4=Lm[li];li=li+1;do fi[0X1C]=fi[0X00001C][e4[2]];end;li=li+0X1;li=li+1;li=li+0x1;m0=jm[0X1];do fi[0X1d]=m0[1][m0[2]];end;li=li+0X1;li=li+0X1;e4=Lm[li];li=li+0X1;fi[29]=fi[29][e4[0X2]];li=li+1;fi[28]=fi[0X1c][fi[0X0001d]];li=li+1;do li=li+1;end;do e4=Lm[li];end;do li=li+1;end;do fi[28]=fi[28][e4[2]];end;e4=Lm[li];li=li+0X1;(fi)[0x0001C]=fi[0X1C][e4[0X2]];e4=Lm[li];li=li+1;(fi)[28]=fi[28][e4[2]];li=li+1;y0=25;G0=fi[y0];do for KB=y0+0x01,0X1c do G0=G0..fi[KB];end;end;(fi)[25]=G0;e4=Lm[li];do li=li+1;end;do fi[24][e4[3]]=fi[0X19];end;li=li+0X01;V0=22;fi[V0]=fi[V0](fi[V0+0X1],fi[V0+0x2]);Wi=V0;e4=Lm[li];li=li+0x1;v0=pm[e4[0X07]];t0=nil;Y0=v0[0X00002];L0=#Y0;if L0>0 then t0={};for cZ=0x0001,L0 do local aZ=(Y0[cZ]);if aZ[0x01]==0 then t0[cZ-0x1]={fi,aZ[0X2]};else t0[cZ-0x1]=jm[aZ[2]];end;end;(K)(Km,t0);end;(fi)[0X17]=gO(t0,v0,Vi);e4=Lm[li];li=li+0X001;do(fi)[24]=Vi[e4[0X3]];end;e4=Lm[li];do li=li+1;end;V0=0X0018;N0=fi[0x00018];(fi)[V0+0x001]=N0;do(fi)[V0]=N0[e4[2]];end;e4=Lm[li];li=li+0x1;fi[0X1a]=e4[0X3];do li=li+0X001;end;V0=0X000018;(fi)[V0]=fi[V0](fi[V0+1],fi[V0+0X00002]);do Wi=V0;end;e4=Lm[li];do li=li+0X01;end;do(fi)[0X18]=fi[24][e4[2]];end;li=li+0X0001;li=li+1;li=li+1;do m0=jm[1];end;do fi[0X00019]=m0[1][m0[2]];end;e4=Lm[li];do li=li+0x1;end;do(fi)[0X19]=fi[0x19][e4[0x0002]];end;li=li+0X00001;li=li+0X01;li=li+1;fi[0X18]=fi[0X018][fi[25]];e4=Lm[li];li=li+1;fi[24]=fi[0X18][e4[0X2]];li=li+0X1;li=li+1;e4=Lm[li];do li=li+0X1;end;fi[24]=fi[0X18][e4[2]];li=li+0X0001;li=li+1;do e4=Lm[li];end;do li=li+0X001;end;(fi)[0X000018]=fi[0X18][e4[2]];do e4=Lm[li];end;do li=li+1;end;V0=0X18;N0=fi[0x000018];do(fi)[V0+1]=N0;end;fi[V0]=N0[e4[0X2]];li=li+0X1;do fi[0X00001A]=fi[0X0017];end;li=li+1;do V0=24;end;(fi[V0])(fi[V0+0X1],fi[V0+0X2]);Wi=V0-0x1;do li=li+1;end;li=li+1;e4=Lm[li];do li=li+0X0001;end;V0=24;N0=fi[0X9];(fi)[V0+1]=N0;(fi)[V0]=N0[e4[0X002]];li=li+1;(fi)[0X1a]={};e4=Lm[li];li=li+1;fi[0X1a][e4[0X3]]=e4[2];e4=Lm[li];li=li+1;do fi[27]=Vi[e4[0X3]];end;li=li+0X1;li=li+1;li=li+1;do Wi=27;end;fi[Wi]=fi[Wi]();li=li+1;li=li+0X1;do e4=Lm[li];end;do li=li+1;end;do(fi)[27]=fi[0x1B][e4[0x2]];end;e4=Lm[li];do li=li+1;end;do(fi)[0X1B]=fi[27][e4[2]];end;e4=Lm[li];do li=li+1;end;fi[0x1a][e4[0X3]]=fi[27];e4=Lm[li];li=li+1;v0=pm[e4[0X7]];t0=nil;Y0=v0[2];L0=#Y0;if not(L0>0)then else t0={};do for An=0X001,L0 do local Qn=Y0[An];if Qn[1]==0x000 then(t0)[An-0x1]={fi,Qn[2]};else(t0)[An-1]=jm[Qn[2]];end;end;end;K(Km,t0);end;fi[27]=gO(t0,v0,Vi);do e4=Lm[li];end;li=li+1;(fi[0X1A])[e4[0X3]]=fi[0X1b];li=li+0X00001;V0=0x18;fi[V0](fi[V0+1],fi[V0+0X2]);Wi=V0-0X1;li=li+0X0001;li=li+1;e4=Lm[li];do li=li+1;end;V0=24;N0=fi[0X9];do fi[V0+1]=N0;end;(fi)[V0]=N0[e4[2]];li=li+0X1;(fi)[26]={};e4=Lm[li];do li=li+1;end;do(fi[0X1A])[e4[0X3]]=e4[2];end;e4=Lm[li];li=li+1;fi[0X1b]=Vi[e4[3]];do li=li+1;end;li=li+0X1;li=li+1;Wi=0x1b;do(fi)[Wi]=fi[Wi]();end;li=li+1;li=li+1;e4=Lm[li];li=li+1;do fi[27]=fi[0x01b][e4[0X2]];end;li=li+0X001;li=li+0X01;e4=Lm[li];li=li+1;(fi)[27]=fi[0X00001B][e4[0X0002]];e4=Lm[li];do li=li+1;end;do fi[26][e4[0X3]]=fi[27];end;e4=Lm[li];do li=li+1;end;v0=pm[e4[7]];t0=nil;Y0=v0[0X2];L0=#Y0;if not(L0>0)then else t0={};for SM=0X1,L0 do local pM=(Y0[SM]);if pM[1]==0 then t0[SM-0X1]={fi,pM[0x00002]};else t0[SM-0x0001]=jm[pM[0X00002]];end;end;K(Km,t0);end;fi[27]=gO(t0,v0,Vi);e4=Lm[li];do li=li+1;end;fi[26][e4[0X3]]=fi[0X00001b];do li=li+0x1;end;V0=24;fi[V0](fi[V0+0x1],fi[V0+0X2]);Wi=V0-1;e4=Lm[li];li=li+0X01;do V0=0X00018;end;do N0=fi[9];end;(fi)[V0+0X1]=N0;(fi)[V0]=N0[e4[2]];do li=li+1;end;(fi)[0X1a]={};e4=Lm[li];li=li+0X001;do fi[0x1a][e4[0X003]]=e4[0x0002];end;do e4=Lm[li];end;li=li+0X1;(fi)[0X01B]=Vi[e4[3]];li=li+1;Wi=0X1B;fi[Wi]=fi[Wi]();li=li+1;li=li+1;e4=Lm[li];do li=li+0X1;end;do(fi)[0X1B]=fi[27][e4[2]];end;do e4=Lm[li];end;li=li+0x1;fi[27]=fi[27][e4[0X02]];li=li+0X1;li=li+0x00001;e4=Lm[li];li=li+1;do fi[26][e4[0X03]]=fi[27];end;e4=Lm[li];li=li+1;v0=pm[e4[0X7]];t0=nil;do Y0=v0[2];end;L0=#Y0;if L0>0 then do t0={};end;do for T2=0X01,L0 do local W2=Y0[T2];if W2[0X00001]==0X0 then(t0)[T2-1]={fi,W2[2]};else t0[T2-0X01]=jm[W2[2]];end;end;end;K(Km,t0);end;(fi)[27]=gO(t0,v0,Vi);e4=Lm[li];li=li+1;fi[26][e4[3]]=fi[27];do li=li+0X1;end;V0=24;fi[V0](fi[V0+0X01],fi[V0+2]);do Wi=V0-0X00001;end;do li=li+1;end;do li=li+0X1;end;e4=Lm[li];li=li+0X1;V0=24;N0=fi[0x9];fi[V0+0x001]=N0;(fi)[V0]=N0[e4[2]];li=li+1;(fi)[26]={};do e4=Lm[li];end;li=li+1;fi[26][e4[0X003]]=e4[0x002];e4=Lm[li];li=li+1;fi[26][e4[3]]=e4[2];li=li+0X001;m0=jm[0X01];do(fi)[27]=m0[0X0001][m0[0x0002]];end;e4=Lm[li];li=li+1;fi[27]=fi[0X001b][e4[0X02]];e4=Lm[li];do li=li+1;end;fi[0x1b]=fi[27][e4[2]];li=li+1;li=li+0X1;do e4=Lm[li];end;li=li+1;(fi)[0X01B]=fi[0X0001B][e4[2]];li=li+1;li=li+1;do e4=Lm[li];end;li=li+1;fi[0x001B]=fi[27]-e4[0X02];e4=Lm[li];do li=li+1;end;do(fi[26])[e4[0X3]]=fi[27];end;e4=Lm[li];li=li+1;fi[0X01b]=Vi[e4[3]];do li=li+1;end;Wi=27;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+0X0001;(fi)[27]=fi[0X1b][e4[2]];do e4=Lm[li];end;li=li+0X00001;(fi)[27]=fi[0X1B][e4[2]];e4=Lm[li];do li=li+0x1;end;do(fi[26])[e4[0X00003]]=fi[27];end;do e4=Lm[li];end;li=li+1;v0=pm[e4[0x7]];t0=nil;do Y0=v0[2];end;L0=#Y0;if L0>0 then t0={};for zd=0X1,L0 do local Id=Y0[zd];if Id[0X1]~=0 then do t0[zd-1]=jm[Id[2]];end;else t0[zd-0X1]={fi,Id[0X2]};end;end;(K)(Km,t0);end;fi[27]=gO(t0,v0,Vi);do e4=Lm[li];end;do li=li+1;end;fi[0X1a][e4[3]]=fi[0x1b];li=li+1;do V0=0X18;end;fi[V0](fi[V0+1],fi[V0+2]);Wi=V0-0X01;e4=Lm[li];li=li+0x1;V0=0X18;N0=fi[0x0009];do(fi)[V0+1]=N0;end;(fi)[V0]=N0[e4[0x2]];do li=li+1;end;(fi)[26]={};e4=Lm[li];li=li+1;fi[0X1a][e4[3]]=e4[0x0002];e4=Lm[li];li=li+1;fi[0x1B]=Vi[e4[3]];li=li+0X1;do Wi=27;end;(fi)[Wi]=fi[Wi]();li=li+1;li=li+0x1;e4=Lm[li];do li=li+1;end;fi[0x1b]=fi[0X00001B][e4[2]];do li=li+0X1;end;li=li+0X01;e4=Lm[li];li=li+0X00001;fi[0X1B]=fi[27][e4[2]];li=li+0X01;do li=li+0x00001;end;e4=Lm[li];li=li+0X1;(fi[26])[e4[0X03]]=fi[0X1B];e4=Lm[li];li=li+0X0001;do v0=pm[e4[0X07]];end;do t0=nil;end;Y0=v0[2];L0=#Y0;if L0>0 then t0={};do for oU=0X1,L0 do local CU=Y0[oU];if CU[0X1]==0x0 then(t0)[oU-0x1]={fi,CU[0X2]};else do t0[oU-1]=jm[CU[2]];end;end;end;end;(K)(Km,t0);end;fi[27]=gO(t0,v0,Vi);e4=Lm[li];li=li+1;fi[0X00001A][e4[3]]=fi[27];li=li+0X1;V0=24;(fi[V0])(fi[V0+0x001],fi[V0+2]);Wi=V0-1;li=li+1;li=li+0X1;do e4=Lm[li];end;li=li+1;V0=0X18;do N0=fi[0XA];end;(fi)[V0+1]=N0;do fi[V0]=N0[e4[0X2]];end;li=li+1;(fi)[26]={};e4=Lm[li];li=li+1;(fi[26])[e4[0X003]]=e4[2];e4=Lm[li];li=li+1;(fi[26])[e4[0X0003]]=e4[2];e4=Lm[li];do li=li+1;end;(fi[0X1a])[e4[3]]=e4[0X002];e4=Lm[li];li=li+1;fi[27]=Vi[e4[3]];li=li+0X1;Wi=27;do fi[Wi]=fi[Wi]();end;li=li+1;li=li+1;e4=Lm[li];li=li+1;fi[0X01B]=fi[0X00001b][e4[0X0002]];e4=Lm[li];do li=li+0x1;end;fi[0x0001b]=fi[0X001B][e4[0X2]];li=li+0X1;li=li+1;do e4=Lm[li];end;do li=li+1;end;do(fi[26])[e4[3]]=fi[27];end;e4=Lm[li];li=li+1;v0=pm[e4[0x7]];t0=nil;Y0=v0[2];L0=#Y0;if L0>0X0 then do t0={};end;do for av=0X1,L0 do local lv=Y0[av];if lv[0x0001]==0 then t0[av-0X1]={fi,lv[0X2]};else t0[av-1]=jm[lv[2]];end;end;end;K(Km,t0);end;do(fi)[27]=gO(t0,v0,Vi);end;e4=Lm[li];li=li+0X0001;do fi[0x1A][e4[3]]=fi[0X1B];end;do li=li+1;end;V0=0X18;(fi[V0])(fi[V0+1],fi[V0+0X002]);do Wi=V0-0x1;end;li=li+0x01;li=li+0x01;e4=Lm[li];do li=li+1;end;do V0=0x18;end;N0=fi[0xa];fi[V0+0x00001]=N0;(fi)[V0]=N0[e4[0X02]];li=li+1;fi[26]={};do e4=Lm[li];end;do li=li+0X0001;end;fi[0X001A][e4[0X00003]]=e4[0X00002];e4=Lm[li];li=li+0X1;fi[26][e4[0X0003]]=e4[2];e4=Lm[li];li=li+0X1;(fi[0X1A])[e4[0x3]]=e4[0X2];e4=Lm[li];li=li+1;fi[27]=Vi[e4[0X3]];li=li+1;do Wi=0X1B;end;do(fi)[Wi]=fi[Wi]();end;e4=Lm[li];li=li+1;fi[27]=fi[27][e4[2]];do e4=Lm[li];end;li=li+1;fi[27]=fi[27][e4[2]];e4=Lm[li];li=li+1;fi[0x0001A][e4[3]]=fi[27];do e4=Lm[li];end;li=li+1;v0=pm[e4[0X07]];t0=nil;Y0=v0[0X0002];L0=#Y0;if L0>0x00000 then t0={};for QK=1,L0 do local SK=Y0[QK];if SK[0x1]==0x000 then t0[QK-1]={fi,SK[2]};else do t0[QK-0X1]=jm[SK[2]];end;end;end;(K)(Km,t0);end;do fi[27]=gO(t0,v0,Vi);end;do e4=Lm[li];end;li=li+0X1;(fi[0X0001A])[e4[3]]=fi[27];li=li+1;V0=0X18;(fi[V0])(fi[V0+0x01],fi[V0+0X0002]);Wi=V0-1;li=li+1;li=li+0X00001;e4=Lm[li];do li=li+1;end;do V0=24;end;N0=fi[10];do(fi)[V0+0X001]=N0;end;do(fi)[V0]=N0[e4[2]];end;li=li+0X1;do(fi)[0X1A]={};end;e4=Lm[li];li=li+0X00001;fi[0X1A][e4[3]]=e4[0X2];do e4=Lm[li];end;li=li+1;fi[27]=Vi[e4[3]];do li=li+0X01;end;li=li+1;li=li+0x0001;Wi=0X00001B;do(fi)[Wi]=fi[Wi]();end;li=li+1;li=li+0X00001;do e4=Lm[li];end;li=li+0X001;(fi)[27]=fi[0X1b][e4[0X2]];e4=Lm[li];li=li+1;fi[27]=fi[27][e4[0X002]];do li=li+1;end;do li=li+0X001;end;do e4=Lm[li];end;li=li+1;fi[26][e4[0x3]]=fi[27];e4=Lm[li];do li=li+0x01;end;v0=pm[e4[7]];do t0=nil;end;Y0=v0[2];L0=#Y0;if L0>0 then do t0={};end;for ws=1,L0 do local Qs=(Y0[ws]);if Qs[1]~=0X0 then(t0)[ws-1]=jm[Qs[0X2]];else(t0)[ws-0X01]={fi,Qs[2]};end;end;K(Km,t0);end;(fi)[27]=gO(t0,v0,Vi);e4=Lm[li];do li=li+0x1;end;(fi[26])[e4[0X3]]=fi[0X1B];do li=li+0X001;end;V0=0X18;(fi[V0])(fi[V0+0X1],fi[V0+0x002]);Wi=V0-1;li=li+0X001;do li=li+1;end;e4=Lm[li];do li=li+0X001;end;V0=24;N0=fi[0xa];(fi)[V0+1]=N0;do fi[V0]=N0[e4[2]];end;li=li+0X1;fi[0X1A]={};do e4=Lm[li];end;li=li+0X1;(fi[26])[e4[0X3]]=e4[2];e4=Lm[li];li=li+1;do(fi)[0X01b]=Vi[e4[0X3]];end;do li=li+0X1;end;li=li+0x1;li=li+1;Wi=27;fi[Wi]=fi[Wi]();do e4=Lm[li];end;li=li+0X001;(fi)[27]=fi[27][e4[2]];e4=Lm[li];li=li+1;do(fi)[27]=fi[0X1B][e4[0X02]];end;e4=Lm[li];do li=li+0X01;end;fi[0X1a][e4[3]]=fi[27];do e4=Lm[li];end;li=li+1;v0=pm[e4[0x7]];t0=nil;Y0=v0[0x02];L0=#Y0;if not(L0>0)then else t0={};for jc=1,L0 do local Dc=Y0[jc];if Dc[1]==0X0 then(t0)[jc-0x001]={fi,Dc[2]};else t0[jc-1]=jm[Dc[0x2]];end;end;(K)(Km,t0);end;fi[0X1B]=gO(t0,v0,Vi);do e4=Lm[li];end;li=li+1;do(fi[26])[e4[0X3]]=fi[0X00001b];end;li=li+0X001;V0=0X0018;(fi[V0])(fi[V0+1],fi[V0+0X2]);Wi=V0-1;do li=li+0X1;end;do li=li+0X1;end;do e4=Lm[li];end;do li=li+1;end;do V0=0x18;end;do N0=fi[12];end;(fi)[V0+0x1]=N0;(fi)[V0]=N0[e4[2]];do li=li+0x0001;end;fi[0X0001a]={};e4=Lm[li];do li=li+0X1;end;(fi[0X00001a])[e4[3]]=e4[0x2];do li=li+1;end;fi[0X001B]={T({},0x001,0X4)};do e4=Lm[li];end;li=li+1;do(fi)[0X01C]=e4[3];end;e4=Lm[li];li=li+1;fi[29]=e4[0X03];e4=Lm[li];do li=li+0x001;end;(fi)[0X1E]=e4[3];e4=Lm[li];li=li+1;(fi)[31]=e4[0X3];do li=li+0X00001;end;V0=27;local R0=fi[V0];do for O_=1,0X004 do R0[S0+O_]=fi[V0+O_];end;end;do e4=Lm[li];end;li=li+1;(fi[0X01a])[e4[0X3]]=fi[0X1b];e4=Lm[li];li=li+0X001;do v0=pm[e4[7]];end;t0=nil;Y0=v0[2];L0=#Y0;if not(L0>0)then else t0={};for ON=0X1,L0 do local fN=(Y0[ON]);if fN[1]~=0 then(t0)[ON-1]=jm[fN[0x00002]];else(t0)[ON-0x1]={fi,fN[2]};end;end;K(Km,t0);end;(fi)[27]=gO(t0,v0,Vi);e4=Lm[li];li=li+1;(fi[0X00001A])[e4[3]]=fi[27];do li=li+0X1;end;V0=0x00018;do(fi)[V0]=fi[V0](fi[V0+1],fi[V0+0x2]);end;do Wi=V0;end;do li=li+0X0001;end;li=li+1;e4=Lm[li];li=li+1;do(fi)[0X000019]=Vi[e4[3]];end;do li=li+1;end;Wi=25;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+1;do(fi)[25]=fi[0X00019][e4[2]];end;li=li+0X1;do li=li+0X1;end;e4=Lm[li];li=li+0X00001;(fi)[0X19]=fi[0X19][e4[0X00002]];e4=Lm[li];do li=li+1;end;if fi[25]==e4[0X0002]then do li=e4[0X00004];end;end;else for FO=e4[4],e4[0X7]do fi[FO]=nil;end;end;else do if b4==0X0018 then local Ow=(1-1)*0X32;local Qw,nw,fw=27,nil,(fi[0X10]);do(fi)[Qw+1]=fw;end;(fi)[Qw]=fw[e4[2]];li=li+0X1;(fi)[29]={};e4=Lm[li];do li=li+1;end;(fi[0X001d])[e4[3]]=e4[0X002];li=li+1;do(fi)[30]={T({},1,3)};end;e4=Lm[li];li=li+1;do fi[31]=e4[0X3];end;do e4=Lm[li];end;li=li+1;(fi)[0x000020]=e4[0X3];e4=Lm[li];do li=li+1;end;fi[0X0021]=e4[3];li=li+1;Qw=0X1e;local jw=fi[Qw];do for Bi=1,3 do jw[Ow+Bi]=fi[Qw+Bi];end;end;do e4=Lm[li];end;li=li+1;(fi[0X1D])[e4[0X00003]]=fi[0x1E];e4=Lm[li];li=li+0X1;local Fw=(pm[e4[0X7]]);local vw=Fw[0x002];local Cw=(#vw);if Cw>0X0 then nw={};for lU=1,Cw do local gU=(vw[lU]);if gU[1]~=0X00000 then nw[lU-1]=jm[gU[0X2]];else do(nw)[lU-0X1]={fi,gU[2]};end;end;end;K(Km,nw);end;fi[0x0001e]=gO(nw,Fw,Vi);do e4=Lm[li];end;li=li+0X001;fi[0X1d][e4[0X3]]=fi[30];do li=li+1;end;Qw=27;(fi)[Qw]=fi[Qw](fi[Qw+1],fi[Qw+0x2]);Wi=Qw;do e4=Lm[li];end;li=li+1;(fi)[28]=Vi[e4[0X3]];li=li+1;Wi=28;fi[Wi]=fi[Wi]();li=li+1;do li=li+1;end;e4=Lm[li];li=li+0X1;fi[0x00001c]=fi[28][e4[0X2]];do e4=Lm[li];end;li=li+1;fi[0X01C]=fi[28][e4[2]];e4=Lm[li];li=li+1;do if fi[0x1c]~=e4[0X2]then else li=e4[4];end;end;else local uE,gE=29,(fi[28]);do fi[uE+0x1]=gE;end;fi[uE]=gE[e4[2]];e4=Lm[li];li=li+0x1;fi[0X1f]=Vi[e4[0X3]];li=li+0X1;li=li+0x1;li=li+1;Wi=31;(fi)[Wi]=fi[Wi]();li=li+1;li=li+0X1;do e4=Lm[li];end;do li=li+1;end;do(fi)[0X1f]=fi[0x1f][e4[2]];end;e4=Lm[li];li=li+0X1;(fi)[0X1F]=fi[31][e4[2]];li=li+1;uE=0x00001D;(fi[uE])(fi[uE+0X00001],fi[uE+0x2]);do Wi=uE-1;end;do li=li+1;end;do li=li+1;end;e4=Lm[li];do li=li+0x1;end;li=e4[7];end;end;end;end;end;end;else do if not(b4<0X0007)then do if not(b4>=0Xa)then if not(b4<8)then if b4~=9 then local HL,hL=0X13,fi[0X12];(fi)[HL+0X01]=hL;(fi)[HL]=hL[e4[2]];e4=Lm[li];li=li+0X1;fi[0X015]=Vi[e4[0X3]];li=li+1;do Wi=21;end;(fi)[Wi]=fi[Wi]();e4=Lm[li];do li=li+0X1;end;(fi)[0X15]=fi[0x15][e4[0X0002]];e4=Lm[li];do li=li+1;end;fi[21]=fi[0x15][e4[0X2]];li=li+1;HL=0X0013;fi[HL](fi[HL+0X01],fi[HL+0X2]);do Wi=HL-0x00001;end;e4=Lm[li];li=li+0X1;li=e4[0X7];else(fi)[e4[4]]=fi[e4[0X00007]]>=fi[e4[6]];end;else fi[e4[4]]={T({},1,e4[7])};end;else if not(b4<12)then if b4~=13 then local G0=fi[5];local W0=0X13;(fi)[W0+1]=G0;fi[W0]=G0[e4[2]];li=li+1;(fi)[21]={};do e4=Lm[li];end;li=li+1;do fi[21][e4[3]]=e4[2];end;e4=Lm[li];li=li+0X1;fi[22]=Vi[e4[3]];do li=li+0x1;end;li=li+1;do li=li+0X1;end;Wi=22;do(fi)[Wi]=fi[Wi]();end;do li=li+1;end;do li=li+0X00001;end;e4=Lm[li];do li=li+0x1;end;fi[22]=fi[22][e4[0x2]];e4=Lm[li];li=li+1;local Z0=(nil);(fi)[22]=fi[22][e4[2]];do e4=Lm[li];end;li=li+1;(fi[0x15])[e4[0X003]]=fi[22];e4=Lm[li];li=li+1;local C0=pm[e4[7]];local D0=(C0[2]);local j0=(#D0);if not(j0>0X000)then else Z0={};for kJ=0X1,j0 do local TJ=D0[kJ];if TJ[1]~=0X00 then(Z0)[kJ-0X1]=jm[TJ[0X2]];else do(Z0)[kJ-1]={fi,TJ[2]};end;end;end;(K)(Km,Z0);end;(fi)[0X16]=gO(Z0,C0,Vi);e4=Lm[li];li=li+0X001;do(fi[0X15])[e4[3]]=fi[22];end;li=li+0X1;W0=0x13;fi[W0](fi[W0+0X01],fi[W0+2]);Wi=W0-0X001;e4=Lm[li];li=li+0X1;W0=0X13;G0=fi[0x005];do fi[W0+1]=G0;end;(fi)[W0]=G0[e4[2]];li=li+0X00001;do fi[21]={};end;e4=Lm[li];li=li+0X00001;(fi[21])[e4[3]]=e4[2];e4=Lm[li];do li=li+1;end;do fi[22]=Vi[e4[3]];end;li=li+1;do Wi=22;end;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+1;(fi)[0X16]=fi[0X00016][e4[2]];e4=Lm[li];li=li+0X0001;fi[0X0016]=fi[0X16][e4[2]];li=li+0x01;li=li+0X1;e4=Lm[li];do li=li+0X1;end;do fi[0X15][e4[0X00003]]=fi[0X16];end;e4=Lm[li];li=li+0X01;C0=pm[e4[7]];do Z0=nil;end;D0=C0[2];j0=#D0;if j0>0X000 then do Z0={};end;do for FO=0X00001,j0 do local OO=D0[FO];if OO[1]~=0x0 then Z0[FO-1]=jm[OO[0X02]];else Z0[FO-1]={fi,OO[0X00002]};end;end;end;(K)(Km,Z0);end;(fi)[0X0016]=gO(Z0,C0,Vi);e4=Lm[li];li=li+1;do fi[0X000015][e4[0x3]]=fi[0x16];end;li=li+0X00001;W0=19;(fi[W0])(fi[W0+0X01],fi[W0+2]);Wi=W0-1;e4=Lm[li];li=li+1;local Q0=((1-0X01)*50);do W0=19;end;G0=fi[0x5];fi[W0+0X00001]=G0;fi[W0]=G0[e4[2]];do li=li+1;end;fi[21]={};e4=Lm[li];do li=li+1;end;fi[0X15][e4[3]]=e4[0X2];e4=Lm[li];do li=li+0x1;end;do(fi)[0X16]=Vi[e4[3]];end;li=li+0X1;li=li+0X1;do li=li+0X0001;end;Wi=0x16;do fi[Wi]=fi[Wi]();end;e4=Lm[li];li=li+0X00001;do(fi)[0X16]=fi[0X16][e4[0X2]];end;li=li+0x01;do li=li+1;end;e4=Lm[li];li=li+0x1;fi[22]=fi[22][e4[0X2]];e4=Lm[li];li=li+1;fi[0X15][e4[3]]=fi[22];e4=Lm[li];li=li+0X1;C0=pm[e4[7]];Z0=nil;D0=C0[0X2];j0=#D0;if not(j0>0X0)then else do Z0={};end;for rv=0X1,j0 do local Zv=D0[rv];do if Zv[0X1]==0 then Z0[rv-0X1]={fi,Zv[0x00002]};else Z0[rv-0X1]=jm[Zv[0X2]];end;end;end;K(Km,Z0);end;fi[22]=gO(Z0,C0,Vi);e4=Lm[li];li=li+0X1;do(fi[21])[e4[3]]=fi[22];end;li=li+0X001;W0=19;(fi[W0])(fi[W0+1],fi[W0+0X00002]);Wi=W0-0X1;do li=li+1;end;li=li+0X1;e4=Lm[li];do li=li+1;end;W0=0x13;do G0=fi[0X00006];end;(fi)[W0+0X1]=G0;(fi)[W0]=G0[e4[0X2]];li=li+1;fi[21]={};e4=Lm[li];li=li+0X00001;do fi[21][e4[0X3]]=e4[2];end;li=li+1;(fi)[0X0016]={T({},1,2)};e4=Lm[li];li=li+1;(fi)[0X017]=e4[0X03];do e4=Lm[li];end;li=li+1;(fi)[0X18]=e4[3];li=li+1;W0=22;local V0=fi[W0];for OU=0X00001,2 do do(V0)[Q0+OU]=fi[W0+OU];end;end;e4=Lm[li];li=li+0x0001;fi[0X15][e4[0X3]]=fi[22];e4=Lm[li];do li=li+1;end;C0=pm[e4[7]];Z0=nil;do D0=C0[0X2];end;do j0=#D0;end;if not(j0>0)then else Z0={};for uD=1,j0 do local cD=D0[uD];if cD[0X01]==0X0 then Z0[uD-1]={fi,cD[2]};else do(Z0)[uD-1]=jm[cD[2]];end;end;end;K(Km,Z0);end;do(fi)[22]=gO(Z0,C0,Vi);end;e4=Lm[li];li=li+1;do fi[21][e4[0X3]]=fi[0X016];end;li=li+1;W0=19;(fi)[W0]=fi[W0](fi[W0+0X1],fi[W0+2]);Wi=W0;li=li+1;li=li+0X1;e4=Lm[li];do li=li+1;end;do(fi)[20]=Vi[e4[0X03]];end;li=li+1;li=li+0x0001;li=li+0X1;Wi=20;fi[Wi]=fi[Wi]();li=li+1;li=li+0X001;e4=Lm[li];li=li+0X001;(fi)[20]=fi[20][e4[0X2]];li=li+0X01;li=li+1;e4=Lm[li];li=li+0X0001;fi[20]=fi[20][e4[2]];li=li+0X1;li=li+0X00001;e4=Lm[li];do li=li+0X1;end;if fi[0x14]==e4[0x02]then li=e4[0X4];end;else local Lc,Gc=0x19,(fi[24]);(fi)[Lc+0x00001]=Gc;(fi)[Lc]=Gc[e4[2]];e4=Lm[li];li=li+1;(fi)[0X001b]=Vi[e4[0X3]];li=li+1;Wi=0X001B;do fi[Wi]=fi[Wi]();end;e4=Lm[li];li=li+0x0001;do fi[0x01b]=fi[27][e4[0X2]];end;li=li+1;do li=li+1;end;e4=Lm[li];li=li+0X1;fi[27]=fi[0X00001b][e4[2]];li=li+0X00001;do Lc=25;end;fi[Lc](fi[Lc+1],fi[Lc+0X0002]);do Wi=Lc-0X1;end;do li=li+1;end;li=li+0X1;e4=Lm[li];do li=li+1;end;do li=e4[7];end;end;else if b4~=0X000B then(fi)[e4[4]]=X(fi[e4[7]]);else local oK,RK=0X00014,(fi[0X000013]);(fi)[oK+1]=RK;fi[oK]=RK[e4[2]];e4=Lm[li];do li=li+0X1;end;fi[22]=Vi[e4[3]];do li=li+0X1;end;li=li+0x01;do li=li+0X1;end;Wi=0x16;fi[Wi]=fi[Wi]();li=li+1;do li=li+1;end;do e4=Lm[li];end;li=li+1;(fi)[0X16]=fi[0X000016][e4[0X2]];li=li+0X1;li=li+1;e4=Lm[li];li=li+1;fi[22]=fi[0x16][e4[2]];li=li+1;do oK=20;end;(fi[oK])(fi[oK+0X1],fi[oK+2]);Wi=oK-0x1;do li=li+0X1;end;li=li+0X01;do e4=Lm[li];end;li=li+1;li=e4[0x00007];end;end;end;end;else do if not(b4<3)then if not(b4>=5)then if b4~=0X0004 then local sQ=(pm[e4[7]]);local kQ=sQ[0X02];local dQ=nil;local RQ=#kQ;if RQ>0 then dQ={};do for P5=1,RQ do local q5=(kQ[P5]);if q5[0X01]~=0X00 then dQ[P5-0X001]=jm[q5[2]];else(dQ)[P5-0X0001]={fi,q5[0X002]};end;end;end;(K)(Km,dQ);end;fi[e4[0X4]]=gO(dQ,sQ,Vi);else local gd=0X00001C;local jd=fi[27];(fi)[gd+1]=jd;fi[gd]=jd[e4[0X00002]];e4=Lm[li];do li=li+0x1;end;do fi[30]=Vi[e4[3]];end;li=li+0X1;do li=li+1;end;li=li+1;Wi=30;(fi)[Wi]=fi[Wi]();do li=li+1;end;li=li+0X1;e4=Lm[li];li=li+1;fi[0X01E]=fi[30][e4[0X2]];e4=Lm[li];li=li+0X1;do(fi)[0X1E]=fi[30][e4[2]];end;do li=li+0x01;end;gd=28;fi[gd](fi[gd+0X1],fi[gd+2]);do Wi=gd-0X1;end;do li=li+0X01;end;li=li+1;e4=Lm[li];li=li+1;li=e4[0X7];end;else if b4~=6 then local NB,LB=28,(fi[0x10]);do(fi)[NB+1]=LB;end;do fi[NB]=LB[e4[2]];end;li=li+1;fi[30]={};local XB=((1-1)*0X32);do e4=Lm[li];end;do li=li+0X1;end;fi[30][e4[3]]=e4[0X2];do li=li+0X1;end;do fi[31]={T({},0x1,0X3)};end;e4=Lm[li];do li=li+0X1;end;(fi)[0X00020]=e4[3];e4=Lm[li];li=li+0X1;(fi)[33]=e4[0X00003];e4=Lm[li];li=li+1;fi[0X22]=e4[0X3];do li=li+1;end;do NB=31;end;local DB=(fi[NB]);for hI=1,0X3 do(DB)[XB+hI]=fi[NB+hI];end;e4=Lm[li];li=li+1;(fi[0X0001e])[e4[0X3]]=fi[31];do e4=Lm[li];end;local VB=(pm[e4[7]]);local PB=(VB[0X2]);li=li+1;local hB,UB=nil,#PB;do if UB>0 then hB={};for Dm=1,UB do local dm=(PB[Dm]);if dm[1]~=0 then hB[Dm-1]=jm[dm[2]];else(hB)[Dm-0X0001]={fi,dm[2]};end;end;K(Km,hB);end;end;do(fi)[0X1f]=gO(hB,VB,Vi);end;e4=Lm[li];li=li+0X1;(fi[0X001e])[e4[0x3]]=fi[31];li=li+1;NB=28;fi[NB]=fi[NB](fi[NB+0X001],fi[NB+0x002]);do Wi=NB;end;e4=Lm[li];li=li+1;do fi[29]=Vi[e4[3]];end;li=li+1;li=li+0X1;do li=li+1;end;Wi=29;(fi)[Wi]=fi[Wi]();li=li+1;li=li+0X00001;do e4=Lm[li];end;do li=li+0X00001;end;(fi)[29]=fi[0x1D][e4[0X02]];e4=Lm[li];do li=li+0X00001;end;fi[29]=fi[0x00001d][e4[2]];e4=Lm[li];li=li+0X1;if fi[29]==e4[2]then do li=e4[0X0004];end;end;else do fi[e4[4]]=C(fi[e4[7]],fi[e4[6]]);end;end;end;else do if b4>=0X0001 then if b4~=0X2 then local by,ky=0X001A,fi[13];fi[by+1]=ky;(fi)[by]=ky[e4[0X2]];li=li+1;fi[28]={};e4=Lm[li];do li=li+1;end;fi[28][e4[3]]=e4[0X2];e4=Lm[li];li=li+0X1;fi[29]=Vi[e4[3]];do li=li+0X00001;end;li=li+0x01;li=li+0X1;Wi=29;fi[Wi]=fi[Wi]();li=li+0X1;li=li+0x1;e4=Lm[li];li=li+0X00001;do(fi)[0x00001D]=fi[0X01d][e4[2]];end;li=li+1;li=li+1;e4=Lm[li];li=li+1;fi[29]=fi[0x00001d][e4[2]];li=li+1;li=li+0X00001;e4=Lm[li];li=li+0x1;do(fi[0x1c])[e4[0x3]]=fi[29];end;e4=Lm[li];local my=(pm[e4[7]]);local Ly=(my[2]);li=li+0X1;local gy=(#Ly);local ay=nil;if not(gy>0X0)then else ay={};for Ug=1,gy do local zg=Ly[Ug];do if zg[1]==0X000 then(ay)[Ug-1]={fi,zg[2]};else ay[Ug-1]=jm[zg[2]];end;end;end;(K)(Km,ay);end;fi[0X0001d]=gO(ay,my,Vi);e4=Lm[li];li=li+0X001;(fi[28])[e4[0x3]]=fi[29];li=li+1;do by=0X1A;end;(fi[by])(fi[by+0X01],fi[by+2]);Wi=by-0X1;e4=Lm[li];do li=li+1;end;by=26;ky=fi[14];fi[by+1]=ky;fi[by]=ky[e4[2]];li=li+0x0001;(fi)[0X1c]={};e4=Lm[li];li=li+1;(fi[28])[e4[3]]=e4[2];e4=Lm[li];li=li+0x0001;fi[29]=Vi[e4[3]];do li=li+1;end;do li=li+1;end;li=li+0X1;do Wi=29;end;(fi)[Wi]=fi[Wi]();do e4=Lm[li];end;do li=li+1;end;do(fi)[0X0001D]=fi[29][e4[2]];end;e4=Lm[li];li=li+0x0001;(fi)[0x001D]=fi[0X1d][e4[0X00002]];li=li+1;li=li+1;e4=Lm[li];li=li+1;(fi[28])[e4[0x3]]=fi[29];e4=Lm[li];li=li+0x1;my=pm[e4[0X7]];ay=nil;Ly=my[0X00002];do gy=#Ly;end;if not(gy>0)then else ay={};do for XU=1,gy do local fU=Ly[XU];if fU[1]~=0x00 then(ay)[XU-0X01]=jm[fU[2]];else(ay)[XU-0X1]={fi,fU[0X2]};end;end;end;(K)(Km,ay);end;(fi)[29]=gO(ay,my,Vi);e4=Lm[li];li=li+0x1;(fi[0X00001c])[e4[3]]=fi[0X1d];li=li+0X1;by=0X1a;fi[by](fi[by+0X001],fi[by+2]);do Wi=by-0X1;end;li=li+1;do li=li+0X1;end;e4=Lm[li];li=li+0x0001;do by=0X00001a;end;ky=fi[14];do(fi)[by+0X1]=ky;end;fi[by]=ky[e4[0X2]];li=li+0x1;(fi)[0X1c]={};e4=Lm[li];li=li+1;fi[0x1C][e4[0x03]]=e4[0X2];e4=Lm[li];li=li+0X1;(fi)[29]=Vi[e4[3]];do li=li+1;end;li=li+1;li=li+1;do Wi=29;end;fi[Wi]=fi[Wi]();e4=Lm[li];li=li+0X1;(fi)[29]=fi[0X00001D][e4[2]];e4=Lm[li];li=li+1;(fi)[29]=fi[0X00001D][e4[2]];e4=Lm[li];do li=li+0X01;end;(fi[0X00001c])[e4[3]]=fi[29];e4=Lm[li];li=li+1;my=pm[e4[7]];do ay=nil;end;Ly=my[2];gy=#Ly;if gy>0 then ay={};for tn=0x1,gy do local kn=Ly[tn];if kn[1]==0 then ay[tn-1]={fi,kn[2]};else ay[tn-0X1]=jm[kn[2]];end;end;K(Km,ay);end;(fi)[29]=gO(ay,my,Vi);e4=Lm[li];li=li+0x1;do fi[28][e4[0X00003]]=fi[0X1d];end;li=li+1;by=0x001A;fi[by](fi[by+1],fi[by+2]);do Wi=by-1;end;e4=Lm[li];li=li+1;by=26;ky=fi[16];local uy=((0X1-0X1)*0X00032);(fi)[by+0X00001]=ky;(fi)[by]=ky[e4[2]];do li=li+1;end;fi[28]={};e4=Lm[li];li=li+1;do(fi[28])[e4[0X00003]]=e4[2];end;do li=li+0x1;end;(fi)[29]={T({},0X001,0X3)};do e4=Lm[li];end;li=li+1;fi[0X1E]=e4[0X3];e4=Lm[li];li=li+1;do fi[31]=e4[0X3];end;e4=Lm[li];do li=li+1;end;fi[32]=e4[3];li=li+0X1;by=0X1D;local py=fi[by];for u8=0x0001,3 do do py[uy+u8]=fi[by+u8];end;end;e4=Lm[li];do li=li+1;end;(fi[28])[e4[0X3]]=fi[0X1D];e4=Lm[li];do li=li+0X001;end;do my=pm[e4[7]];end;ay=nil;do Ly=my[2];end;gy=#Ly;if gy>0X0 then ay={};for Tx=1,gy do local wx=(Ly[Tx]);if wx[0X01]==0 then ay[Tx-0x1]={fi,wx[2]};else(ay)[Tx-1]=jm[wx[0X2]];end;end;K(Km,ay);end;(fi)[29]=gO(ay,my,Vi);e4=Lm[li];li=li+1;(fi[28])[e4[0X0003]]=fi[0X1d];li=li+0X00001;by=26;fi[by]=fi[by](fi[by+0X0001],fi[by+0X2]);Wi=by;e4=Lm[li];li=li+1;fi[27]=Vi[e4[3]];li=li+1;li=li+1;li=li+1;do Wi=0X1B;end;(fi)[Wi]=fi[Wi]();e4=Lm[li];li=li+0X1;fi[27]=fi[27][e4[0X2]];li=li+1;li=li+1;e4=Lm[li];li=li+0X1;(fi)[0X1b]=fi[27][e4[0X002]];li=li+0X1;li=li+1;e4=Lm[li];li=li+1;if fi[0X00001b]==e4[2]then li=e4[0X4];end;else(fi)[e4[0x4]]=Vi[e4[0X0003]];end;else if fi[e4[4]]then li=e4[7];end;end;end;end;end;end;end;end;end;end);if not(ni)then if s(bi)~='stri\110g'then E(bi,0);else if not(I(bi,'\097\116\116emp\116 \116o\032y\105el\100\032\097\099ross\032metame\116ho\100\047C%\045c\097l\108 bo\117ndar\121'))then else return coroutine.yield();end;if I(bi,"\094.-\058%\100+\058 ")then(E)("L\117\114ap\104\032S\099r\105\112\116\058"..(zm[li-0X001]or"(\105nt\101rn\097\108\041")..": "..h(bi),0X00);else E(bi,0);end;end;else if bi then if oi~=0X001 then return fi[ki](T(fi,ki+1,Wi));else return fi[ki]();end;elseif ki then do return T(fi,ki,oi);end;end;end;end;end;end;end;end;else do if not(am<0X27)then if not(am>=45)then if not(am<0x2A)then if not(am<0x2B)then do if am==44 then do hm=function(...)local OQ,AQ=1,({});local yQ=(u and u()or _ENV);local IQ,QQ=pO(...);local nQ={[0X002]=Jm,[1]=AQ};local kQ=0;local FQ=((yQ==J and Xm or yQ));do IQ=IQ-0X1;end;do for q1=0x0,IQ do if Om>q1 then(AQ)[q1]=QQ[q1+0x0001];else do break;end;end;end;end;if not rm then QQ=nil;elseif bm then AQ[Om]={n=IQ>=Om and IQ-Om+0X1 or 0X0,T(QQ,Om+0x00001,IQ+0x1)};end;if FQ~=yQ then if not(W)then _ENV=FQ;else W(hm,FQ);end;end;local aQ,BQ,hQ,XQ=p(function()while true do local NZ=Lm[OQ];local RZ=(NZ[0X5]);do OQ=OQ+0x1;end;if RZ<7 then if not(RZ<0X3)then if not(RZ>=0X5)then if RZ~=0X4 then OQ=NZ[7];else(AQ)[NZ[4]]=FQ[NZ[0X3]];end;else if RZ~=6 then(AQ)[NZ[4]]={T({},1,NZ[7])};else do if AQ[NZ[7]]~=AQ[NZ[6]]then else OQ=NZ[0X4];end;end;end;end;else if RZ>=0x1 then if RZ==2 then if not AQ[NZ[0x004]]then OQ=NZ[0X07];end;else(AQ)[NZ[4]]=NZ[3];end;else repeat local HK,IK,FK=Km,AQ,(NZ[0x4]);if#HK>0 then local QM={};for Pw,Nw in o,HK do do for cj,Sj in o,Nw do do if Sj[0X00001]==IK and Sj[0X2]>=FK then local J_=(Sj[2]);do if not(not QM[J_])then else QM[J_]={IK[J_]};end;end;do(Sj)[0X1]=QM[J_];end;(Sj)[0X0002]=0x1;end;end;end;end;end;end;until true;end;end;else if RZ<0X0000b then if RZ<0X009 then do if RZ==8 then local jr=pm[NZ[0X7]];local pr,Jr=jr[0X2],(nil);local nr=(#pr);if not(nr>0)then else Jr={};for mU=1,nr do local rU=pr[mU];do if rU[1]~=0x0 then Jr[mU-1]=jm[rU[2]];else Jr[mU-1]={AQ,rU[2]};end;end;end;(K)(Km,Jr);end;do AQ[NZ[4]]=gO(Jr,jr,FQ);end;else(AQ)[0X1]=FQ[NZ[0X3]];OQ=OQ+0X01;OQ=OQ+1;do OQ=OQ+0x1;end;kQ=1;AQ[kQ]=AQ[kQ]();do NZ=Lm[OQ];end;OQ=OQ+0x001;(AQ)[0X1]=AQ[1][NZ[0X2]];OQ=OQ+1;(AQ)[2]=AQ[0X000];do NZ=Lm[OQ];end;do OQ=OQ+1;end;(AQ[1])[NZ[3]]=AQ[0X2];NZ=Lm[OQ];OQ=OQ+0X1;AQ[0X1]=FQ[NZ[0X3]];do OQ=OQ+0x1;end;OQ=OQ+1;OQ=OQ+1;kQ=1;(AQ[kQ])();kQ=kQ-1;OQ=OQ+1;OQ=OQ+1;do OQ=OQ+0X1;end;repeat local gM,hM=Km,AQ;if#gM>0 then local Ss={};for H1,g1 in o,gM do do for ZY,VY in o,g1 do do if VY[0X1]==hM and VY[2]>=0 then local QT=(VY[2]);if not(not Ss[QT])then else Ss[QT]={hM[QT]};end;(VY)[1]=Ss[QT];VY[0X2]=0x1;end;end;end;end;end;end;until true;do return;end;end;end;else if RZ~=0Xa then else(AQ[NZ[0x4]])[AQ[NZ[0X7]]]=AQ[NZ[6]];end;end;else do if RZ<13 then if RZ~=12 then local vz,Cz=NZ[4],NZ[0X7];if Cz==0 then else kQ=vz+Cz-1;end;local Xz,gz,cz=nil,nil,(NZ[6]);if Cz~=1 then Xz,gz=pO(AQ[vz](T(AQ,vz+1,kQ)));else Xz,gz=pO(AQ[vz]());end;if cz~=1 then if cz==0 then Xz=Xz+vz-1;kQ=Xz;else Xz=vz+cz-0X2;do kQ=Xz+1;end;end;local yz=0;do for OO=vz,Xz do yz=yz+1;(AQ)[OO]=gz[yz];end;end;else kQ=vz-1;end;else for pv=NZ[4],NZ[0X0007]do AQ[pv]=nil;end;end;else if RZ~=14 then(AQ)[NZ[0X00004]]=AQ[NZ[0X7]]>=AQ[NZ[0X006]];else local tY=(AQ[NZ[7]]/AQ[NZ[6]]);AQ[NZ[4]]=tY-tY%1;end;end;end;end;end;end;end);if aQ then if BQ then if XQ~=0x00001 then return AQ[hQ](T(AQ,hQ+1,kQ));else return AQ[hQ]();end;elseif not(hQ)then else return T(AQ,hQ,XQ);end;else if s(BQ)~="string"then E(BQ,0X00000);else if I(BQ,"\097\116\116e\109p\116 \116\111\032y\105e\108\100 a\099\114oss \109\101t\097m\101\116\104o\100/\067\037-\099a\108\108 b\111\117\110\100\097\114\121")then return coroutine.yield();end;if I(BQ,"^.-\058%\100\043\058 ")then E('\076\117r\097ph\032S\099\114ipt:'..(zm[OQ-1]or"(internal)")..': '..h(BQ),0X0);else(E)(BQ,0);end;end;end;end;end;else hm=function(...)local VB,uB=1,({});local WB=(u and u()or _ENV);local yB=({[1]=uB,[0X002]=Jm});local rB,UB=pO(...);do rB=rB-1;end;local xB=(0);for i6=0,rB do do if not(Om>i6)then break;else(uB)[i6]=UB[i6+1];end;end;end;local mB=(WB==J and Xm or WB);if not rm then UB=nil;elseif bm then(uB)[Om]={n=rB>=Om and rB-Om+1 or 0,T(UB,Om+0x001,rB+1)};end;if mB~=WB then if W then(W)(hm,mB);else _ENV=mB;end;end;local oB,fB,dB,nB=p(function()do while true do local q_=(Lm[VB]);local G_=(q_[5]);VB=VB+1;if not(G_>=7)then if not(G_<3)then if G_>=5 then if G_==0X6 then(uB)[q_[0X04]]=mB[q_[3]];else(uB)[q_[0X00004]]={T({},0x01,q_[0X0007])};end;else if G_~=4 then if uB[q_[0X7]]<=uB[q_[6]]then VB=q_[0X4];end;else local mr,ar=q_[4],(q_[0X007]);xB=mr+ar-0X1;repeat local Kr,Qr=Km,uB;if#Kr>0 then local z6=({});for cA,TA in o,Kr do for l9,F9 in o,TA do if F9[1]==Qr and F9[0X02]>=0X0 then local ai=F9[0X0002];if not(not z6[ai])then else do z6[ai]={Qr[ai]};end;end;(F9)[0x1]=z6[ai];do(F9)[2]=0X00001;end;end;end;end;end;until true;do return true,mr,ar;end;end;end;else if not(G_>=1)then(uB)[q_[0x4]]=t(uB[q_[0X7]],uB[q_[6]]);else if G_~=2 then local HB=(q_[7]);local JB=uB[HB];do for zV=HB+1,q_[0X6]do JB=JB..uB[zV];end;end;uB[q_[4]]=JB;else do(uB)[q_[4]]=q_[0x3];end;end;end;end;else do if not(G_>=0X0000a)then do if not(G_<0x008)then if G_~=0x00009 then uB[q_[0X4]]=uB[q_[7]]<uB[q_[6]];else for Iv=q_[4],q_[0X7]do uB[Iv]=nil;end;end;else end;end;else if not(G_>=12)then if G_~=0xB then do uB[1]=mB[q_[0X3]];end;VB=VB+0X1;VB=VB+1;VB=VB+1;do xB=1;end;uB[xB]=uB[xB]();do VB=VB+0X1;end;VB=VB+1;q_=Lm[VB];VB=VB+1;uB[0X1]=uB[1][q_[2]];VB=VB+0x1;do VB=VB+0x1;end;VB=VB+0X1;uB[2]=uB[0X0];q_=Lm[VB];VB=VB+1;do uB[0x01][q_[3]]=uB[2];end;q_=Lm[VB];VB=VB+1;do(uB)[0X1]=mB[q_[0X3]];end;do VB=VB+1;end;xB=0X1;(uB[xB])();xB=xB-1;VB=VB+0X1;do VB=VB+0X1;end;VB=VB+1;do repeat local hW,MW=Km,(uB);if not(#hW>0x0)then else local On={};for UK,nK in o,hW do for fv,Dv in o,nK do if Dv[1]==MW and Dv[0X0002]>=0 then local KE=(Dv[2]);if not On[KE]then do(On)[KE]={MW[KE]};end;end;do Dv[0X00001]=On[KE];end;(Dv)[2]=0X1;end;end;end;end;until true;end;return;else local Bj=(pm[q_[7]]);local zj,wj=Bj[2],(nil);local xj=#zj;do if not(xj>0)then else wj={};for dQ=0X01,xj do local DQ=(zj[dQ]);if DQ[1]~=0X0000 then wj[dQ-0x1]=jm[DQ[0X2]];else(wj)[dQ-1]={uB,DQ[2]};end;end;K(Km,wj);end;end;uB[q_[0x4]]=gO(wj,Bj,mB);end;else if G_~=13 then VB=q_[0X7];else if not(uB[q_[0X0007]]<uB[q_[0X0006]])then VB=q_[4];end;end;end;end;end;end;end;end;end);do if not(oB)then if s(fB)=="string"then if I(fB,'a\116\116emp\116 t\111 \121ie\108\100 acro\115\115\032m\101ta\109e\116hod\047\067%-\099\097\108\108\032\098o\117\110d\097\114\121')then return coroutine.yield();end;do if I(fB,'^.\045:%d\043:\032')then E("Lur\097ph\032\083\099r\105\112\116:"..(zm[VB-1]or"\040i\110t\101r\110a\108\041")..": "..h(fB),0X0);else(E)(fB,0X0);end;end;else E(fB,0);end;else do if fB then if nB==1 then return uB[dB]();else return uB[dB](T(uB,dB+0x0001,xB));end;elseif not(dB)then else do return T(uB,dB,nB);end;end;end;end;end;end;end;end;else hm=function(...)local ET=({});local OT=(1);local XT=((u and u()or _ENV));local zT,oT={[1]=ET,[0X002]=Jm},0x00;local uT,mT=pO(...);local yT=(XT==J and Xm or XT);uT=uT-1;do for TI=0X00000,uT do if Om>TI then do ET[TI]=mT[TI+0X1];end;else break;end;end;end;if not rm then mT=nil;elseif bm then ET[Om]={n=uT>=Om and uT-Om+1 or 0,T(mT,Om+1,uT+1)};end;do if yT==XT then else if not(W)then _ENV=yT;else(W)(hm,yT);end;end;end;while true do local qZ=Lm[OT];OT=OT+1;local oZ=qZ[0X005];return(function(j,O,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["AutoLooting"]then if O[0][1][O[0][2]]()~=nil then for l,I in pairs(O[0][1][O[0][2]]().Drops:GetChildren())do if not table.find(O[1][1][O[1][2]],I.Name)then O[0][1][O[0][2]]().Add_To_Inventory:InvokeServer(I.Name);end;end;end;end;end);end;end);end)(ET,jm,...);end;end;end;elseif am>=40 then if am~=0X000029 then hm=function(...)local DD,sD=1,({});local wD=((u and u()or _ENV));local lD=(wD==J and Xm or wD);local JD,SD=pO(...);local KD=(0X0);local WD=({[1]=sD,[0X002]=Jm});JD=JD-1;do for Ny=0X0,JD do do if Om>Ny then(sD)[Ny]=SD[Ny+1];else break;end;end;end;end;if not rm then SD=nil;elseif bm then do sD[Om]={n=JD>=Om and JD-Om+1 or 0,T(SD,Om+0X0001,JD+0X00001)};end;end;if lD==wD then else if not(W)then _ENV=lD;else W(hm,lD);end;end;local bD,PD,aD,OD=p(function()while true do local BF=(Lm[DD]);local fF=BF[0X5];DD=DD+0x1;if not(fF<8)then if fF<12 then do if fF>=10 then if fF~=11 then(sD)[BF[0X4]]=sD[BF[0X7]];else sD[BF[4]]={T({},0X01,BF[7])};end;else if fF~=9 then(sD)[BF[4]]=sD[BF[7]]>sD[BF[0x6]];else local l0=pm[BF[0x7]];local e0=l0[2];local p0=#e0;local P0=nil;do if not(p0>0X00)then else do P0={};end;for vh=1,p0 do local eh=(e0[vh]);do if eh[0X1]==0X0000 then P0[vh-1]={sD,eh[0X002]};else(P0)[vh-1]=jm[eh[0X2]];end;end;end;K(Km,P0);end;end;do(sD)[BF[0X4]]=gO(P0,l0,lD);end;end;end;end;else if fF<14 then if fF==13 then DD=BF[7];else end;else if fF~=15 then do(sD)[BF[4]]=sD[BF[7]]/sD[BF[6]];end;else if not(sD[BF[7]]<sD[BF[6]])then DD=BF[0X4];end;end;end;end;else if not(fF>=0x004)then if not(fF<2)then do if fF~=0X3 then sD[BF[4]]=Q(sD[BF[0X007]],sD[BF[0X006]]);else sD[BF[4]]=sD[BF[7]]==sD[BF[0X6]];end;end;else if fF==1 then(sD)[BF[0X4]]=lD[BF[0X3]];else do(sD)[BF[4]]=C(sD[BF[0X0007]],sD[BF[6]]);end;end;end;else if not(fF>=6)then if fF==5 then(sD)[BF[0x4]]=BF[3];else sD[BF[4]]=sD[BF[0x07]]<sD[BF[0x006]];end;else if fF~=0X00007 then do sD[0X1]=lD[BF[0X3]];end;do DD=DD+0X1;end;DD=DD+0X01;do DD=DD+0X1;end;KD=1;(sD)[KD]=sD[KD]();BF=Lm[DD];DD=DD+1;(sD)[0X1]=sD[1][BF[2]];DD=DD+1;do sD[2]=sD[0X0];end;BF=Lm[DD];DD=DD+1;sD[0X1][BF[3]]=sD[0X02];BF=Lm[DD];do DD=DD+1;end;sD[0X1]=lD[BF[0X3]];do DD=DD+0X00001;end;KD=1;sD[KD]();KD=KD-0X00001;DD=DD+1;repeat local V7,x7=Km,sD;do if#V7>0X0 then local bq={};for zW,OW in o,V7 do for TT,HT in o,OW do if not(HT[1]==x7 and HT[0x0002]>=0)then else local fN=HT[0X2];if not(not bq[fN])then else bq[fN]={x7[fN]};end;do(HT)[0X1]=bq[fN];end;(HT)[2]=1;end;end;end;end;end;until true;do return;end;else sD[BF[0X4]]=WD[BF[7]];end;end;end;end;end;end);if bD then if PD then do if OD==0X001 then return sD[aD]();else return sD[aD](T(sD,aD+0x01,KD));end;end;elseif not(aD)then else return T(sD,aD,OD);end;else if s(PD)~='\115\116ri\110g'then(E)(PD,0);else do if not(I(PD,'\097t\116\101\109\112\116 \116o \121\105eld \097\099\114\111ss\032\109\101tam\101\116ho\100/\067%\045ca\108l\032b\111\117\110\100\097r\121'))then else return coroutine.yield();end;end;if I(PD,'\094\046\045:%d+: ')then E("Lu\114\097p\104\032\083cr\105\112\116\058"..(zm[DD-1]or'\040\105\110\116er\110\097\108)')..": "..h(PD),0X0);else(E)(PD,0X0);end;end;end;end;else hm=function(...)local ir,Nr=0X1,({});local zr=(0X0);local xr=({[0X002]=Jm,[1]=Nr});local pr=((u and u()or _ENV));local Rr,wr=pO(...);local hr=((pr==J and Xm or pr));do Rr=Rr-0X0001;end;for El=0x00000,Rr do do if Om>El then Nr[El]=wr[El+1];else break;end;end;end;if not rm then do wr=nil;end;elseif bm then Nr[Om]={n=Rr>=Om and Rr-Om+0x1 or 0,T(wr,Om+1,Rr+0X1)};end;if hr~=pr then if W then W(hm,hr);else _ENV=hr;end;end;local cr,Ur,Ar,jr=p(function()do while true do local cT=(Lm[ir]);local BT=(cT[5]);do ir=ir+0x0001;end;if not(BT>=0X007)then do if BT>=3 then if BT<5 then do if BT~=0x4 then do(Nr)[cT[0x00004]]=M(Nr[cT[7]],Nr[cT[0X6]]);end;else do if Nr[cT[7]]==Nr[cT[0x6]]then else ir=cT[0X0004];end;end;end;end;else if BT~=6 then local Up=pm[cT[7]];local bp,Yp=Up[2],(nil);local wp=(#bp);do if not(wp>0)then else Yp={};for UA=1,wp do local dA=(bp[UA]);do if dA[1]==0 then Yp[UA-1]={Nr,dA[0x2]};else(Yp)[UA-0X1]=jm[dA[0X2]];end;end;end;K(Km,Yp);end;end;do Nr[cT[4]]=gO(Yp,Up,hr);end;else do Nr[cT[0X4]]=#Nr[cT[0X00007]];end;end;end;else do if not(BT>=1)then Nr[cT[4]]=c(Nr[cT[7]],Nr[cT[6]]);else if BT==2 then ir=cT[0X7];else for ce=cT[0X4],cT[0X7]do do(Nr)[ce]=nil;end;end;end;end;end;end;end;else if not(BT<10)then if not(BT>=12)then if BT~=0XB then else(Nr)[cT[0X4]]=xr[cT[7]];end;else if BT==0XD then do(Nr)[0x01]=hr[cT[0X3]];end;ir=ir+0X00001;ir=ir+0X1;ir=ir+1;zr=1;do Nr[zr]=Nr[zr]();end;cT=Lm[ir];ir=ir+1;Nr[1]=Nr[0X1][cT[0x002]];ir=ir+1;do Nr[2]=Nr[0];end;cT=Lm[ir];ir=ir+0X0001;(Nr[1])[cT[3]]=Nr[2];cT=Lm[ir];ir=ir+0X1;do Nr[1]=hr[cT[3]];end;ir=ir+1;zr=1;(Nr[zr])();do zr=zr-0X1;end;ir=ir+1;ir=ir+1;ir=ir+1;do repeat local KW,vW=Km,Nr;if not(#KW>0)then else local QB=({});for mx,hx in o,KW do do for iH,kH in o,hx do if kH[0x01]==vW and kH[2]>=0X0 then local Nb=kH[0X2];if not QB[Nb]then do QB[Nb]={vW[Nb]};end;end;do(kH)[1]=QB[Nb];end;(kH)[2]=0x1;end;end;end;end;end;until true;end;do return;end;else Nr[cT[4]]={T({},1,cT[0x007])};end;end;else if not(BT>=8)then(Nr)[cT[0X00004]]=hr[cT[3]];else if BT~=9 then do(Nr)[cT[4]]=cT[0X003];end;else do Nr[cT[0x4]]=Nr[cT[0X7]]==Nr[cT[6]];end;end;end;end;end;end;end;end);if cr then if Ur then if jr~=0x1 then return Nr[Ar](T(Nr,Ar+1,zr));else return Nr[Ar]();end;elseif Ar then return T(Nr,Ar,jr);end;else if s(Ur)=="string"then do if not(I(Ur,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(I(Ur,"^.-:%d+: "))then(E)(Ur,0x0);else E("Luraph Script:"..(zm[ir-0X001]or'(inte\114n\097\108\041')..": "..h(Ur),0);end;else(E)(Ur,0);end;end;end;end;else hm=function(...)local bR,pR=0,{};local RR=((u and u()or _ENV));local IR=({[0X002]=Jm,[1]=pR});local WR,wR=pO(...);local lR,PR=(RR==J and Xm or RR),1;do WR=WR-1;end;for mZ=0X0,WR do if Om>mZ then(pR)[mZ]=wR[mZ+1];else break;end;end;if not rm then wR=nil;elseif bm then(pR)[Om]={n=WR>=Om and WR-Om+1 or 0x0000,T(wR,Om+1,WR+1)};end;if lR==RR then else if W then W(hm,lR);else do _ENV=lR;end;end;end;local iR,DR,mR,TR=p(function()while true do local SC=Lm[PR];local xC=(SC[0X0005]);PR=PR+0X1;do if xC>=5 then if not(xC<7)then if xC<8 then(pR)[1]=lR[SC[0X03]];PR=PR+0X1;bR=0X1;pR[bR]=pR[bR]();SC=Lm[PR];do PR=PR+0X1;end;pR[0X001]=pR[0X1][SC[2]];do PR=PR+1;end;(pR)[2]=pR[0X0];SC=Lm[PR];PR=PR+1;do pR[1][SC[3]]=pR[2];end;SC=Lm[PR];PR=PR+0x01;(pR)[1]=lR[SC[3]];do PR=PR+0X0001;end;bR=1;pR[bR]();bR=bR-0X1;PR=PR+0X1;repeat local IC,zC=Km,pR;if#IC>0 then local Xx=({});for JT,hT in o,IC do for uS,aS in o,hT do if aS[1]==zC and aS[2]>=0 then local sI=(aS[0x002]);if not(not Xx[sI])then else do Xx[sI]={zC[sI]};end;end;(aS)[0X1]=Xx[sI];aS[2]=1;end;end;end;end;until true;return;else if xC==9 then(pR)[SC[4]]={T({},0X1,SC[7])};else do(pR)[SC[0X04]]=lR[SC[3]];end;end;end;else if xC==0X6 then PR=SC[7];else if pR[SC[0X4]]then PR=SC[7];end;end;end;else if xC<0X2 then if xC~=0X0001 then pR[SC[4]]=pR[SC[0X7]]>pR[SC[6]];else end;else if xC<0X0003 then if pR[SC[0X0007]]~=pR[SC[0X06]]then PR=SC[4];end;else if xC~=4 then local Rm=pm[SC[7]];local sm,em=Rm[2],nil;local Mm=#sm;do if Mm>0X0 then em={};for cm=0x1,Mm do local Im=sm[cm];if Im[1]~=0X000 then(em)[cm-0x1]=jm[Im[2]];else do em[cm-0X001]={pR,Im[0X00002]};end;end;end;K(Km,em);end;end;pR[SC[4]]=gO(em,Rm,lR);else pR[SC[4]]=SC[0X3];end;end;end;end;end;end;end);if iR then if DR then if TR~=0X01 then return pR[mR](T(pR,mR+1,bR));else return pR[mR]();end;elseif not(mR)then else return T(pR,mR,TR);end;else if s(DR)~="string"then(E)(DR,0x000);else if not(I(DR,'\097t\116\101mp\116\032\116o\032\121ie\108\100\032\097c\114oss\032\109e\116ame\116ho\100/\067\037\045\099a\108l bou\110\100\097\114y'))then else return coroutine.yield();end;if I(DR,"^.-:%d+: ")then(E)("Luraph Script:"..(zm[PR-1]or"(internal)")..": "..h(DR),0);else E(DR,0x00);end;end;end;end;end;else if am<48 then do if not(am>=0X002E)then hm=function(...)local pw,Ew,aw=1,{},(0);local ww=({[0X002]=Jm,[1]=Ew});local yw=((u and u()or _ENV));local zw,Yw=pO(...);local cw=((yw==J and Xm or yw));zw=zw-0X1;do for Zj=0X0,zw do if Om>Zj then Ew[Zj]=Yw[Zj+0X1];else do break;end;end;end;end;do if not rm then do Yw=nil;end;elseif bm then do Ew[Om]={n=zw>=Om and zw-Om+0X1 or 0X0000,T(Yw,Om+1,zw+1)};end;end;end;if cw~=yw then if W then W(hm,cw);else do _ENV=cw;end;end;end;local uw,iw,Kw,Iw=p(function()while true do local Xa=Lm[pw];local oa=(Xa[0X5]);do pw=pw+0X1;end;if not(oa>=48)then if oa<24 then if not(oa<12)then if oa<0X12 then if oa>=15 then if oa<0X10 then do(Ew)[Xa[4]]=Ew[Xa[7]]^Ew[Xa[6]];end;else if oa~=0X11 then Ew[Xa[4]]=Ew[Xa[7]]+Ew[Xa[6]];else Ew[Xa[4]][Ew[Xa[7]]]=Ew[Xa[0X6]];end;end;else if not(oa>=0X000d)then if not(not(Ew[Xa[7]]<Ew[Xa[0X6]]))then else pw=Xa[0X4];end;else if oa==14 then EO[Xa[7]]=Ew[Xa[0X00004]];else(Ew)[Xa[0X4]]=t(Ew[Xa[0X07]],Ew[Xa[0X0006]]);end;end;end;else if oa<0x015 then if oa<0X13 then local kw=Xa[4];(Ew[kw])(Ew[kw+1],Ew[kw+2]);aw=kw-0X00001;else if oa~=0X0014 then do Ew[Xa[4]]=C(Ew[Xa[0X7]],Ew[Xa[6]]);end;else local Wy=Xa[0X00004];Ew[Wy](T(Ew,Wy+1,aw));aw=Wy-1;end;end;else do if not(oa>=0X00016)then if Xa[0X6]==71 then pw=pw-0X1;(Lm)[pw]={[0X0004]=(Xa[4]-0X000be),[0X005]=0x5d,[7]=(Xa[0x0007]-0XBE)};else(Ew)[Xa[4]]=not Ew[Xa[7]];end;else if oa~=0x17 then do if Ew[Xa[0X07]]~=Xa[2]then else do pw=Xa[4];end;end;end;else Ew[Xa[4]][Xa[0X3]]=Xa[2];end;end;end;end;end;else if not(oa<0X00006)then do if not(oa<0x9)then if not(oa<10)then if oa==11 then local q4=(Xa[7]);(Ew)[Xa[0X00004]]=Ew[q4]..Ew[q4+1];else local ce=Xa[0X4];local he,ge=Ew[ce]();if not(he)then else(Ew)[ce+0x1]=ge;pw=Xa[0x007];end;end;else local l5=Xa[0X4];local h5,i5=Ew[l5]();if not(h5)then else pw=Xa[0X07];(Ew)[l5+3]=i5;end;end;else if not(oa<7)then if oa~=0X00008 then local UD=(Xa[0X004]);local dD,kD=Ew[UD]();if dD then for A9=1,Xa[0X006]do do Ew[UD+A9]=kD[A9];end;end;pw=Xa[7];end;else local Z_=(Xa[0X004]);local X_,s_,B_=Ew[Z_]();if not(X_)then else Ew[Z_+1]=s_;Ew[Z_+0X2]=B_;do pw=Xa[7];end;end;end;else repeat local up,yp=Km,Ew;if not(#up>0)then else local lN=({});for PJ,nJ in o,up do do for uK,YK in o,nJ do if YK[0X1]==yp and YK[2]>=0x00000 then local Pq=(YK[2]);do if not lN[Pq]then lN[Pq]={yp[Pq]};end;end;do YK[0X1]=lN[Pq];end;(YK)[0X2]=1;end;end;end;end;end;until true;return true,Xa[0X00004],0X000;end;end;end;else if not(oa<0X0003)then if not(oa>=0X00004)then Ew[Xa[4]]=Ew[Xa[7]]%Xa[0X002];else do if oa==5 then(Ew)[Xa[4]]=false;else(Ew)[Xa[4]]=-Ew[Xa[7]];end;end;end;else if oa<0X1 then pw=Xa[7];else if oa==2 then(Ew)[Xa[4]]=M(Ew[Xa[7]],Ew[Xa[6]]);else if Xa[0X6]==0X00c4 then do pw=pw-1;end;Lm[pw]={[0X7]=(Xa[7]-0X17),[4]=(Xa[4]-0x0017),[0x5]=0X0058};else repeat local QJ,MJ,gJ=Km,Ew,Xa[4];if not(#QJ>0)then else local Bg={};for de,ye in o,QJ do do for ET,iT in o,ye do if not(iT[1]==MJ and iT[2]>=gJ)then else local Mi=(iT[2]);if not(not Bg[Mi])then else(Bg)[Mi]={MJ[Mi]};end;do iT[0X001]=Bg[Mi];end;do(iT)[2]=0x0001;end;end;end;end;end;end;until true;end;end;end;end;end;end;else do if oa<36 then if oa>=30 then if not(oa>=0X021)then if oa<31 then if not(Ew[Xa[7]]<=Ew[Xa[0X00006]])then else do pw=Xa[4];end;end;else if oa==0x0020 then(Ew)[Xa[0X4]]=Ew[Xa[7]]/Xa[0X2];else do Ew[Xa[4]]=Xa[3];end;end;end;else if not(oa<34)then if oa~=0X23 then(Ew)[Xa[4]]=nil;else local hy=jm[Xa[0X7]];Ew[Xa[4]]=hy[0X00001][hy[2]];end;else do(ww)[Xa[0X7]]=Ew[Xa[4]];end;end;end;else if oa<27 then if not(oa<25)then if oa~=26 then do if Xa[0X6]==0X0000Df then pw=pw-1;Lm[pw]={[0X07]=(Xa[0X007]-133),[5]=34,[0X0004]=(Xa[0x4]-133)};else local Yi=Xa[0x04];do for YI=Yi,Yi+(Xa[0X007]-1)do do Ew[YI]=Yw[Om+(YI-Yi)+0x1];end;end;end;end;end;else local tx=(Xa[0x00004]);local ax=(L(function(...)P();for K9,y9 in...do(P)(true,K9,y9);end;end));(ax)(Ew[tx],Ew[tx+1],Ew[tx+0X2]);aw=tx;(Ew)[tx]=ax;pw=Xa[7];end;else Ew[Xa[4]]=Q(Ew[Xa[0X007]],Ew[Xa[6]]);end;else if oa>=0X01C then if oa~=29 then local jf,Wf=Xa[0x4],(Xa[0X7]);do if Wf==0 then else aw=jf+Wf-1;end;end;local cf,Jf,Mf=Xa[0X00006],nil,(nil);do if Wf~=0X1 then Jf,Mf=pO(Ew[jf](T(Ew,jf+1,aw)));else do Jf,Mf=pO(Ew[jf]());end;end;end;if cf==0X01 then aw=jf-1;else do if cf~=0X0 then Jf=jf+cf-0X00002;aw=Jf+1;else do Jf=Jf+jf-1;end;aw=Jf;end;end;local xY=0X0000;for Do=jf,Jf do xY=xY+1;do(Ew)[Do]=Mf[xY];end;end;end;else do(Ew)[Xa[0X4]]=Ew[Xa[0X007]]>=Ew[Xa[6]];end;end;else local ss=Xa[4];aw=ss+Xa[7]-0X001;(Ew[ss])(T(Ew,ss+0X0001,aw));aw=ss-0X1;end;end;end;else if oa<0X0002A then if oa<0X27 then if oa<37 then do if Ew[Xa[7]]~=Xa[2]then pw=Xa[0x4];end;end;else if oa~=0x0026 then if not(Ew[Xa[7]]<Xa[2])then do pw=Xa[4];end;end;else Ew[Xa[4]]=Ew[Xa[0X7]]%Ew[Xa[6]];end;end;else if not(oa<0x28)then if oa==0X000029 then if Xa[6]==193 then pw=pw-1;Lm[pw]={[5]=78,[0X0004]=(Xa[0X4]-0X0010),[0X00007]=(Xa[7]-0X10)};elseif Xa[0x00006]==0X20 then pw=pw-0X1;(Lm)[pw]={[7]=(Xa[7]-0X2C),[5]=78,[0x4]=(Xa[4]-0x2C)};else repeat local e3,N3=Km,(Ew);if#e3>0X00000 then local fQ=({});for n2,s2 in o,e3 do for dv,Cv in o,s2 do if not(Cv[0X1]==N3 and Cv[2]>=0)then else local pS=Cv[2];do if not(not fQ[pS])then else(fQ)[pS]={N3[pS]};end;end;Cv[0X1]=fQ[pS];Cv[2]=0x01;end;end;end;end;until true;local Rr=(Xa[4]);return false,Rr,Rr+Xa[0X7]-0X2;end;else local kM=(Xa[4]);Ew[kM]=Ew[kM](T(Ew,kM+1,aw));aw=kM;end;else do Ew[Xa[0X4]]=Ew[Xa[7]]/Ew[Xa[6]];end;end;end;else if not(oa>=45)then do if not(oa<43)then do if oa~=44 then Ew[Xa[0X4]]=Ew[Xa[7]]==Ew[Xa[0X6]];else do if not(Ew[Xa[0x4]])then else pw=Xa[0x07];end;end;end;end;else do(Ew)[Xa[0X004]]={T({},0X1,Xa[7])};end;end;end;else do if not(oa<46)then do if oa~=0X2F then local mp=(Xa[0X4]);local rp,Np=Ew[mp],(Xa[0x6]-1)*0x32;for HL=0x1,aw-mp do rp[Np+HL]=Ew[mp+HL];end;else Ew[Xa[0X004]]=Ew[Xa[7]][Ew[Xa[0X00006]]];end;end;else(Ew)[Xa[0X4]]=X(Ew[Xa[7]]);end;end;end;end;end;end;end;else do if not(oa<0X048)then if not(oa<84)then if oa<90 then do if not(oa<87)then if not(oa<0X058)then if oa~=0X059 then if Xa[6]~=0x72 then repeat local tm,Ym=Km,(Ew);if#tm>0 then local n_=({});do for KI,uI in o,tm do for oo,Co in o,uI do if not(Co[1]==Ym and Co[2]>=0x00000)then else local kX=Co[0X2];if not(not n_[kX])then else do n_[kX]={Ym[kX]};end;end;Co[0X001]=n_[kX];do Co[2]=0X00001;end;end;end;end;end;end;until true;return false,Xa[4],aw;else do pw=pw-1;end;Lm[pw]={[0X00004]=(Xa[4]-0Xe4),[0X0007]=(Xa[0X00007]-0xE4),[0x0005]=0X3C};end;else local mH=Xa[4];local iH,QH=Ew[mH+1],(Ew[mH+2]);local NH=Ew[mH];(Ew)[mH]=L(function()for HP=NH,iH,QH do(P)(true,HP);end;end);pw=Xa[0X7];end;else aw=Xa[4];(Ew[aw])();aw=aw-0X1;end;else if oa>=85 then if oa~=86 then(Ew)[Xa[4]]=Ew[Xa[0x7]]-Ew[Xa[0X6]];else Ew[Xa[4]]=Ew[Xa[7]][Xa[2]];end;else local p9=Xa[7];local l9=Ew[p9];for a2=p9+1,Xa[0X00006]do l9=l9..Ew[a2];end;Ew[Xa[0x4]]=l9;end;end;end;else do if oa>=93 then if not(oa>=0X005f)then if oa~=0X005e then if Xa[0X006]==195 then pw=pw-1;do Lm[pw]={[5]=74,[0x7]=(Xa[0x7]-145),[4]=(Xa[0X4]-0x91)};end;else repeat local C6,R6=Km,(Ew);if not(#C6>0)then else local xF=({});do for Ya,ca in o,C6 do for f4,L4 in o,ca do if L4[0X1]==R6 and L4[0x00002]>=0X0 then local mR=(L4[2]);if not xF[mR]then xF[mR]={R6[mR]};end;L4[1]=xF[mR];do L4[0X02]=1;end;end;end;end;end;end;until true;return;end;else Ew[Xa[4]][Xa[3]]=Ew[Xa[6]];end;else if oa==0X60 then(Ew)[Xa[4]]={};else local lb,nb=Xa[0x04],Xa[0x00007];aw=lb+nb-0X1;repeat local wj,Tj=Km,(Ew);if#wj>0X0 then local oZ={};for FP,DP in o,wj do for FO,OO in o,DP do if OO[0X1]==Tj and OO[2]>=0X0 then local NY=(OO[0X2]);if not(not oZ[NY])then else do oZ[NY]={Tj[NY]};end;end;OO[1]=oZ[NY];OO[0X002]=1;end;end;end;end;until true;return true,lb,nb;end;end;else if not(oa<91)then do if oa==92 then Ew[Xa[0X4]][Ew[Xa[7]]]=Xa[0x2];else if not(Ew[Xa[7]]<=Ew[Xa[6]])then pw=Xa[0x004];end;end;end;else local R4=Xa[0X4];Ew[R4]=Ew[R4](Ew[R4+1]);aw=R4;end;end;end;end;else if oa<78 then if oa>=0x0004b then if not(oa<0x4c)then if oa==0X004d then Ew[Xa[0x4]]=Ew[Xa[0X7]]~=Xa[2];else if Xa[0X06]==0X69 then pw=pw-0X1;Lm[pw]={[0X00005]=93,[7]=(Xa[7]-129),[0X0004]=(Xa[0x0004]-0X00081)};elseif Xa[0X6]~=168 then do if not Ew[Xa[4]]then pw=Xa[7];end;end;else pw=pw-1;(Lm)[pw]={[0X5]=0X03C,[4]=(Xa[4]-0Xbd),[7]=(Xa[0X7]-0XbD)};end;end;else local Se=(Xa[0X04]);local Xe=Ew[Xa[7]];Ew[Se+1]=Xe;do(Ew)[Se]=Xe[Xa[0X0002]];end;end;else if oa>=0X00049 then do if oa==74 then local S3,x3=zw-Om,Xa[0X4];if S3<0X0 then S3=-1;end;for zA=x3,x3+S3 do do(Ew)[zA]=Yw[Om+(zA-x3)+1];end;end;do aw=x3+S3;end;else if not(Ew[Xa[7]]<=Xa[2])then do pw=Xa[0X4];end;end;end;end;else do Ew[Xa[0X4]]=Ew[Xa[0X7]]>Ew[Xa[6]];end;end;end;else if not(oa<81)then if oa>=0X52 then if oa~=83 then Ew[Xa[4]]=Ew[Xa[7]]+Xa[2];else if Ew[Xa[7]]==Ew[Xa[0X00006]]then else pw=Xa[0X4];end;end;else local WX=(Xa[4]);local JX=(L(function(...)(P)();for m1 in...do(P)(true,m1);end;end));JX(Ew[WX],Ew[WX+1],Ew[WX+0x002]);aw=WX;(Ew)[WX]=JX;do pw=Xa[7];end;end;else do if not(oa<79)then if oa==0x50 then if Ew[Xa[7]]~=Ew[Xa[6]]then else pw=Xa[4];end;else Ew[Xa[4]]=cw[Xa[3]];end;else if Xa[6]==0XDb then pw=pw-1;Lm[pw]={[5]=0X3c,[0X7]=(Xa[7]-226),[4]=(Xa[0X4]-0XE2)};elseif Xa[6]~=188 then Ew[Xa[4]]=Ew[Xa[7]];else pw=pw-0X001;(Lm)[pw]={[0X07]=(Xa[7]-197),[0X004]=(Xa[0x4]-0X0c5),[5]=55};end;end;end;end;end;end;else if oa<0X3c then do if oa>=54 then if oa<0X039 then if not(oa<0X37)then do if oa==0X038 then repeat local C2,i2=Km,Ew;if#C2>0X00000 then local Uh={};do for tk,dk in o,C2 do for CN,AN in o,dk do do if AN[0x1]==i2 and AN[0X2]>=0X00 then local SS=AN[2];if not(not Uh[SS])then else Uh[SS]={i2[SS]};end;AN[0x1]=Uh[SS];AN[2]=0X1;end;end;end;end;end;end;until true;return true,Xa[4],0X001;else if Xa[6]==0x000a6 then pw=pw-0X00001;Lm[pw]={[0X4]=(Xa[0X4]-120),[0X00007]=(Xa[7]-0x078),[0X0005]=78};elseif Xa[0X6]~=0X000eE then Ew[Xa[4]]=#Ew[Xa[0X7]];else pw=pw-0X00001;(Lm)[pw]={[7]=(Xa[7]-0Xe4),[0x5]=0X5d,[0X4]=(Xa[0X4]-0Xe4)};end;end;end;else(Ew)[Xa[0X04]]=Ew[Xa[7]]<Ew[Xa[0x6]];end;else do if not(oa<0X03A)then do if oa~=59 then if not(Ew[Xa[7]]<Ew[Xa[0X6]])then else do pw=Xa[0X0004];end;end;else local nn=(Ew[Xa[7]]/Ew[Xa[6]]);do Ew[Xa[0X4]]=nn-nn%0X1;end;end;end;else for AK=Xa[0x04],Xa[7]do(Ew)[AK]=nil;end;end;end;end;else do if oa<51 then if not(oa>=0X31)then cw[Xa[0X0003]]=Ew[Xa[4]];else do if oa==0X32 then local xm=(Xa[0X00004]);do(Ew)[xm]=Ew[xm](Ew[xm+0X00001],Ew[xm+0X0002]);end;aw=xm;else Ew[Xa[0X004]]=Xa[3];end;end;end;else if not(oa>=52)then local cU=Xa[4];local pU=((Xa[0X6]-0X1)*0X32);local uU=(Ew[cU]);do for i1=1,Xa[7]do do(uU)[pU+i1]=Ew[cU+i1];end;end;end;else do if oa==0X35 then Ew[Xa[0X0004]]=ww[Xa[0X7]];else local NT=Xa[0x4];local ET=(L(function(...)P();for cK,QK,lK,TK,AK,PK,vK,RK,IK,VK in...do P(true,{cK,QK,lK,TK,AK,PK,vK,RK,IK,VK});end;end));(ET)(Ew[NT],Ew[NT+1],Ew[NT+0X002]);do aw=NT;end;Ew[NT]=ET;pw=Xa[7];end;end;end;end;end;end;end;else do if not(oa<0X000042)then if not(oa>=69)then if oa<67 then do(Ew)[Xa[4]]=true;end;else if oa==0X44 then(Ew)[Xa[0X4]]=c(Ew[Xa[0X007]],Ew[Xa[0X006]]);else local fw=Xa[0X04];aw=fw+Xa[0X7]-1;Ew[fw]=Ew[fw](T(Ew,fw+0X00001,aw));aw=fw;end;end;else if oa>=70 then if oa~=0X0047 then local OE=(Xa[4]);Ew[OE](Ew[OE+1]);aw=OE-0x00001;else local DU=jm[Xa[7]];DU[0x01][DU[0x2]]=Ew[Xa[0X4]];end;else(Ew)[Xa[4]]=EO[Xa[0X00007]];end;end;else if not(oa<0x3F)then do if not(oa>=0x40)then Ew[Xa[0X4]]=Ew[Xa[0X00007]]<=Ew[Xa[6]];else if oa==65 then local e0=pm[Xa[7]];local c0=(nil);local G0=e0[2];local K0=(#G0);do if K0>0 then c0={};for wF=1,K0 do local JF=G0[wF];if JF[1]~=0X0 then c0[wF-0x1]=jm[JF[0x02]];else c0[wF-0X1]={Ew,JF[2]};end;end;K(Km,c0);end;end;do Ew[Xa[0x04]]=gO(c0,e0,cw);end;else aw=Xa[4];(Ew)[aw]=Ew[aw]();end;end;end;else if oa<61 then if Xa[0X6]==0xcc then pw=pw-0X00001;do Lm[pw]={[5]=0X029,[7]=(Xa[7]-108),[0x004]=(Xa[0X0004]-0X00006C)};end;else repeat local Cf,af=Km,(Ew);if#Cf>0X0 then local Da={};for GF,uF in o,Cf do for N6,t6 in o,uF do if not(t6[0X1]==af and t6[2]>=0X000)then else local fY=(t6[2]);do if not(not Da[fY])then else(Da)[fY]={af[fY]};end;end;t6[1]=Da[fY];(t6)[0X2]=1;end;end;end;end;until true;local AZ=(Xa[4]);do return false,AZ,AZ;end;end;else if oa~=62 then Ew[Xa[4]]=Ew[Xa[7]]*Ew[Xa[6]];else Ew[Xa[4]]=Ew[Xa[7]]~=Ew[Xa[6]];end;end;end;end;end;end;end;end;end;end;end);if uw then if iw then if Iw==1 then return Ew[Kw]();else do return Ew[Kw](T(Ew,Kw+1,aw));end;end;elseif Kw then return T(Ew,Kw,Iw);end;else if s(iw)~="string"then(E)(iw,0X0);else do if I(iw,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if I(iw,"\094.-\058%d\043: ")then E("Luraph Script:"..(zm[pw-1]or'\040\105\110\116\101r\110al\041')..": "..h(iw),0);else(E)(iw,0);end;end;end;end;end;else if am==47 then hm=function(...)local AK,GK=0X1,{};local oK={[0X002]=Jm,[1]=GK};local FK=((u and u()or _ENV));local IK,mK=pO(...);local iK=((FK==J and Xm or FK));IK=IK-0X1;for Vt=0,IK do do if Om>Vt then GK[Vt]=mK[Vt+1];else do break;end;end;end;end;do if not rm then do mK=nil;end;elseif not(bm)then else do(GK)[Om]={n=IK>=Om and IK-Om+0X0001 or 0,T(mK,Om+0X1,IK+1)};end;end;end;local KK=0X0000;if iK==FK then else do if not(W)then _ENV=iK;else W(hm,iK);end;end;end;while true do local yI=Lm[AK];local LI=yI[5];AK=AK+0X0001;return(function(K,c,...)spawn(function()while task.wait(.5)do pcall(function()if getgenv().Main["Inf_Stam"]then pcall(function()getrenv()._G:AddStamina(9e9);end);end;end);end;end);end)(GK,jm,...);end;end;else do hm=function(...)local JC=1;local zC,SC={},(0);local CC=({[1]=zC,[0X002]=Jm});local MC=((u and u()or _ENV));local wC,VC=pO(...);do wC=wC-0X01;end;for bK=0,wC do if not(Om>bK)then break;else zC[bK]=VC[bK+0x1];end;end;local LC=(MC==J and Xm or MC);if not rm then VC=nil;elseif not(bm)then else zC[Om]={n=wC>=Om and wC-Om+1 or 0,T(VC,Om+0X0001,wC+1)};end;if LC~=MC then if W then(W)(hm,LC);else do _ENV=LC;end;end;end;while true do local gZ=(Lm[JC]);JC=JC+1;local jZ=gZ[0X5];return(function(Z,A,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["AutoEquipWeapon"]then A[0][1][A[0][2]](getgenv().Main["Combat_Mode"]);end;end);end;end);end)(zC,jm,...);end;end;end;end;end;end;else do if am>=50 then if am==51 then hm=function(...)local K9,q9=1,{};local k9=({[0X002]=Jm,[1]=q9});local a9=((u and u()or _ENV));local m9=(a9==J and Xm or a9);local Y9,W9=pO(...);Y9=Y9-0X001;for Et=0,Y9 do if not(Om>Et)then break;else q9[Et]=W9[Et+0X0001];end;end;local H9=(0);if not rm then W9=nil;else if bm then do q9[Om]={n=Y9>=Om and Y9-Om+1 or 0X0,T(W9,Om+1,Y9+0X1)};end;end;end;if m9==a9 then elseif W then(W)(hm,m9);else _ENV=m9;end;local Z9,u9,i9,y9=p(function()repeat local aa=Lm[K9];local Wa=(aa[5]);K9=K9+1;do if not(Wa<0X8)then if Wa>=12 then if not(Wa>=0XE)then if Wa~=13 then q9[1]=m9[aa[3]];K9=K9+1;do K9=K9+0X001;end;do K9=K9+0x1;end;do H9=0X1;end;do q9[H9]=q9[H9]();end;K9=K9+0X0001;do K9=K9+1;end;do aa=Lm[K9];end;K9=K9+1;(q9)[1]=q9[0X1][aa[2]];K9=K9+1;do K9=K9+0x0001;end;K9=K9+0x00001;q9[0X00002]=q9[0];aa=Lm[K9];K9=K9+0x00001;do q9[1][aa[3]]=q9[2];end;aa=Lm[K9];do K9=K9+1;end;(q9)[1]=m9[aa[3]];do K9=K9+0X1;end;H9=0X1;(q9[H9])();H9=H9-1;K9=K9+1;K9=K9+1;K9=K9+0x1;repeat local X8,I8=Km,q9;if#X8>0X0 then local Ca=({});for j3,K3 in o,X8 do for vL,iL in o,K3 do if not(iL[0X1]==I8 and iL[2]>=0)then else local EM=iL[0x002];if not Ca[EM]then do(Ca)[EM]={I8[EM]};end;end;do(iL)[1]=Ca[EM];end;iL[2]=0x0001;end;end;end;end;until true;do return;end;else do q9[aa[0X4]]=t(q9[aa[7]],q9[aa[6]]);end;end;else if Wa~=15 then local Y1=(aa[0X004]);local N1=aa[0x07];do H9=Y1+N1-1;end;repeat local ul,yl=Km,q9;if not(#ul>0X0)then else local o9=({});for Ou,Ju in o,ul do for Cn,rn in o,Ju do if rn[1]==yl and rn[2]>=0 then local hr=(rn[2]);do if not(not o9[hr])then else(o9)[hr]={yl[hr]};end;end;(rn)[0X1]=o9[hr];rn[2]=0x1;end;end;end;end;until true;do return true,Y1,N1;end;else repeat local q3,p3,D3=Km,q9,(aa[0X4]);if not(#q3>0)then else local PR={};for qs,Es in o,q3 do for mj,jj in o,Es do do if jj[0X1]==p3 and jj[2]>=D3 then local kE=(jj[2]);do if not PR[kE]then do PR[kE]={p3[kE]};end;end;end;(jj)[1]=PR[kE];jj[0x2]=0X001;end;end;end;end;end;until true;end;end;else do if Wa>=10 then if Wa~=11 then local mf,rf=aa[4],(aa[6]-0x001)*0X0032;local Nf=(q9[mf]);for XD=0x1,aa[0X007]do Nf[rf+XD]=q9[mf+XD];end;else end;else if Wa~=0X9 then do K9=aa[7];end;else do(q9)[aa[4]]=m9[aa[0X00003]];end;end;end;end;end;else do if not(Wa<0X04)then if Wa<0x6 then if Wa==5 then local R2=aa[0X0004];local l2,W2=q9[R2]();do if l2 then do K9=aa[0X7];end;q9[R2+3]=W2;end;end;else for Ry=aa[4],aa[0x007]do q9[Ry]=nil;end;end;else do if Wa~=7 then(q9)[aa[0X4]]={T({},0X01,aa[0X7])};else local ik=aa[0X0004];do for tp=ik,ik+(aa[0X07]-0X1)do q9[tp]=W9[Om+(tp-ik)+1];end;end;end;end;end;else if Wa<0X2 then if Wa~=1 then local M3=(aa[0X06]);local Z3=(aa[0X7]);local P3=aa[4];if Z3~=0 then do H9=P3+Z3-0x01;end;end;local Q3,e3=nil,nil;if Z3~=0X1 then Q3,e3=pO(q9[P3](T(q9,P3+1,H9)));else Q3,e3=pO(q9[P3]());end;if M3~=0x1 then if M3~=0 then Q3=P3+M3-2;H9=Q3+1;else do Q3=Q3+P3-0X01;end;do H9=Q3;end;end;local rV=(0X0);do for Ho=P3,Q3 do rV=rV+0X01;q9[Ho]=e3[rV];end;end;else H9=P3-0X1;end;else local fa=pm[aa[0x0007]];local wa=(fa[0x2]);local Ia=(nil);local ka=#wa;if not(ka>0)then else Ia={};do for Pj=1,ka do local ij=(wa[Pj]);do if ij[0X1]==0 then Ia[Pj-0X1]={q9,ij[0X0002]};else do Ia[Pj-1]=jm[ij[2]];end;end;end;end;end;(K)(Km,Ia);end;do(q9)[aa[0x4]]=gO(Ia,fa,m9);end;end;elseif Wa~=0X3 then do(q9)[aa[0X4]]=aa[3];end;else do q9[aa[4]]=-q9[aa[7]];end;end;end;end;end;end;until false;end);do if Z9 then do if u9 then if y9==0X001 then return q9[i9]();else return q9[i9](T(q9,i9+1,H9));end;else if i9 then do return T(q9,i9,y9);end;end;end;end;else if s(u9)=="\115\116ri\110g"then if not(I(u9,'\097tt\101\109\112\116\032\116o\032\121i\101l\100\032a\099ro\115s\032met\097met\104\111d/C\037-c\097\108l\032b\111u\110da\114\121'))then else return coroutine.yield();end;if I(u9,"^.-:%d+: ")then E("Luraph Script:"..(zm[K9-0x1]or'\040\105\110tern\097\108\041')..": "..h(u9),0X0);else E(u9,0x000);end;else(E)(u9,0);end;end;end;end;else hm=function(...)local Jv,Kv={},(0);local kv=1;local mv=({[0X002]=Jm,[1]=Jv});local Qv=((u and u()or _ENV));local Fv,uv=pO(...);local Pv=(Qv==J and Xm or Qv);Fv=Fv-1;for Pw=0,Fv do if Om>Pw then(Jv)[Pw]=uv[Pw+0X00001];else do break;end;end;end;if not rm then do uv=nil;end;else if not(bm)then else(Jv)[Om]={n=Fv>=Om and Fv-Om+0x1 or 0,T(uv,Om+0X1,Fv+0X0001)};end;end;if Pv==Qv then else if not(W)then do _ENV=Pv;end;else(W)(hm,Pv);end;end;local dv,qv,rv,Vv=p(function()do repeat local Mb=(Lm[kv]);local Bb=Mb[5];kv=kv+0x1;if Bb>=0X7 then if not(Bb>=10)then if Bb<0X8 then do Jv[0X0001]=Pv[Mb[0X3]];end;do kv=kv+0x00001;end;kv=kv+1;do kv=kv+0x1;end;do Kv=0X1;end;do(Jv)[Kv]=Jv[Kv]();end;kv=kv+1;do kv=kv+1;end;do Mb=Lm[kv];end;do kv=kv+1;end;(Jv)[1]=Jv[1][Mb[0X002]];kv=kv+1;Jv[0X002]=Jv[0X0];Mb=Lm[kv];do kv=kv+0X1;end;(Jv[0X00001])[Mb[3]]=Jv[2];Mb=Lm[kv];do kv=kv+0X1;end;Jv[1]=Pv[Mb[3]];kv=kv+1;kv=kv+1;kv=kv+0X1;Kv=0X0001;Jv[Kv]();Kv=Kv-0X1;kv=kv+1;do kv=kv+0X1;end;kv=kv+0X1;do repeat local Ze,Ae=Km,Jv;if not(#Ze>0x000)then else local LP=({});for AN,LN in o,Ze do for b_,l_ in o,LN do do if not(l_[1]==Ae and l_[0X2]>=0X0)then else local OL=(l_[2]);if not LP[OL]then LP[OL]={Ae[OL]};end;l_[1]=LP[OL];l_[0x002]=0X1;end;end;end;end;end;until"|5?O";end;return;else if Bb==0X9 then else(mv)[Mb[0X7]]=Jv[Mb[4]];end;end;else do if Bb<0xc then do if Bb==0X000b then Jv[Mb[0x4]]=Jv[Mb[0X7]]*Jv[Mb[6]];else do(Jv)[Mb[4]]=Jv[Mb[7]]==Jv[Mb[6]];end;end;end;elseif Bb==13 then(Jv)[Mb[0X4]]=Pv[Mb[3]];else do if not(not(Jv[Mb[7]]<=Jv[Mb[0X6]]))then else kv=Mb[4];end;end;end;end;end;else if Bb>=3 then do if not(Bb>=0X5)then if Bb~=4 then Jv[Mb[0X00004]]={T({},1,Mb[7])};else local C9=pm[Mb[7]];local T9=(C9[2]);local m9,W9=#T9,(nil);if not(m9>0X0)then else W9={};do for Qz=1,m9 do local az=T9[Qz];if az[1]==0X000 then W9[Qz-1]={Jv,az[2]};else(W9)[Qz-1]=jm[az[2]];end;end;end;K(Km,W9);end;(Jv)[Mb[4]]=gO(W9,C9,Pv);end;else do if Bb~=6 then do(Jv)[Mb[4]]=Jv[Mb[0x7]][Jv[Mb[6]]];end;else local e0=(Mb[7]);local f0=Mb[0X4];if e0==0 then else Kv=f0+e0-1;end;local Z0,L0=nil,(nil);local J0=Mb[6];if e0==1 then Z0,L0=pO(Jv[f0]());else do Z0,L0=pO(Jv[f0](T(Jv,f0+0X00001,Kv)));end;end;if J0~=0X1 then do if J0==0X0 then Z0=Z0+f0-1;Kv=Z0;else Z0=f0+J0-0X00002;Kv=Z0+0x1;end;end;local U_=(0);for bb=f0,Z0 do U_=U_+0X001;(Jv)[bb]=L0[U_];end;else Kv=f0-1;end;end;end;end;end;else if Bb<0x1 then(Jv)[Mb[4]]=Mb[0x0003];else if Bb~=0X2 then for FO=Mb[4],Mb[7]do(Jv)[FO]=nil;end;else do kv=Mb[7];end;end;end;end;end;until false;end;end);do if not(dv)then do if s(qv)~='\115\116\114\105\110\103'then(E)(qv,0);else do if not(I(qv,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;do if I(qv,"^.-:%d+: ")then(E)('\076\117r\097\112h\032S\099r\105\112t:'..(zm[kv-1]or'(\105\110\116\101\114nal)')..": "..h(qv),0X00);else(E)(qv,0);end;end;end;end;else do if qv then do if Vv~=0X1 then do return Jv[rv](T(Jv,rv+1,Kv));end;else do return Jv[rv]();end;end;end;else if rv then return T(Jv,rv,Vv);end;end;end;end;end;end;end;else if am==0X31 then do hm=function(...)local Wz=(0X00001);local Iz,pz={},(0);local Sz={[0X002]=Jm,[1]=Iz};local Tz=((u and u()or _ENV));local Hz,az=pO(...);Hz=Hz-0X00001;local rz=((Tz==J and Xm or Tz));do for Xd=0,Hz do do if not(Om>Xd)then break;else do Iz[Xd]=az[Xd+0X1];end;end;end;end;end;do if not rm then do az=nil;end;else if bm then(Iz)[Om]={n=Hz>=Om and Hz-Om+1 or 0X0,T(az,Om+1,Hz+0X0001)};end;end;end;if rz~=Tz then if not(W)then _ENV=rz;else W(hm,rz);end;end;local Vz,Lz,Gz,xz=p(function()do while'{]\059\109\067\072\1240\057'do local BS=(Lm[Wz]);local cS=(BS[0X5]);Wz=Wz+0x1;do if not(cS<8)then if cS<12 then if not(cS>=10)then if cS==0X009 then(Iz)[BS[4]]=Iz[BS[7]]^Iz[BS[0X6]];else do(Iz)[BS[4]]={T({},0X1,BS[7])};end;end;else if cS==0Xb then for kp=BS[0X4],BS[7]do Iz[kp]=nil;end;else end;end;else if cS<14 then if cS==0X000D then Iz[BS[0X04]]=Iz[BS[7]]-Iz[BS[6]];else do(Iz)[0x01]=rz[BS[3]];end;Wz=Wz+0X01;pz=1;(Iz)[pz]=Iz[pz]();BS=Lm[Wz];Wz=Wz+0X1;(Iz)[0X00001]=Iz[1][BS[0x0002]];Wz=Wz+0X1;Iz[2]=Iz[0];BS=Lm[Wz];Wz=Wz+1;Iz[0X1][BS[0x3]]=Iz[2];local Hs=1;BS=Lm[Wz];Wz=Wz+0X1;Iz[0x001]=rz[BS[0x3]];Wz=Wz+0X0001;Wz=Wz+0X1;Wz=Wz+1;pz=0X1;(Iz[pz])();do pz=pz-1;end;BS=Lm[Wz];do Wz=Wz+1;end;Iz[0X1]=rz[BS[3]];BS=Lm[Wz];Wz=Wz+1;do Iz[2]=rz[BS[3]];end;Wz=Wz+1;Wz=Wz+0X1;do Wz=Wz+0X1;end;do pz=0X0002;end;Iz[pz]=Iz[pz]();do Wz=Wz+1;end;Wz=Wz+1;BS=Lm[Wz];Wz=Wz+0X01;Iz[0X00002]=Iz[0X00002][BS[2]];BS=Lm[Wz];Wz=Wz+1;(Iz)[0x2]=Iz[0X2][BS[2]];Wz=Wz+0X1;Wz=Wz+1;Wz=Wz+0X01;Iz[Hs](Iz[Hs+1]);pz=Hs-1;Wz=Wz+1;do Wz=Wz+0x1;end;Wz=Wz+1;do repeat local ZE,vE=Km,(Iz);if not(#ZE>0X0)then else local NG=({});for j9,z9 in o,ZE do do for jt,Wt in o,z9 do if not(Wt[0X1]==vE and Wt[2]>=0x0)then else local iv=(Wt[2]);if not(not NG[iv])then else(NG)[iv]={vE[iv]};end;(Wt)[1]=NG[iv];(Wt)[0X00002]=0X1;end;end;end;end;end;until true;end;do return;end;end;else if cS~=0XF then(Iz)[BS[0x00004]]=-Iz[BS[0X0007]];else(Iz)[BS[4]]=Iz[BS[0X7]]>Iz[BS[0x0006]];end;end;end;else if cS>=0X4 then if not(cS>=0x6)then if cS==0X0005 then repeat local zw,Aw,Ww=Km,Iz,BS[0X0004];if#zw>0 then local gp={};do for oG,pG in o,zw do for ck,Ck in o,pG do if not(Ck[1]==Aw and Ck[2]>=Ww)then else local sj=(Ck[2]);do if not(not gp[sj])then else(gp)[sj]={Aw[sj]};end;end;(Ck)[0x001]=gp[sj];Ck[0X2]=0X00001;end;end;end;end;end;until true;else Iz[BS[4]]=Iz[BS[7]]+Iz[BS[6]];end;else if cS~=7 then Wz=BS[7];else local RE=pm[BS[0X0007]];local nE,sE=RE[0x2],nil;local QE=#nE;if QE>0x0 then do sE={};end;do for t4=0X00001,QE do local A4=(nE[t4]);if A4[1]~=0x0 then do(sE)[t4-1]=jm[A4[2]];end;else do sE[t4-0X1]={Iz,A4[2]};end;end;end;end;(K)(Km,sE);end;(Iz)[BS[0X4]]=gO(sE,RE,rz);end;end;else if not(cS<0X2)then if cS~=0x003 then Iz[BS[4]]=BS[3];else local oQ=BS[0X7];local yQ=(Iz[oQ]);do for yE=oQ+0X1,BS[0X6]do yQ=yQ..Iz[yE];end;end;Iz[BS[0X04]]=yQ;end;else if cS~=1 then(Iz)[BS[4]]=rz[BS[3]];else Iz[BS[0x4]]=Q(Iz[BS[7]],Iz[BS[6]]);end;end;end;end;end;end;end;end);do if not(Vz)then if s(Lz)=="\115\116ri\110g"then if I(Lz,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if I(Lz,"^.-:%d+: ")then E("Luraph Script:"..(zm[Wz-1]or"(internal)").."\058 "..h(Lz),0);else(E)(Lz,0);end;else E(Lz,0X0);end;elseif Lz then if xz~=0X1 then do return Iz[Gz](T(Iz,Gz+1,pz));end;else return Iz[Gz]();end;else if not(Gz)then else return T(Iz,Gz,xz);end;end;end;end;end;else do hm=function(...)local nk=(0);local Vk={};local Xk=0x01;local uk=(u and u()or _ENV);local sk={[1]=Vk,[0X002]=Jm};local Bk,Dk=pO(...);local Tk=((uk==J and Xm or uk));Bk=Bk-1;for AD=0,Bk do if not(Om>AD)then break;else(Vk)[AD]=Dk[AD+0X01];end;end;do if not rm then do Dk=nil;end;else if bm then do Vk[Om]={n=Bk>=Om and Bk-Om+1 or 0X0,T(Dk,Om+1,Bk+0x1)};end;end;end;end;if Tk~=uk then if not(W)then _ENV=Tk;else W(hm,Tk);end;end;local dk,Hk,ak,Zk=p(function()do while')\050v\105'do local z1=Lm[Xk];local I1=(z1[0X05]);Xk=Xk+0X00001;if I1>=0x00008 then do if I1>=0X0C then if not(I1<14)then do if I1==0XF then Vk[z1[0X4]]=z1[3];else do if not(Vk[z1[7]]<Vk[z1[0X6]])then else do Xk=z1[4];end;end;end;end;end;else if I1==13 then do(Vk)[z1[4]]=sk[z1[0X7]];end;else end;end;else do if I1<10 then if I1==9 then Vk[z1[4]][Vk[z1[0X7]]]=Vk[z1[6]];else(Vk)[z1[0X004]]={T({},0X001,z1[0X0007])};end;else if I1==11 then Vk[z1[4]]=Vk[z1[0x7]]-Vk[z1[0X0006]];else local tj=(pm[z1[0X7]]);local Mj,jj=tj[0X2],nil;local ej=(#Mj);do if ej>0 then do jj={};end;for Kh=1,ej do local zh=(Mj[Kh]);if zh[1]==0 then jj[Kh-1]={Vk,zh[0x2]};else do jj[Kh-1]=jm[zh[2]];end;end;end;K(Km,jj);end;end;(Vk)[z1[0X4]]=gO(jj,tj,Tk);end;end;end;end;end;else do if I1<0X4 then if not(I1<2)then do if I1~=3 then Vk[z1[4]]=Tk[z1[0x0003]];else for Du=z1[0X004],z1[7]do do(Vk)[Du]=nil;end;end;end;end;elseif I1~=1 then(Vk)[z1[4]]=Vk[z1[7]]*Vk[z1[0x6]];else Vk[1]=Tk[z1[3]];do Xk=Xk+0X0001;end;Xk=Xk+1;Xk=Xk+1;nk=0X1;Vk[nk]=Vk[nk]();Xk=Xk+1;Xk=Xk+1;z1=Lm[Xk];Xk=Xk+1;Vk[0X00001]=Vk[0x1][z1[2]];do Xk=Xk+1;end;Vk[2]=Vk[0X00000];z1=Lm[Xk];Xk=Xk+0X001;Vk[0x1][z1[3]]=Vk[0X002];z1=Lm[Xk];Xk=Xk+0X1;do(Vk)[1]=Tk[z1[3]];end;do Xk=Xk+1;end;nk=0X1;(Vk[nk])();nk=nk-1;do Xk=Xk+1;end;repeat local yx,ax=Km,Vk;if#yx>0 then local wc={};do for eX,SX in o,yx do do for J0,F0 in o,SX do if F0[1]==ax and F0[2]>=0x0 then local No=F0[0X2];do if not(not wc[No])then else do wc[No]={ax[No]};end;end;end;F0[1]=wc[No];F0[0X00002]=0X001;end;end;end;end;end;end;until true;return;end;else do if not(I1>=0X006)then if I1==0X005 then(sk)[z1[7]]=Vk[z1[4]];else local tY=Vk[z1[7]]/Vk[z1[0X00006]];do Vk[z1[4]]=tY-tY%0X1;end;end;else if I1~=7 then Xk=z1[7];else if Vk[z1[0X07]]~=Vk[z1[6]]then do Xk=z1[0x004];end;end;end;end;end;end;end;end;end;end;end);if not(dk)then do if s(Hk)~="string"then(E)(Hk,0X000);else do if not(I(Hk,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if I(Hk,"^\046\045\058\037\100+\058 ")then(E)('Lu\114\097\112h S\099\114i\112\116\058'..(zm[Xk-0X1]or"(internal)")..'\058\032'..h(Hk),0);else(E)(Hk,0X0);end;end;end;end;else if Hk then if Zk~=0x001 then return Vk[ak](T(Vk,ak+0x01,nk));else return Vk[ak]();end;else if ak then return T(Vk,ak,Zk);end;end;end;end;end;end;end;end;end;end;else if not(am>=0x20)then if am>=0X1D then if am>=30 then if am~=31 then hm=function(...)local s5=1;local z5={};local F5=({[0X002]=Jm,[1]=z5});local G5=(u and u()or _ENV);local Q5=0;local g5,b5=pO(...);do g5=g5-0X1;end;local h5=(G5==J and Xm or G5);for ut=0X0,g5 do do if Om>ut then(z5)[ut]=b5[ut+1];else break;end;end;end;if not rm then b5=nil;elseif not(bm)then else z5[Om]={n=g5>=Om and g5-Om+0X1 or 0,T(b5,Om+1,g5+1)};end;if h5==G5 then else if not(W)then _ENV=h5;else W(hm,h5);end;end;local Z5,C5,Y5,o5=p(function()while true do local TS=(Lm[s5]);local eS=(TS[5]);s5=s5+0X1;do if not(eS>=0x0008)then if eS<0X0004 then do if not(eS<2)then if eS==3 then local kM,JM=pm[TS[0X7]],(nil);local DM=(kM[0X0002]);local mM=#DM;if mM>0X0 then JM={};for iS=1,mM do local fS=(DM[iS]);if fS[1]~=0X0 then JM[iS-0X1]=jm[fS[2]];else JM[iS-0X1]={z5,fS[2]};end;end;(K)(Km,JM);end;do(z5)[TS[0x004]]=gO(JM,kM,h5);end;else(z5)[TS[4]]=z5[TS[0x7]]-z5[TS[6]];end;else if eS==1 then(z5)[TS[4]]=t(z5[TS[7]],z5[TS[0X6]]);else z5[TS[0X0004]]=z5[TS[0X7]];end;end;end;else do if not(eS>=6)then do if eS==5 then do repeat local Pd,Md=Km,z5;if#Pd>0x00 then local cB={};for GC,RC in o,Pd do for Ri,Wi in o,RC do do if Wi[1]==Md and Wi[2]>=0 then local eU=(Wi[0X2]);do if not cB[eU]then(cB)[eU]={Md[eU]};end;end;Wi[1]=cB[eU];Wi[0x2]=1;end;end;end;end;end;until true;end;local dr=(TS[0x0004]);return false,dr,dr+TS[0X00007]-0X2;else z5[1]=h5[TS[3]];s5=s5+1;s5=s5+0X01;s5=s5+0x01;Q5=0X1;do z5[Q5]=z5[Q5]();end;do s5=s5+1;end;s5=s5+0x1;TS=Lm[s5];s5=s5+0X01;do(z5)[1]=z5[1][TS[2]];end;s5=s5+0x1;z5[0X2]=z5[0];TS=Lm[s5];s5=s5+0X00001;do z5[1][TS[0X3]]=z5[0X00002];end;TS=Lm[s5];do s5=s5+1;end;do(z5)[0X00001]=h5[TS[0X3]];end;do s5=s5+1;end;Q5=0X1;z5[Q5]();do Q5=Q5-0X1;end;s5=s5+0X001;s5=s5+1;s5=s5+1;repeat local e1,k1=Km,(z5);if not(#e1>0)then else local VC={};for Y2,q2 in o,e1 do for uo,Co in o,q2 do do if not(Co[1]==k1 and Co[2]>=0)then else local Ke=(Co[0X2]);do if not VC[Ke]then VC[Ke]={k1[Ke]};end;end;(Co)[1]=VC[Ke];(Co)[0X2]=0x00001;end;end;end;end;end;until true;do return;end;end;end;else if eS==7 then do(z5)[TS[0X4]]=h5[TS[0X3]];end;else end;end;end;end;else if eS>=12 then if not(eS>=0Xe)then if eS~=13 then(z5)[TS[0X4]]=z5[TS[0X7]]+z5[TS[6]];else(z5)[TS[0x4]]={T({},0X1,TS[7])};end;else if eS==0XF then for mF=TS[0x0004],TS[0X0007]do z5[mF]=nil;end;else if not(z5[TS[7]]<z5[TS[0X06]])then else s5=TS[0X04];end;end;end;else if eS<0X0A then if eS==9 then if z5[TS[7]]==z5[TS[6]]then s5=TS[4];end;else z5[TS[0x4]]=TS[3];end;else if eS~=11 then s5=TS[0X07];else do(F5)[TS[7]]=z5[TS[4]];end;end;end;end;end;end;end;end);if Z5 then if C5 then if o5==0x1 then return z5[Y5]();else return z5[Y5](T(z5,Y5+1,Q5));end;elseif not(Y5)then else do return T(z5,Y5,o5);end;end;else if s(C5)=="string"then if I(C5,'\097\116t\101m\112\116\032\116\111 yie\108d \097cross\032\109et\097me\116\104o\100\047C%\045\099\097l\108\032\098oun\100\097\114\121')then return coroutine.yield();end;do if I(C5,"^.-:%d+: ")then E("L\117\114\097\112\104 S\099r\105\112t\058"..(zm[s5-0X00001]or"(i\110\116er\110\097\108)")..": "..h(C5),0);else(E)(C5,0);end;end;else E(C5,0);end;end;end;else hm=function(...)local Ri=(1);local Di={};local yi=(u and u()or _ENV);local Wi=0;local ci=((yi==J and Xm or yi));local zi={[0X002]=Jm,[1]=Di};local ji,Gi=pO(...);do ji=ji-1;end;for Lt=0,ji do if Om>Lt then Di[Lt]=Gi[Lt+0X1];else break;end;end;do if not rm then Gi=nil;elseif bm then(Di)[Om]={n=ji>=Om and ji-Om+0X1 or 0,T(Gi,Om+0x1,ji+1)};end;end;if ci~=yi then if not(W)then _ENV=ci;else W(hm,ci);end;end;local bi,Si,Fi,oi=p(function()while true do local zr=Lm[Ri];local Yr=zr[0x05];do Ri=Ri+1;end;if Yr>=0x00006 then if Yr>=0x9 then do if Yr>=11 then if Yr~=12 then else for yl=zr[4],zr[7]do do Di[yl]=nil;end;end;end;else if Yr~=0X000A then local Ds=(zr[6]);local FO,OO=zr[0X04],(zr[0X7]);do if OO~=0X0 then Wi=FO+OO-0X001;end;end;local rs,ls=nil,(nil);do if OO==0X1 then rs,ls=pO(Di[FO]());else rs,ls=pO(Di[FO](T(Di,FO+1,Wi)));end;end;if Ds~=0X01 then if Ds==0 then rs=rs+FO-1;Wi=rs;else do rs=FO+Ds-0X2;end;Wi=rs+1;end;local Fn=0X000;for AM=FO,rs do Fn=Fn+1;do Di[AM]=ls[Fn];end;end;else Wi=FO-1;end;else local RK,VK=zr[4],(zr[7]);Wi=RK+VK-1;repeat local QZ,RZ=Km,Di;if not(#QZ>0X0)then else local ia={};for lC,pC in o,QZ do for C6,g6 in o,pC do if g6[1]==RZ and g6[0X0002]>=0X00000 then local Pn=(g6[0X2]);do if not ia[Pn]then ia[Pn]={RZ[Pn]};end;end;(g6)[1]=ia[Pn];do(g6)[0X2]=1;end;end;end;end;end;until true;return true,RK,VK;end;end;end;else if not(Yr>=0X7)then local Vq=(zr[4]);local pq=L(function(...)P();do for ML,JL,XL,CL,YL,IL,rL,NL,iL,hL in...do P(true,{ML,JL,XL,CL,YL,IL,rL,NL,iL,hL});end;end;end);(pq)(Di[Vq],Di[Vq+1],Di[Vq+2]);Wi=Vq;(Di)[Vq]=pq;Ri=zr[0X007];else if Yr==8 then(Di)[1]=ci[zr[0x3]];Ri=Ri+0X1;Wi=1;(Di)[Wi]=Di[Wi]();Ri=Ri+1;Ri=Ri+0X01;zr=Lm[Ri];Ri=Ri+0X1;Di[0X1]=Di[0X00001][zr[0x2]];Ri=Ri+1;(Di)[2]=Di[0X000];zr=Lm[Ri];Ri=Ri+1;do(Di[1])[zr[0x003]]=Di[0X2];end;zr=Lm[Ri];do Ri=Ri+1;end;(Di)[1]=ci[zr[0X3]];Ri=Ri+0X1;Wi=1;(Di[Wi])();do Wi=Wi-0X1;end;Ri=Ri+1;do repeat local xn,En=Km,(Di);if not(#xn>0)then else local ih=({});for sb,Sb in o,xn do for Bk,yk in o,Sb do if not(yk[1]==En and yk[0X0002]>=0)then else local oD=(yk[0X2]);if not ih[oD]then ih[oD]={En[oD]};end;(yk)[1]=ih[oD];do(yk)[0X2]=0X0001;end;end;end;end;end;until true;end;do return;end;else Di[zr[0X4]]=Di[zr[7]]<=Di[zr[0X6]];end;end;end;else do if not(Yr<3)then if not(Yr<4)then if Yr==0X05 then do(Di)[zr[4]]=Di[zr[7]]/Di[zr[0X6]];end;else Di[zr[0X0004]]={T({},0X0001,zr[0x0007])};end;else(Di)[zr[0X4]]=ci[zr[3]];end;else do if Yr<0x1 then local Zl=(pm[zr[7]]);local il=(Zl[0x00002]);local gl,Bl=#il,(nil);if gl>0 then Bl={};for yl=0x1,gl do local vl=(il[yl]);do if vl[1]==0X0 then(Bl)[yl-1]={Di,vl[0X02]};else(Bl)[yl-0X1]=jm[vl[2]];end;end;end;(K)(Km,Bl);end;do(Di)[zr[4]]=gO(Bl,Zl,ci);end;else if Yr~=0X2 then Ri=zr[0X007];else do(Di)[zr[4]]=zr[3];end;end;end;end;end;end;end;end;end);if bi then if Si then if oi==0X1 then do return Di[Fi]();end;else return Di[Fi](T(Di,Fi+0X1,Wi));end;elseif Fi then do return T(Di,Fi,oi);end;end;else if s(Si)~="str\105ng"then(E)(Si,0x00000);else if not(I(Si,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if I(Si,"^\046\045\058\037d+\058 ")then(E)("L\117r\097\112\104 Sc\114\105\112t\058"..(zm[Ri-1]or"(internal)")..": "..h(Si),0);else(E)(Si,0);end;end;end;end;end;else hm=function(...)local Dw=(0x001);local Cw={};local ow=({[1]=Cw,[0X002]=Jm});local Lw=((u and u()or _ENV));local mw,Pw=pO(...);mw=mw-1;for S5=0,mw do if Om>S5 then(Cw)[S5]=Pw[S5+0X1];else break;end;end;local kw,Hw=(Lw==J and Xm or Lw),0x0;if not rm then Pw=nil;elseif not(bm)then else Cw[Om]={n=mw>=Om and mw-Om+1 or 0,T(Pw,Om+1,mw+0x001)};end;if kw~=Lw then do if W then W(hm,kw);else _ENV=kw;end;end;end;local Vw,aw,Aw,xw=p(function()while true do local pE=(Lm[Dw]);local eE=(pE[5]);Dw=Dw+1;if eE<0x6 then if not(eE>=0x3)then if not(eE>=1)then local E3=(pm[pE[7]]);local v3=(nil);local r3=(E3[2]);local X3=#r3;if not(X3>0X0000)then else do v3={};end;for ta=1,X3 do local Ma=(r3[ta]);do if Ma[1]==0 then v3[ta-0X1]={Cw,Ma[0x002]};else v3[ta-0X001]=jm[Ma[0X002]];end;end;end;K(Km,v3);end;do Cw[pE[0x4]]=gO(v3,E3,kw);end;else do if eE~=0x0002 then do(Cw)[pE[4]]=kw[pE[3]];end;else do(Cw)[pE[0x4]]={T({},0X1,pE[0X7])};end;end;end;end;else do if eE<0x4 then else if eE~=5 then(Cw)[pE[0X4]]=Cw[pE[7]]/Cw[pE[6]];else Cw[pE[0X004]]=pE[0X3];end;end;end;end;else if not(eE<0X9)then do if not(eE<0X0000b)then if eE~=12 then for f1=pE[0X4],pE[7]do(Cw)[f1]=nil;end;else Dw=pE[0x07];end;else do if eE~=10 then local oI=(pE[0X04]);local aI,zI=Cw[oI]();if aI then for L1=0x1,pE[0X06]do do Cw[oI+L1]=zI[L1];end;end;Dw=pE[0X00007];end;else(Cw)[0x01]=kw[pE[3]];Dw=Dw+1;do Hw=1;end;local TA=(0X1);Cw[Hw]=Cw[Hw]();Dw=Dw+1;Dw=Dw+1;do pE=Lm[Dw];end;Dw=Dw+1;do Cw[1]=Cw[0X1][pE[0X2]];end;do Dw=Dw+0X1;end;Cw[0x0002]=Cw[0];do pE=Lm[Dw];end;Dw=Dw+1;do(Cw[0x1])[pE[3]]=Cw[0X2];end;pE=Lm[Dw];Dw=Dw+0X1;do(Cw)[1]=kw[pE[3]];end;Dw=Dw+1;Dw=Dw+0x1;Dw=Dw+0x0001;Hw=0x1;(Cw[Hw])();do Hw=Hw-1;end;pE=Lm[Dw];Dw=Dw+1;do(Cw)[1]=kw[pE[0X3]];end;pE=Lm[Dw];do Dw=Dw+0X001;end;(Cw)[0x2]=kw[pE[3]];Dw=Dw+1;do Hw=0X2;end;do(Cw)[Hw]=Cw[Hw]();end;Dw=Dw+1;Dw=Dw+0X1;pE=Lm[Dw];Dw=Dw+0X0001;Cw[0X2]=Cw[0X0002][pE[0X0002]];pE=Lm[Dw];Dw=Dw+0x1;Cw[0X002]=Cw[2][pE[2]];do Dw=Dw+0X1;end;do Dw=Dw+0X001;end;Dw=Dw+0X1;Cw[TA](Cw[TA+0X1]);Hw=TA-0x1;Dw=Dw+0x1;do repeat local bE,zE=Km,(Cw);if not(#bE>0X0)then else local Ca={};for VZ,ZZ in o,bE do do for Ib,Jb in o,ZZ do do if Jb[1]==zE and Jb[0X2]>=0 then local Vj=(Jb[2]);if not(not Ca[Vj])then else(Ca)[Vj]={zE[Vj]};end;do(Jb)[0X00001]=Ca[Vj];end;(Jb)[0X02]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;else if eE<7 then Cw[pE[4]]=Cw[pE[7]]==Cw[pE[0X06]];else if eE==0x008 then ow[pE[0X7]]=Cw[pE[0X004]];else(Cw)[pE[4]]=#Cw[pE[0X7]];end;end;end;end;end;end);if Vw then if aw then if xw~=0X0001 then return Cw[Aw](T(Cw,Aw+0X1,Hw));else return Cw[Aw]();end;elseif not(Aw)then else return T(Cw,Aw,xw);end;else do if s(aw)=="string"then do if I(aw,'\097t\116empt\032t\111\032\121i\101\108\100\032acros\115 \109et\097\109et\104od/C\037\045ca\108l\032bou\110\100\097ry')then do return coroutine.yield();end;end;end;if I(aw,"^.-:%d+: ")then E("\076u\114\097\112\104\032\083\099ri\112\116:"..(zm[Dw-0X001]or"(\105n\116\101rnal)")..'\058 '..h(aw),0x0);else E(aw,0X0);end;else E(aw,0x00000);end;end;end;end;end;else if not(am<0X00001B)then if am==28 then hm=function(...)local Xn=0x1;local Ln={};local Dn=(u and u()or _ENV);local On,vn=pO(...);local pn=({[0X002]=Jm,[1]=Ln});On=On-1;do for yq=0,On do do if Om>yq then do(Ln)[yq]=vn[yq+1];end;else break;end;end;end;end;local rn=((Dn==J and Xm or Dn));if not rm then vn=nil;elseif not(bm)then else Ln[Om]={n=On>=Om and On-Om+0X001 or 0,T(vn,Om+1,On+1)};end;local Wn=0X000;do if rn~=Dn then if not(W)then _ENV=rn;else W(hm,rn);end;end;end;local nn,An,fn,Gn=p(function()do while true do local Rc=Lm[Xn];local cc=(Rc[0X0005]);Xn=Xn+1;if not(cc<7)then if cc<10 then if cc<0X8 then Ln[Rc[0X4]]=Ln[Rc[7]]*Ln[Rc[6]];else if cc==0x009 then do(Ln)[1]=rn[Rc[0X00003]];end;Xn=Xn+1;local VW=(0X01);Xn=Xn+1;Xn=Xn+1;Wn=1;(Ln)[Wn]=Ln[Wn]();Xn=Xn+1;Xn=Xn+0X00001;do Rc=Lm[Xn];end;Xn=Xn+1;do(Ln)[0x1]=Ln[0X1][Rc[2]];end;Xn=Xn+1;Xn=Xn+0X1;Xn=Xn+1;Ln[0X2]=Ln[0];do Rc=Lm[Xn];end;Xn=Xn+1;Ln[1][Rc[3]]=Ln[2];Rc=Lm[Xn];Xn=Xn+1;do(Ln)[0X0001]=rn[Rc[3]];end;Xn=Xn+0x1;Xn=Xn+0X1;Rc=Lm[Xn];Xn=Xn+1;do(Ln)[0X002]=rn[Rc[3]];end;do Xn=Xn+0X01;end;Xn=Xn+0X001;Xn=Xn+0X1;Wn=0X2;(Ln)[Wn]=Ln[Wn]();do Xn=Xn+0X001;end;do Xn=Xn+0X1;end;Rc=Lm[Xn];Xn=Xn+1;do(Ln)[0x2]=Ln[0X002][Rc[2]];end;Rc=Lm[Xn];do Xn=Xn+0X1;end;Ln[2]=Ln[2][Rc[2]];Xn=Xn+1;do Xn=Xn+0X001;end;Xn=Xn+0X1;(Ln[VW])(Ln[VW+1]);do Wn=VW-0X00001;end;do Xn=Xn+0x1;end;Xn=Xn+0X01;Rc=Lm[Xn];do Xn=Xn+0x1;end;(Ln)[1]=rn[Rc[3]];Xn=Xn+0x1;Xn=Xn+1;Xn=Xn+1;Wn=1;(Ln[Wn])();do Wn=Wn-1;end;Xn=Xn+0X1;repeat local qu,nu=Km,Ln;do if not(#qu>0)then else local VA={};for dS,VS in o,qu do for Pu,pu in o,VS do if pu[1]==nu and pu[0x2]>=0X0 then local zt=(pu[2]);if not(not VA[zt])then else VA[zt]={nu[zt]};end;pu[1]=VA[zt];do(pu)[0x002]=1;end;end;end;end;end;end;until true;do return;end;else(Ln)[Rc[4]]=Ln[Rc[0X007]]-Ln[Rc[0X006]];end;end;else if cc<12 then if cc==0X00b then local W4=pm[Rc[7]];local c4=(nil);local F4=W4[2];local R4=#F4;if R4>0X0000 then do c4={};end;for Hm=0X01,R4 do local nm=(F4[Hm]);if nm[1]==0X0 then(c4)[Hm-0X1]={Ln,nm[0X2]};else(c4)[Hm-1]=jm[nm[0X0002]];end;end;K(Km,c4);end;do(Ln)[Rc[4]]=gO(c4,W4,rn);end;else(Ln)[Rc[0x004]]=rn[Rc[0X3]];end;else if cc~=13 then(pn)[Rc[7]]=Ln[Rc[4]];else if not(Ln[Rc[0X7]]<=Ln[Rc[0X6]])then Xn=Rc[4];end;end;end;end;else do if not(cc<3)then do if not(cc<5)then do if cc==6 then if not(Ln[Rc[7]]<Ln[Rc[6]])then else Xn=Rc[0x4];end;else(Ln)[Rc[4]]={T({},0X1,Rc[0x7])};end;end;else if cc~=4 then for kJ=Rc[0X004],Rc[0X7]do(Ln)[kJ]=nil;end;else end;end;end;else if cc>=1 then if cc~=2 then Xn=Rc[0X7];else do Ln[Rc[0X0004]]=Rc[0X003];end;end;else(Ln[Rc[4]])[Ln[Rc[7]]]=Ln[Rc[6]];end;end;end;end;end;end;end);if nn then if An then if Gn==0X1 then return Ln[fn]();else return Ln[fn](T(Ln,fn+1,Wn));end;elseif not(fn)then else return T(Ln,fn,Gn);end;else do if s(An)=='s\116rin\103'then if not(I(An,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(I(An,'^.\045\058\037\100\043:\032'))then E(An,0);else E("Luraph Script:"..(zm[Xn-0x0001]or"(internal)")..": "..h(An),0);end;else(E)(An,0);end;end;end;end;else do hm=function(...)local BX,wX=0,{};local DX=(u and u()or _ENV);local oX,KX=pO(...);local sX,bX,vX=(DX==J and Xm or DX),{[1]=wX,[0X002]=Jm},(1);oX=oX-0X1;do for Op=0X0,oX do if Om>Op then do wX[Op]=KX[Op+1];end;else break;end;end;end;do if not rm then KX=nil;elseif bm then do(wX)[Om]={n=oX>=Om and oX-Om+0X1 or 0,T(KX,Om+0X1,oX+1)};end;end;end;if sX==DX then else if not(W)then _ENV=sX;else(W)(hm,sX);end;end;local nX,MX,yX,NX=p(function()do while true do local FO=(Lm[vX]);local OO=(FO[0x005]);vX=vX+1;if not(OO<0X7)then if not(OO<10)then if not(OO>=12)then if OO==11 then wX[FO[4]]=FO[0X003];else wX[FO[0x4]]=X(wX[FO[7]]);end;else do if OO~=0Xd then wX[FO[0X0004]]=bX[FO[7]];else wX[FO[4]]=sX[FO[3]];end;end;end;else if not(OO>=8)then(wX)[FO[0X00004]]=FO[3];else do if OO==0X9 then do wX[FO[4]]=wX[FO[7]]<=wX[FO[6]];end;else wX[FO[4]]={T({},0X1,FO[0X7])};end;end;end;end;else if not(OO<3)then if OO<0x00005 then if OO==0X4 then local ha,ua=FO[4],((FO[0X06]-0X1)*0X032);local Va=wX[ha];do for Ao=1,FO[0X007]do do Va[ua+Ao]=wX[ha+Ao];end;end;end;else vX=FO[7];end;else if OO==0X06 then else local RB,YB=pm[FO[7]],nil;local TB=(RB[2]);local cB=#TB;if cB>0X00 then YB={};for tt=0X1,cB do local dt=TB[tt];if dt[0X1]==0 then(YB)[tt-0x1]={wX,dt[2]};else do(YB)[tt-1]=jm[dt[2]];end;end;end;K(Km,YB);end;wX[FO[4]]=gO(YB,RB,sX);end;end;else if OO>=0X01 then if OO==2 then do(wX)[FO[0x0004]]=wX[FO[0X7]]%wX[FO[6]];end;else(wX)[0X0001]=sX[FO[0X3]];vX=vX+1;vX=vX+1;vX=vX+0X1;BX=0X1;wX[BX]=wX[BX]();do FO=Lm[vX];end;do vX=vX+1;end;wX[0X1]=wX[0x1][FO[0X02]];vX=vX+1;do wX[0X0002]=wX[0x0];end;do FO=Lm[vX];end;do vX=vX+0X1;end;(wX[1])[FO[3]]=wX[2];FO=Lm[vX];vX=vX+1;(wX)[1]=sX[FO[3]];vX=vX+1;vX=vX+1;vX=vX+1;BX=1;wX[BX]();BX=BX-1;vX=vX+1;do repeat local Ul,ol=Km,wX;do if#Ul>0X0 then local yQ={};do for oz,Bz in o,Ul do for Mk,uk in o,Bz do if uk[1]==ol and uk[0X2]>=0X0 then local Gf=(uk[0x02]);if not(not yQ[Gf])then else yQ[Gf]={ol[Gf]};end;(uk)[0X01]=yQ[Gf];uk[0x002]=1;end;end;end;end;end;end;until true;end;return;end;else wX[FO[4]]=wX[FO[7]]<wX[FO[6]];end;end;end;end;end;end);if not(nX)then if s(MX)=="string"then if not(I(MX,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(I(MX,'\094\046\045\058\037\100\043: '))then E(MX,0);else(E)("\076u\114a\112h\032S\099r\105\112\116:"..(zm[vX-0X1]or"(internal)").."\058 "..h(MX),0);end;else(E)(MX,0);end;else do if MX then if NX==0x00001 then return wX[yX]();else return wX[yX](T(wX,yX+1,BX));end;elseif not(yX)then else return T(wX,yX,NX);end;end;end;end;end;end;else do hm=function(...)local AE,wE=1,{};local eE=(u and u()or _ENV);local gE=0;local sE,mE=pO(...);local jE=({[1]=wE,[0X002]=Jm});sE=sE-1;local ZE=((eE==J and Xm or eE));for nk=0,sE do if not(Om>nk)then do break;end;else(wE)[nk]=mE[nk+1];end;end;if not rm then mE=nil;elseif not(bm)then else do(wE)[Om]={n=sE>=Om and sE-Om+1 or 0,T(mE,Om+1,sE+0X1)};end;end;do if ZE~=eE then if not(W)then _ENV=ZE;else(W)(hm,ZE);end;end;end;local TE,tE,IE,uE=p(function()do while true do local lL=Lm[AE];local NL=(lL[5]);AE=AE+1;if not(NL>=0X7)then if NL>=0x0003 then do if not(NL>=5)then if NL~=4 then for sW=lL[0X4],lL[0X0007]do wE[sW]=nil;end;else wE[lL[0x04]]=wE[lL[0X7]][wE[lL[6]]];end;else if NL~=0x006 then do(wE)[lL[0X4]]=ZE[lL[3]];end;else local mU=pm[lL[7]];local IU,QU=mU[2],(nil);local gU=(#IU);if gU>0X0 then QU={};for Rj=0X1,gU do local Kj=IU[Rj];if Kj[0X01]==0 then QU[Rj-0X1]={wE,Kj[0x2]};else(QU)[Rj-0X01]=jm[Kj[0X2]];end;end;K(Km,QU);end;(wE)[lL[0X04]]=gO(QU,mU,ZE);end;end;end;else if NL>=1 then do if NL~=0X02 then if wE[lL[7]]~=wE[lL[6]]then else AE=lL[0X4];end;else if wE[lL[0x7]]~=wE[lL[6]]then AE=lL[4];end;end;end;else end;end;else do if NL>=0XB then if not(NL<13)then if NL~=14 then local Rv,tv=lL[4],lL[7];if tv~=0X0 then gE=Rv+tv-0X1;end;local Mv=(lL[0X6]);local Cv,Wv=nil,(nil);do if tv~=0x00001 then Cv,Wv=pO(wE[Rv](T(wE,Rv+0X1,gE)));else Cv,Wv=pO(wE[Rv]());end;end;if Mv~=1 then do if Mv==0 then Cv=Cv+Rv-1;gE=Cv;else do Cv=Rv+Mv-2;end;gE=Cv+1;end;end;local ty=0;for U1=Rv,Cv do ty=ty+0x1;wE[U1]=Wv[ty];end;else gE=Rv-0X1;end;else wE[lL[4]]=c(wE[lL[7]],wE[lL[6]]);end;else if NL~=0X0c then(wE)[lL[0X4]]=wE[lL[0x7]]<=wE[lL[0x06]];else wE[lL[4]]={T({},1,lL[0X7])};end;end;else if not(NL<9)then if NL~=0XA then local Vc=(lL[0X0004]);local pc=(L(function(...)P();for l5,d5,K5,c5,y5,q5,z5,b5,S5,p5 in...do P(true,{l5,d5,K5,c5,y5,q5,z5,b5,S5,p5});end;end));(pc)(wE[Vc],wE[Vc+0X1],wE[Vc+2]);gE=Vc;(wE)[Vc]=pc;AE=lL[0X7];else(wE)[lL[0X0004]]=lL[3];end;else if NL==0X8 then do AE=lL[7];end;else wE[0X1]=ZE[lL[0X00003]];AE=AE+0x1;AE=AE+1;AE=AE+1;gE=1;do(wE)[gE]=wE[gE]();end;AE=AE+0X0001;AE=AE+1;do lL=Lm[AE];end;AE=AE+1;wE[0X1]=wE[0X00001][lL[0X2]];AE=AE+1;wE[2]=wE[0];lL=Lm[AE];AE=AE+1;(wE[1])[lL[0X3]]=wE[0X2];lL=Lm[AE];AE=AE+0x0001;(wE)[1]=ZE[lL[0X00003]];AE=AE+0X1;AE=AE+0X1;AE=AE+0x1;gE=0X1;wE[gE]();do gE=gE-0X1;end;do AE=AE+0X1;end;repeat local GS,kS=Km,(wE);do if not(#GS>0)then else local ec=({});for wZ,gZ in o,GS do for Vd,Jd in o,gZ do if Jd[0x00001]==kS and Jd[2]>=0 then local sz=Jd[2];if not ec[sz]then(ec)[sz]={kS[sz]};end;Jd[0x0001]=ec[sz];(Jd)[2]=0X1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if TE then if tE then if uE~=1 then return wE[IE](T(wE,IE+1,gE));else return wE[IE]();end;elseif IE then return T(wE,IE,uE);end;else if s(tE)=="string"then if I(tE,"\097\116\116empt to\032yi\101l\100 \097\099\114o\115\115\032m\101tam\101\116\104o\100/\067%\045c\097\108l bo\117\110\100ar\121")then return coroutine.yield();end;if not(I(tE,'^\046-:%\100+\058\032'))then E(tE,0);else E("L\117r\097ph \083\099r\105\112t\058"..(zm[AE-0X1]or"(\105nte\114na\108\041").."\058 "..h(tE),0);end;else E(tE,0X0000);end;end;end;end;end;end;else if am<35 then do if am<33 then hm=function(...)local qP,gP=0X1,{};local CP=((u and u()or _ENV));local jP=({[1]=gP,[0X002]=Jm});local ZP,JP=pO(...);ZP=ZP-1;for mI=0,ZP do if Om>mI then do(gP)[mI]=JP[mI+0x01];end;else break;end;end;local YP=(CP==J and Xm or CP);if not rm then JP=nil;else if not(bm)then else gP[Om]={n=ZP>=Om and ZP-Om+0X001 or 0,T(JP,Om+0X001,ZP+1)};end;end;if YP==CP then else if W then W(hm,YP);else _ENV=YP;end;end;local FP=(0X0);do while-423475355 do local BY=Lm[qP];do qP=qP+0X1;end;local nY=BY[0X0005];return(function(r,G,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["AutoMastery"]and getgenv().Main["MasteryMethod"]=="Civilian"then TweenFa=Tween(G[0][1][G[0][2]]():GetModelCFrame()*CFrame.new(FarmModes)*AngelsCFrame);elseif getgenv().Main["AutoMastery"]and getgenv().Main["MasteryMethod"]=="Logs"then TweenFa=Tween(G[1][1][G[1][2]].punchinglogs:GetModelCFrame()*CFrame.new(-6,0,9));end;end);end;end);end)(gP,jm,...);end;end;end;else if am~=34 then do hm=function(...)local jE,OE,JE=0x0001,{},0X0;local hE=((u and u()or _ENV));local WE=({[0X002]=Jm,[1]=OE});local xE=((hE==J and Xm or hE));local IE,LE=pO(...);do IE=IE-0X1;end;for jI=0,IE do do if Om>jI then OE[jI]=LE[jI+0X1];else do break;end;end;end;end;if not rm then do LE=nil;end;else if not(bm)then else(OE)[Om]={n=IE>=Om and IE-Om+1 or 0X0,T(LE,Om+0X001,IE+1)};end;end;if xE==hE then else if W then(W)(hm,xE);else _ENV=xE;end;end;local NE,DE,XE,AE=p(function()while"\104`"do local Rl=(Lm[jE]);local Fl=Rl[5];jE=jE+0x1;if Fl<0X7 then do if not(Fl<3)then if not(Fl<5)then if Fl~=0X00006 then OE[Rl[4]]=true;else for kh=Rl[0x004],Rl[7]do(OE)[kh]=nil;end;end;else do if Fl~=4 then else if not OE[Rl[4]]then jE=Rl[0x7];end;end;end;end;else if not(Fl>=1)then local an=pm[Rl[0X7]];local Dn=an[2];local Tn=(nil);local En=#Dn;if En>0X0 then Tn={};do for fW=0x1,En do local cW=Dn[fW];if cW[1]~=0X000 then(Tn)[fW-0X001]=jm[cW[2]];else Tn[fW-1]={OE,cW[0X02]};end;end;end;(K)(Km,Tn);end;(OE)[Rl[4]]=gO(Tn,an,xE);else if Fl~=0X00002 then if not(OE[Rl[0X007]]<=OE[Rl[6]])then do jE=Rl[4];end;end;else local CI=(Rl[0X0007]);local QI=Rl[4];if CI==0x00000 then else JE=QI+CI-0X1;end;local pI,dI,DI=nil,nil,Rl[0x6];if CI==0X1 then do pI,dI=pO(OE[QI]());end;else pI,dI=pO(OE[QI](T(OE,QI+0X1,JE)));end;do if DI==1 then JE=QI-0x1;else if DI~=0 then pI=QI+DI-0X2;JE=pI+1;else pI=pI+QI-0X0001;JE=pI;end;local Xf=0x00;for Og=QI,pI do Xf=Xf+1;(OE)[Og]=dI[Xf];end;end;end;end;end;end;end;else if not(Fl<0X000A)then if not(Fl<12)then if Fl~=0X0d then OE[0X00001]=xE[Rl[3]];jE=jE+0X001;JE=0X1;OE[JE]=OE[JE]();Rl=Lm[jE];jE=jE+1;do(OE)[0X1]=OE[1][Rl[0X00002]];end;jE=jE+0x00001;OE[2]=OE[0X000];Rl=Lm[jE];jE=jE+0X0001;OE[0X1][Rl[3]]=OE[2];Rl=Lm[jE];jE=jE+0X1;local Mf=(1);OE[1]=xE[Rl[0x3]];jE=jE+1;do jE=jE+1;end;jE=jE+0X01;do JE=1;end;OE[JE]();JE=JE-0X1;Rl=Lm[jE];jE=jE+1;do OE[0x1]=xE[Rl[3]];end;Rl=Lm[jE];jE=jE+0x1;(OE)[0X2]=xE[Rl[0X3]];jE=jE+0x1;jE=jE+0X001;jE=jE+1;JE=2;(OE)[JE]=OE[JE]();do Rl=Lm[jE];end;do jE=jE+1;end;(OE)[0X0002]=OE[2][Rl[0X002]];jE=jE+0x1;JE=0X2;OE[JE]=OE[JE]();do jE=jE+1;end;do jE=jE+1;end;do Rl=Lm[jE];end;do jE=jE+1;end;OE[2]=OE[2][Rl[2]];jE=jE+0X0001;do jE=jE+1;end;Rl=Lm[jE];do jE=jE+1;end;do OE[2]=OE[0X02][Rl[0X02]];end;jE=jE+1;jE=jE+0X1;jE=jE+1;OE[Mf](OE[Mf+1]);JE=Mf-1;jE=jE+1;repeat local ic,Mc=Km,(OE);if not(#ic>0)then else local n2=({});for Gf,mf in o,ic do for YF,VF in o,mf do do if VF[0X1]==Mc and VF[2]>=0 then local tn=(VF[2]);if not(not n2[tn])then else do n2[tn]={Mc[tn]};end;end;(VF)[0X00001]=n2[tn];VF[0X00002]=0X0001;end;end;end;end;end;until true;do return;end;else local eB=Rl[0X04];local aB=(OE[eB+0X0001]);local RB=OE[eB+2];local TB=OE[eB];(OE)[eB]=L(function()for h8=TB,aB,RB do(P)(true,h8);end;end);jE=Rl[0X00007];end;else if Fl~=11 then OE[Rl[0X4]]=Rl[0x0003];else jE=Rl[0X07];end;end;else if Fl>=0x0008 then if Fl~=0X9 then repeat local gC,YC,jC=Km,OE,(Rl[0x00004]);if#gC>0X00000 then local uI=({});for A3,Z3 in o,gC do for J8,u8 in o,Z3 do if u8[0X1]==YC and u8[0X2]>=jC then local dt=(u8[2]);if not(not uI[dt])then else uI[dt]={YC[dt]};end;do(u8)[0X1]=uI[dt];end;(u8)[0X002]=1;end;end;end;end;until true;else OE[Rl[4]]=xE[Rl[3]];end;else(OE)[Rl[4]]={T({},1,Rl[0X7])};end;end;end;end;end);if NE then do if DE then if AE~=1 then return OE[XE](T(OE,XE+0x1,JE));else return OE[XE]();end;else if XE then return T(OE,XE,AE);end;end;end;else if s(DE)~="st\114\105\110g"then E(DE,0X00);else if not(I(DE,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if I(DE,"^.-:%d+: ")then E('Luraph\032S\099ript\058'..(zm[jE-1]or"(internal)")..": "..h(DE),0X0);else E(DE,0);end;end;end;end;end;end;else hm=function(...)local W7,d7=0X0,({});local T7=0X01;local g7=(u and u()or _ENV);local R7=({[1]=d7,[0X002]=Jm});local V7,D7=pO(...);local y7=(g7==J and Xm or g7);V7=V7-1;for sm=0,V7 do if Om>sm then d7[sm]=D7[sm+1];else break;end;end;if not rm then D7=nil;else if not(bm)then else d7[Om]={n=V7>=Om and V7-Om+1 or 0X0000,T(D7,Om+0X1,V7+1)};end;end;if y7~=g7 then if not(W)then _ENV=y7;else W(hm,y7);end;end;local G7,E7,L7,P7=p(function()while-879862218 do local xC=Lm[T7];local AC=xC[5];T7=T7+0X1;if AC>=7 then if AC<0Xa then if not(AC>=0X8)then do for Um=xC[4],xC[7]do d7[Um]=nil;end;end;else if AC~=0X9 then T7=xC[0X007];else d7[xC[0X0004]]={T({},0x001,xC[7])};end;end;else do if AC<0xC then do if AC~=0Xb then(d7)[xC[4]]=d7[xC[7]][d7[xC[6]]];else(d7)[1]=y7[xC[3]];do T7=T7+0X0001;end;T7=T7+1;T7=T7+0X1;W7=1;(d7)[W7]=d7[W7]();do xC=Lm[T7];end;T7=T7+0X1;(d7)[0X0001]=d7[0X00001][xC[0x0002]];T7=T7+1;T7=T7+0x00001;T7=T7+0X1;d7[2]=d7[0];xC=Lm[T7];do T7=T7+0x1;end;d7[1][xC[0x3]]=d7[2];xC=Lm[T7];do T7=T7+0X1;end;d7[0X00001]=y7[xC[3]];T7=T7+1;W7=1;(d7[W7])();W7=W7-0x0001;T7=T7+1;do T7=T7+1;end;T7=T7+1;repeat local Aq,Vq=Km,(d7);if not(#Aq>0X0)then else local kR={};for qA,aA in o,Aq do for oW,VW in o,aA do do if not(VW[0X1]==Vq and VW[0X2]>=0X0)then else local y5=(VW[0X0002]);do if not(not kR[y5])then else do(kR)[y5]={Vq[y5]};end;end;end;do(VW)[1]=kR[y5];end;do(VW)[2]=1;end;end;end;end;end;end;until true;do return;end;end;end;else do if AC~=0XD then if not(d7[xC[4]])then else T7=xC[0X07];end;else local oR=(pm[xC[7]]);local NR=(oR[2]);local OR,CR=#NR,nil;if not(OR>0X0)then else CR={};for LN=0X1,OR do local RN=NR[LN];if RN[0X0001]~=0 then do CR[LN-0X00001]=jm[RN[0X2]];end;else(CR)[LN-0x0001]={d7,RN[0X2]};end;end;K(Km,CR);end;d7[xC[0X04]]=gO(CR,oR,y7);end;end;end;end;end;elseif AC>=3 then if AC>=5 then if AC==0X00006 then local Go=(xC[0x00004]);local co,Qo=d7[Go]();do if not(co)then else do T7=xC[0X7];end;d7[Go+0X0003]=Qo;end;end;else d7[xC[0X004]]=xC[3];end;else do if AC~=4 then do if not(not(d7[xC[0X0007]]<=d7[xC[6]]))then else T7=xC[4];end;end;else do d7[xC[4]]=y7[xC[3]];end;end;end;end;else if not(AC>=1)then do d7[xC[0X4]]=d7[xC[0x0007]]^d7[xC[6]];end;else do if AC~=2 then if d7[xC[7]]==d7[xC[0x00006]]then do T7=xC[0X4];end;end;else end;end;end;end;end;end);do if not(G7)then if s(E7)~='s\116\114\105ng'then(E)(E7,0);else if not(I(E7,"\097\116\116e\109pt\032to y\105eld\032acr\111ss m\101\116ame\116hod\047\067%\045\099\097ll boun\100a\114y"))then else return coroutine.yield();end;if I(E7,'\094.-:\037d\043: ')then E("Luraph Script:"..(zm[T7-0X1]or"(internal)")..": "..h(E7),0);else(E)(E7,0X0);end;end;else if E7 then if P7~=1 then return d7[L7](T(d7,L7+0X001,W7));else return d7[L7]();end;elseif not(L7)then else return T(d7,L7,P7);end;end;end;end;end;end;end;else do if not(am>=0X000025)then if am~=0x0024 then hm=function(...)local zt=1;local Ht=({});local qt=((u and u()or _ENV));local Lt=({[0X002]=Jm,[1]=Ht});local rt,jt=pO(...);local Qt,Ct=(qt==J and Xm or qt),0X0;do rt=rt-0X1;end;for C5=0X0,rt do if Om>C5 then do Ht[C5]=jt[C5+0x1];end;else break;end;end;do if not rm then jt=nil;elseif bm then(Ht)[Om]={n=rt>=Om and rt-Om+1 or 0,T(jt,Om+1,rt+1)};end;end;if Qt~=qt then if W then W(hm,Qt);else _ENV=Qt;end;end;while true do local v3=(Lm[zt]);local B3=(v3[5]);zt=zt+1;return(function(h,L,...)spawn(function()while task.wait()do pcall(function()if getgenv().Main["Auto_Regen"]then HealthMin=L[0][1][L[0][2]].Character.Humanoid.MaxHealth*getgenv().Main["AutoRegen_AtHealth"]/L[0][1][L[0][2]].Character.Humanoid.MaxHealth;if(math.floor(L[0][1][L[0][2]].Character.Humanoid.Health)<=HealthMin)then pcall(function()game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(true);end);repeat wait(1.5);until L[0][1][L[0][2]].Character.Humanoid.Health==L[0][1][L[0][2]].Character.Humanoid.MaxHealth;game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(false);else repeat wait();until(math.floor(L[0][1][L[0][2]].Character.Humanoid.Health)<=HealthMin);end;end;end);end;end);end)(Ht,jm,...);end;end;else do hm=function(...)local tJ,DJ=0x1,{};local XJ=((u and u()or _ENV));local NJ={[0X002]=Jm,[1]=DJ};local EJ,iJ=pO(...);EJ=EJ-0x0001;do for Ap=0X0,EJ do do if Om>Ap then DJ[Ap]=iJ[Ap+1];else break;end;end;end;end;if not rm then iJ=nil;elseif not(bm)then else DJ[Om]={n=EJ>=Om and EJ-Om+0x1 or 0x0,T(iJ,Om+0X1,EJ+0X01)};end;local wJ=(0);local rJ=(XJ==J and Xm or XJ);if rJ~=XJ then do if not(W)then _ENV=rJ;else(W)(hm,rJ);end;end;end;local oJ,SJ,KJ,IJ=p(function()do while true do local ub=Lm[tJ];local Bb=(ub[5]);tJ=tJ+0X01;do if not(Bb<0X6)then if Bb>=0X09 then do if Bb<0X0000B then if Bb==10 then do(DJ)[ub[0X4]]=ub[3];end;else end;else if Bb==12 then do tJ=ub[7];end;else DJ[ub[0X4]]=DJ[ub[0X0007]]~=DJ[ub[6]];end;end;end;else if not(Bb<7)then if Bb~=8 then(DJ)[ub[4]]={T({},1,ub[0X007])};else local FO=(pm[ub[0x7]]);local tx,OO=FO[2],(nil);local Ax=#tx;if Ax>0x0 then OO={};for UI=1,Ax do local vI=tx[UI];if vI[1]==0 then OO[UI-0x1]={DJ,vI[0x0002]};else OO[UI-0X1]=jm[vI[0X00002]];end;end;(K)(Km,OO);end;(DJ)[ub[0X004]]=gO(OO,FO,rJ);end;else DJ[ub[4]]=DJ[ub[0X00007]]%DJ[ub[0X6]];end;end;else if not(Bb>=3)then if not(Bb>=1)then(DJ)[ub[0X0004]]=DJ[ub[7]]>=DJ[ub[0X6]];else do if Bb~=0X2 then DJ[ub[0x4]]=rJ[ub[3]];else repeat local NE,XE,EE=Km,DJ,(ub[4]);if not(#NE>0)then else local aQ={};for Gi,pi in o,NE do for MJ,AJ in o,pi do if not(AJ[0X1]==XE and AJ[0X00002]>=EE)then else local NP=(AJ[2]);if not aQ[NP]then aQ[NP]={XE[NP]};end;(AJ)[0X1]=aQ[NP];AJ[2]=0x1;end;end;end;end;until true;end;end;end;else if not(Bb>=4)then DJ[ub[4]]=c(DJ[ub[0X00007]],DJ[ub[0x00006]]);else if Bb~=5 then DJ[0x1]=rJ[ub[3]];tJ=tJ+1;do tJ=tJ+1;end;tJ=tJ+0X0001;wJ=1;DJ[wJ]=DJ[wJ]();tJ=tJ+0x001;tJ=tJ+0X0001;do ub=Lm[tJ];end;do tJ=tJ+0X1;end;(DJ)[0X1]=DJ[1][ub[0X00002]];tJ=tJ+1;do(DJ)[0X002]=DJ[0];end;ub=Lm[tJ];tJ=tJ+0X1;(DJ[1])[ub[0X03]]=DJ[0x2];ub=Lm[tJ];do tJ=tJ+0X01;end;do(DJ)[0X0001]=rJ[ub[0X3]];end;tJ=tJ+1;wJ=1;DJ[wJ]();wJ=wJ-0x00001;do tJ=tJ+1;end;repeat local Vv,tv=Km,(DJ);if#Vv>0 then local GZ={};for I3,E3 in o,Vv do for Yn,Mn in o,E3 do if Mn[0X001]==tv and Mn[2]>=0 then local mh=(Mn[2]);if not(not GZ[mh])then else do GZ[mh]={tv[mh]};end;end;Mn[1]=GZ[mh];do Mn[0X002]=1;end;end;end;end;end;until true;do return;end;else for sB=ub[4],ub[0X07]do(DJ)[sB]=nil;end;end;end;end;end;end;end;end;end);if oJ then if SJ then do if IJ~=0X00001 then do return DJ[KJ](T(DJ,KJ+0X0001,wJ));end;else do return DJ[KJ]();end;end;end;elseif not(KJ)then else return T(DJ,KJ,IJ);end;else if s(SJ)=="string"then if I(SJ,'\097\116\116em\112\116\032\116\111\032y\105e\108\100 \097\099\114\111\115s \109\101tam\101t\104o\100\047\067%-call b\111\117ndar\121')then do return coroutine.yield();end;end;if not(I(SJ,"^.-:%d+: "))then E(SJ,0);else E('\076u\114\097\112h Scri\112t:'..(zm[tJ-1]or'(i\110te\114n\097\108)')..": "..h(SJ),0X0);end;else(E)(SJ,0);end;end;end;end;end;else if am~=0X26 then hm=function(...)local ye,Ze=0X00,{};local ge=((u and u()or _ENV));local Ye={[0X002]=Jm,[1]=Ze};local te,re=pO(...);te=te-1;local Ue,ae=(ge==J and Xm or ge),(0X001);for QU=0,te do do if not(Om>QU)then do break;end;else do Ze[QU]=re[QU+0X1];end;end;end;end;do if not rm then re=nil;elseif not(bm)then else do Ze[Om]={n=te>=Om and te-Om+0x1 or 0,T(re,Om+1,te+0X001)};end;end;end;do if Ue~=ge then if W then W(hm,Ue);else do _ENV=Ue;end;end;end;end;do while true do local la=Lm[ae];do ae=ae+0X00001;end;local ha=la[5];return(function(s,n,...)if not getgenv().PutEnemies then coroutine.resume(coroutine.create(function()getgenv().PutEnemies=true;while game:GetService("RunService").RenderStepped:wait()do pcall(function()for Q,m in pairs(game:GetService("Workspace").Mobs.Bosses["Water_Trainee"].Sabito:GetChildren())do wait();if m:FindFirstChild("Humanoid")~=nil and m:IsA("Model")then m.Parent=game:GetService("Workspace").Mobs;end;end;for I,D in pairs(game:GetService("Workspace").Mobs.Bosses.ThunderTrainee.Zanegutsu:GetChildren())do wait();if D:FindFirstChild("Humanoid")~=nil and D:IsA("Model")then D.Parent=game:GetService("Workspace").Mobs;end;end;for W,d in pairs(game:GetService("Workspace").Mobs.Bosses["Insect_Trainee"].Ouwbae:GetChildren())do wait();if d:FindFirstChild("Humanoid")~=nil and d:IsA("Model")then d.Parent=game:GetService("Workspace").Mobs;end;end;for A,h in pairs(game:GetService("Workspace").Mobs.Bosses["Wind_Trainee"].Sanemi:GetChildren())do wait();if h:FindFirstChild("Humanoid")~=nil and h:IsA("Model")then h.Parent=game:GetService("Workspace").Mobs;end;end;for f,J in pairs(game:GetService("Workspace").Mobs.Bosses.Arrow:GetChildren())do wait();if J:FindFirstChild("Humanoid")~=nil and J:IsA("Model")then J.Parent=game:GetService("Workspace").Mobs;end;end;for x,O in pairs(game:GetService("Workspace").Mobs.Bosses["Reaper Boss"]:GetChildren())do wait();if O:FindFirstChild("Humanoid")~=nil and O:IsA("Model")then O.Parent=game:GetService("Workspace").Mobs;end;end;for T,e in pairs(game:GetService("Workspace").Mobs.Bosses.Tamari:GetChildren())do wait();if e:FindFirstChild("Humanoid")~=nil and e:IsA("Model")then e.Parent=game:GetService("Workspace").Mobs;end;end;for m,W in pairs(game:GetService("Workspace").Mobs.Bosses["Bomb_boss"]:GetChildren())do wait();if W:FindFirstChild("Humanoid")~=nil and W:IsA("Model")then W.Parent=game:GetService("Workspace").Mobs;end;end;for t,x in pairs(game:GetService("Workspace").Mobs.Bosses.Water:GetChildren())do wait();if x:FindFirstChild("Humanoid")~=nil and x:IsA("Model")then x.Parent=game:GetService("Workspace").Mobs;end;end;for m,O in pairs(game:GetService("Workspace").Mobs.Bandits.Zone2.Kaden:GetChildren())do wait();if O:FindFirstChild("Humanoid")~=nil and O:IsA("Model")then O.Parent=game:GetService("Workspace").Mobs;end;end;for b,u in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Boss:GetChildren())do wait();if u:FindFirstChild("Humanoid")~=nil and u:IsA("Model")then u.Parent=game:GetService("Workspace").Mobs;end;end;for A,B in pairs(game:GetService("Workspace").Mobs.Civilians.Kiribating["Civilian_1"]:GetChildren())do wait();if B:FindFirstChild("Humanoid")~=nil and B:IsA("Model")then B.Parent=game:GetService("Workspace").Mobs;end;end;for N,y in pairs(game:GetService("Workspace").Mobs.Civilians.Kiribating["Civilian_2"]:GetChildren())do wait();if y:FindFirstChild("Humanoid")~=nil and y:IsA("Model")then y.Parent=game:GetService("Workspace").Mobs;end;end;for q,H in pairs(game:GetService("Workspace").Mobs.Civilians.Kiribating["Civilian_3"]:GetChildren())do wait();if H:FindFirstChild("Humanoid")~=nil and H:IsA("Model")then H.Parent=game:GetService("Workspace").Mobs;end;end;for Q,r in pairs(game:GetService("Workspace").Mobs.Civilians.Village2["Civilian_1"]:GetChildren())do wait();if r:FindFirstChild("Humanoid")~=nil and r:IsA("Model")then r.Parent=game:GetService("Workspace").Mobs;end;end;for R,P in pairs(game:GetService("Workspace").Mobs.Civilians.Village2["Civilian_2"]:GetChildren())do wait();if P:FindFirstChild("Humanoid")~=nil and P:IsA("Model")then P.Parent=game:GetService("Workspace").Mobs;end;end;for g,i in pairs(game:GetService("Workspace").Mobs.Civilians.Village3["Civilian_2"]:GetChildren())do wait();if i:FindFirstChild("Humanoid")~=nil and i:IsA("Model")then i.Parent=game:GetService("Workspace").Mobs;end;end;for l,T in pairs(game:GetService("Workspace").Mobs.Civilians.Village3["Civilian_2"]:GetChildren())do wait();if T:FindFirstChild("Humanoid")~=nil and T:IsA("Model")then T.Parent=game:GetService("Workspace").Mobs;end;end;for q,w in pairs(game:GetService("Workspace").Mobs.Civilians.Village3["Civilian_3"]:GetChildren())do wait();if w:FindFirstChild("Humanoid")~=nil and w:IsA("Model")then w.Parent=game:GetService("Workspace").Mobs;end;end;for f,h in pairs(game:GetService("Workspace").Mobs.Civilians.Village4["Civilian_1"]:GetChildren())do wait();if h:FindFirstChild("Humanoid")~=nil and h:IsA("Model")then h.Parent=game:GetService("Workspace").Mobs;end;end;for y,i in pairs(game:GetService("Workspace").Mobs.Civilians.Village4["Civilian_2"]:GetChildren())do wait();if i:FindFirstChild("Humanoid")~=nil and i:IsA("Model")then i.Parent=game:GetService("Workspace").Mobs;end;end;for a,g in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Bandit5:GetChildren())do wait();if g:FindFirstChild("Humanoid")~=nil and g:IsA("Model")then g.Parent=game:GetService("Workspace").Mobs;end;end;for P,a in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Bandit4:GetChildren())do wait();if a:FindFirstChild("Humanoid")~=nil and a:IsA("Model")then a.Parent=game:GetService("Workspace").Mobs;end;end;for b,C in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Bandit3:GetChildren())do wait();if C:FindFirstChild("Humanoid")~=nil and C:IsA("Model")then C.Parent=game:GetService("Workspace").Mobs;end;end;for p,T in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Bandit2:GetChildren())do wait();if T:FindFirstChild("Humanoid")~=nil and T:IsA("Model")then T.Parent=game:GetService("Workspace").Mobs;end;end;for q,y in pairs(game:GetService("Workspace").Mobs.Bandits.Zone1.Bandit:GetChildren())do wait();if y:FindFirstChild("Humanoid")~=nil and y:IsA("Model")then y.Parent=game:GetService("Workspace").Mobs;end;end;for D,O in pairs(game:GetService("Workspace").Mobs.Demons["Zapiware_Cave"]["Demon_1"]:GetChildren())do wait();if O:FindFirstChild("Humanoid")~=nil and O:IsA("Model")then O.Parent=game:GetService("Workspace").Mobs;end;end;for g,R in pairs(game:GetService("Workspace").Mobs.Demons["Zapiware_Cave"]["Demon_2"]:GetChildren())do wait();if R:FindFirstChild("Humanoid")~=nil and R:IsA("Model")then R.Parent=game:GetService("Workspace").Mobs;end;end;for k,g in pairs(game:GetService("Workspace").Mobs.Demons["Zapiware_Cave"]["Demon_3"]:GetChildren())do wait();if g:FindFirstChild("Humanoid")~=nil and g:IsA("Model")then g.Parent=game:GetService("Workspace").Mobs;end;end;for L,O in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_1"]:GetChildren())do wait();if O:FindFirstChild("Humanoid")~=nil and O:IsA("Model")then O.Parent=game:GetService("Workspace").Mobs;end;end;for F,L in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_2"]:GetChildren())do wait();if L:FindFirstChild("Humanoid")~=nil and L:IsA("Model")then L.Parent=game:GetService("Workspace").Mobs;end;end;for d,E in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_3"]:GetChildren())do wait();if E:FindFirstChild("Humanoid")~=nil and E:IsA("Model")then E.Parent=game:GetService("Workspace").Mobs;end;end;for W,t in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_4"]:GetChildren())do wait();if t:FindFirstChild("Humanoid")~=nil and t:IsA("Model")then t.Parent=game:GetService("Workspace").Mobs;end;end;for K,j in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_5"]:GetChildren())do wait();if j:FindFirstChild("Humanoid")~=nil and j:IsA("Model")then j.Parent=game:GetService("Workspace").Mobs;end;end;for Z,E in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_6"]:GetChildren())do wait();if E:FindFirstChild("Humanoid")~=nil and E:IsA("Model")then E.Parent=game:GetService("Workspace").Mobs;end;end;for N,I in pairs(game:GetService("Workspace").Mobs.Demons.Wilderness["Demon_7"]:GetChildren())do wait();if I:FindFirstChild("Humanoid")~=nil and I:IsA("Model")then I.Parent=game:GetService("Workspace").Mobs;end;end;for G,a in pairs(game:GetService("Workspace").Mobs.Demons["Cave_2"]["Demon_1"]:GetChildren())do wait();if a:FindFirstChild("Humanoid")~=nil and a:IsA("Model")then a.Parent=game:GetService("Workspace").Mobs;end;end;for y,q in pairs(game:GetService("Workspace").Mobs.Demons["Cave_2"]["Demon_2"]:GetChildren())do wait();if q:FindFirstChild("Humanoid")~=nil and q:IsA("Model")then q.Parent=game:GetService("Workspace").Mobs;end;end;for e,V in pairs(game:GetService("Workspace").Mobs.Demons["Cave_2"]["Demon_3"]:GetChildren())do wait();if V:FindFirstChild("Humanoid")~=nil and V:IsA("Model")then V.Parent=game:GetService("Workspace").Mobs;end;end;for c,j in pairs(game:GetService("Workspace").Mobs.Demons["Arrow_and_tamari_support"]["Demon_1"]:GetChildren())do wait();if j:FindFirstChild("Humanoid")~=nil and j:IsA("Model")then j.Parent=game:GetService("Workspace").Mobs;end;end;for e,a in pairs(game:GetService("Workspace").Mobs.Demons["Arrow_and_tamari_support"]["Demon_2"]:GetChildren())do wait();if a:FindFirstChild("Humanoid")~=nil and a:IsA("Model")then a.Parent=game:GetService("Workspace").Mobs;end;end;for G,C in pairs(game:GetService("Workspace").Mobs:GetChildren())do wait();if C:FindFirstChild("Humanoid")~=nil and C:IsA("Model")then if C:FindFirstChild("Humanoid").Health<=0 then C:Destroy();end;end;end;end);end;end));end;end)(Ze,jm,...);end;end;end;else do hm=function(...)local DH=(0);local ZH=(1);local kH={};local VH=((u and u()or _ENV));local GH=({[0X002]=Jm,[1]=kH});local jH,yH=pO(...);local BH=((VH==J and Xm or VH));jH=jH-0X1;do for Dl=0x0000,jH do if Om>Dl then(kH)[Dl]=yH[Dl+0X00001];else break;end;end;end;do if not rm then yH=nil;elseif bm then kH[Om]={n=jH>=Om and jH-Om+0x01 or 0X0,T(yH,Om+1,jH+0X1)};end;end;do if BH~=VH then if not(W)then do _ENV=BH;end;else W(hm,BH);end;end;end;local oH,OH,TH,LH=p(function()while true do local iv=(Lm[ZH]);local lv=iv[0X5];do ZH=ZH+1;end;if not(lv>=7)then if lv<0X0003 then if not(lv>=1)then do(kH)[iv[4]]=C(kH[iv[7]],kH[iv[0X6]]);end;else do if lv==2 then do(kH)[iv[4]]=kH[iv[0x7]]<kH[iv[6]];end;else do if kH[iv[0X7]]~=kH[iv[0X06]]then ZH=iv[4];end;end;end;end;end;else if not(lv<0X005)then if lv~=6 then kH[iv[4]]=BH[iv[3]];else kH[iv[0X04]]={T({},0X1,iv[0X007])};end;else if lv~=0X004 then do kH[iv[4]]=GH[iv[7]];end;else for Rj=iv[4],iv[0X7]do(kH)[Rj]=nil;end;end;end;end;else if lv>=0Xa then do if not(lv<0X0C)then do if lv~=0xD then do(kH)[iv[4]]=iv[0x3];end;else local Q_=(jm[0X00000]);kH[0]=Q_[1][Q_[2]];local t_=0;do ZH=ZH+1;end;ZH=ZH+0X00001;do iv=Lm[ZH];end;ZH=ZH+0X1;local S_=(kH[0]);(kH)[t_+0X01]=S_;kH[t_]=S_[iv[0x02]];ZH=ZH+1;(kH)[2]={};iv=Lm[ZH];do ZH=ZH+0X0001;end;kH[3]=iv[0X003];iv=Lm[ZH];ZH=ZH+1;do kH[4]=BH[iv[0x3]];end;ZH=ZH+1;ZH=ZH+0X1;iv=Lm[ZH];ZH=ZH+1;do t_=4;end;do S_=kH[0x4];end;kH[t_+0x1]=S_;do kH[t_]=S_[iv[2]];end;iv=Lm[ZH];do ZH=ZH+1;end;kH[0X6]=iv[3];do ZH=ZH+1;end;do t_=0x0004;end;kH[t_]=kH[t_](kH[t_+1],kH[t_+0X02]);DH=t_;ZH=ZH+1;ZH=ZH+1;iv=Lm[ZH];do ZH=ZH+0X1;end;kH[0X00004]=kH[4][iv[2]];ZH=ZH+0X1;ZH=ZH+1;ZH=ZH+1;Q_=jm[1];local D_=0x0003;(kH)[5]=Q_[0x1][Q_[0X02]];do iv=Lm[ZH];end;ZH=ZH+1;kH[5]=kH[5][iv[2]];ZH=ZH+0X1;do kH[4]=kH[0x4][kH[0X00005]];end;do ZH=ZH+0X00001;end;ZH=ZH+0X1;iv=Lm[ZH];ZH=ZH+0X1;(kH)[0x4]=kH[0x00004][iv[0X2]];ZH=ZH+0X1;ZH=ZH+1;do iv=Lm[ZH];end;ZH=ZH+1;(kH)[4]=kH[4][iv[0X02]];iv=Lm[ZH];do ZH=ZH+1;end;kH[0X4]=kH[4][iv[2]];ZH=ZH+1;ZH=ZH+1;do iv=Lm[ZH];end;ZH=ZH+1;kH[5]=iv[0x3];do iv=Lm[ZH];end;ZH=ZH+1;(kH)[0X6]=BH[iv[0X3]];iv=Lm[ZH];ZH=ZH+0X1;t_=0X6;S_=kH[0X6];(kH)[t_+1]=S_;do kH[t_]=S_[iv[0X002]];end;iv=Lm[ZH];do ZH=ZH+0X1;end;(kH)[0X00008]=iv[3];do ZH=ZH+0X1;end;t_=6;(kH)[t_]=kH[t_](kH[t_+0x1],kH[t_+2]);DH=t_;iv=Lm[ZH];ZH=ZH+0x1;(kH)[0X0006]=kH[0X6][iv[0X2]];ZH=ZH+1;ZH=ZH+1;ZH=ZH+1;Q_=jm[1];(kH)[0X7]=Q_[0X00001][Q_[0X2]];ZH=ZH+1;do ZH=ZH+0x1;end;iv=Lm[ZH];do ZH=ZH+1;end;kH[7]=kH[0X7][iv[0X2]];ZH=ZH+1;ZH=ZH+0X1;do ZH=ZH+0x1;end;do(kH)[6]=kH[0X6][kH[0X0007]];end;ZH=ZH+0X1;do ZH=ZH+0X1;end;iv=Lm[ZH];do ZH=ZH+0X1;end;kH[0x006]=kH[6][iv[2]];iv=Lm[ZH];ZH=ZH+1;do(kH)[6]=kH[6][iv[0X2]];end;do iv=Lm[ZH];end;ZH=ZH+0x001;(kH)[6]=kH[6][iv[2]];ZH=ZH+1;local N_=(kH[D_]);do for qy=D_+0x1,6 do N_=N_..kH[qy];end;end;(kH)[3]=N_;iv=Lm[ZH];ZH=ZH+0x001;kH[0x2][iv[3]]=kH[3];do ZH=ZH+1;end;t_=0X000;(kH[t_])(kH[t_+1],kH[t_+0X0002]);DH=t_-1;ZH=ZH+0X1;repeat local xk,Kk=Km,kH;if not(#xk>0)then else local Of={};for Bg,vg in o,xk do for B8,U8 in o,vg do if not(U8[1]==Kk and U8[0X2]>=0X0)then else local NX=U8[2];if not Of[NX]then Of[NX]={Kk[NX]};end;(U8)[0x1]=Of[NX];do U8[2]=0X1;end;end;end;end;end;until true;return;end;end;else do if lv~=0XB then local Ca=(iv[0X4]);local Da,Ua=kH[Ca]();do if Da then for P6=0X00001,iv[6]do(kH)[Ca+P6]=Ua[P6];end;ZH=iv[7];end;end;else end;end;end;end;else if not(lv<8)then if lv~=0X9 then local XV=(pm[iv[7]]);local CV,LV=XV[0x2],(nil);local nV=#CV;if nV>0X000 then LV={};for av=1,nV do local sv=CV[av];if sv[0X1]~=0X0 then LV[av-0X1]=jm[sv[2]];else LV[av-1]={kH,sv[0X2]};end;end;K(Km,LV);end;do kH[iv[0X004]]=gO(LV,XV,BH);end;else do ZH=iv[0x0007];end;end;else kH[iv[4]]=kH[iv[0X7]]+kH[iv[0X6]];end;end;end;end;end);if not(oH)then do if s(OH)=="\115tr\105ng"then if I(OH,'a\116\116\101\109\112\116\032\116o\032y\105\101l\100 a\099r\111\115\115 m\101ta\109\101t\104\111d/C%-ca\108l\032\098\111un\100\097\114\121')then return coroutine.yield();end;if I(OH,"^.-:%d+: ")then E('\076u\114\097\112\104\032\083cri\112t\058'..(zm[ZH-0X0001]or"(internal)")..": "..h(OH),0X0000);else(E)(OH,0X00);end;else E(OH,0x00);end;end;else if OH then if LH~=0X1 then return kH[TH](T(kH,TH+1,DH));else do return kH[TH]();end;end;elseif TH then return T(kH,TH,LH);end;end;end;end;end;end;end;end;end;end;end;end;do if not(W)then else W(hm,Xm);end;end;return hm;end;do jO=0X00004;end;else hO=1;do jO=0X000;end;end;end;else kO=function(bA)local RA=(a());local dA,vA="",0X0;while vA<0X2 do do if vA~=0 then i=i+RA;vA=2;else do for IU=0X0001,RA,7997 do local yU=(0X00001);local sU=nil;do repeat if yU~=0 then do sU=IU+7997-0X1;end;do yU=0;end;else do if not(sU>RA)then else sU=RA;end;end;yU=0x002;end;until yU>0X1;end;local uU=({f(Z,i+IU-0X001,i+sU-0X001)});for ca=0x0,1 do if ca~=0X0 then do dA=dA..v(T(uU));end;else for jK=1,#uU do local RK=(0X0);repeat do if RK~=0 then zO=(bA*zO+203)%0X100;RK=0x2;else(uU)[jK]=C(uU[jK],zO);do RK=0x001;end;end;end;until RK>=0X2;end;end;end;end;end;vA=1;end;end;end;return dA;end;do jO=3;end;end;end;end;end;until jO==6;local Y=(rawget);local vO=fO();jO=0X1;while"\037b"do if not(jO<=0)then if jO~=1 then sO=nil;jO=0X00000;else do EO[0X2]=sO;end;jO=2;end;else return gO(wO,vO,J)(...);end;end;end)(string.sub,setfenv,select,ipairs,3,5,0X8d,table.insert,"LPH}x0010,"l\115\104i\102\116",27226,nil,0X0000eD,4,0X00001,0Xf,0xa,setmetatable,unpack,0X9,false,0x0,table.unpack,0x00006,next,string.gsub,bit,assert,coroutine,0XB,string,tostring,13,2,bit32,type,string.match,{30978,3643026862,3222609706,1733503484,3306122191,0x1cF1199d,0X6261E3C9,2579265631,2742569021},...);
